{
    "title": "Feature Project Proposal: WP Notify \u2013 Make WordPress Core",
    "body": "\nSkip to content\n\n\nLog InRegister \n\n\n\n\n\n\nWordPress.org\n\n\n \n\n\n\n\n\n\n\nNewsDownload & ExtendGet WordPressThemesPatternsPluginsMobileHostingOpenverse \u2197\ufe0eLearnLearn WordPressDocumentationForumsDevelopersWordPress.tv \u2197\ufe0eCommunityMake WordPressPhoto DirectoryFive for the FutureWordCamp \u2197\ufe0eMeetups \u2197\ufe0eJob Board \u2197\ufe0eAboutAbout WordPressShowcaseEnterpriseGutenberg \u2197\ufe0eWordPress Swag Store \u2197\ufe0eGet WordPress\n\n\n\n\n\n\n\n\n\n\n\nSearch in WordPress.org\n\n\n\n\n\n\n\n\n\n\t\tGet WordPress\t\n\n\nMenu\n\nMake WordPress Core\n\n\nTickets\nComponents\nHandbook\nBrowse Source\nTrac Timeline\nCreate a New Ticket\n \n\n\n\nHide welcome box\n\n\n\n\nWelcome!\nThe WordPress coreCore Core is the set of software required to run WordPress. The Core Development Team builds WordPress. development team builds WordPress! Follow this site for\u00a0general updates, status reports, and the occasional code debate. There\u2019s lots of ways to contribute:\nFound a bugbug A bug is an error or unexpected result. Performance improvements, code optimization, and are considered enhancements, not defects. After feature freeze, only bugs are dealt with, with regressions (adverse changes from the previous version) being the highest priority.? Create a ticket in the bug tracker.\nWant to contribute? Get started quickly with tickets marked as good first bugs for new contributors or join a bug scrub. There\u2019s more on the reports page, like patches needing testing, and on feature projects page.\nOther questions? Here is a detailed handbook for contributors, complete with tutorials.\n\n\nCommunication\nCore uses Slack\u00a0for real-time communication. Contributors live all over the world, so there are discussions happening at all hours of the day.\nCore development meetings are every Wednesday at 20:00 UTC in the #core channel on Slack. Anyone can join and participate or listen in!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \nJonathan Bossenger\n\n8:30 pm on August 5, 2019 \n\n\n\nTags: feature-notifications ( 45 ) \u00a0\u00a0\n\t\t\t\t\n\nFeature Project Proposal: WP Notify\n\n\nThis detailed proposal was originally drafted by @schlessera, who unfortunately does not have the resources to commit to executing the project. I am however thankful that he has agreed to assist, in an advisory role. \nIntroduction\nWordPress is currently lacking a fundamental mechanism: sending notifications to users to give them feedback about state changes in the system. Traditionally, pluginPlugin A plugin is a piece of software containing a group of functions that can be added to a WordPress website. They can extend functionality or add new features to your WordPress websites. WordPress plugins are written in the PHP programming language and integrate seamlessly with WordPress. These can be free in the WordPress.org Plugin Directory https://wordpress.org/plugins/ or can be cost-based plugin from a third-party developers and CoreCore Core is the set of software required to run WordPress. The Core Development Team builds WordPress. have been using adminadmin (and super admin) notices for this purpose, but this solution is lackluster at best and comes with a lot of disadvantages:\nThey are rendered into the normal working area in the dashboard and can even push the actual page content below the fold.The user has no control over how or when they want to deal with them, therefore they see them in a mostly negative fashion.They are nothing more than printed HTMLHTML HyperText Markup Language. The semantic scripting language primarily used for outputting content in web browsers.. Because they lack any kind of structure, it is not possible to manipulate them in an automated fashion.Their persistence is not regulated, which leads to many different implementations as well as cruft in the database.For the above reasons, there\u2019s a general consensus that admin notice are not up to the task and need a more robust replacement that can deal with current and future notification needs.\nI hereby want to officially kickstart a Feature Project called \u201cWP Notify\u201c.\nProject Scope\nThe initial project will cover an extensibleExtensible This is the ability to add additional functionality to the code. Plugins extend the WordPress core software. backend implementation as well as a single frontend use case.\nA. Backend implementation\nThe backend implementation will cover the following elements:\nAn object model that is extensible as well as serializable (to JSONJSON JSON, or JavaScript Object Notation, is a minimal, readable format for structuring data. It is used primarily to transmit data between a server and web application, as an alternative to XML.).A persistence abstraction that comes with an initial WPDB implementation.A background queue that processes notifications to distribute them across channels, for use cases where this is a costly operation, like sending them through email.A simplified procedural APIAPI An API or Application Programming Interface is a software intermediary that allows programs to interact with each other and share data in limited, clearly defined ways. that allows for easy manipulations the way plugin developers are accustomed to.REST APIREST API The REST API is an acronym for the RESTful Application Program Interface (API) that uses HTTP requests to GET, PUT, POST and DELETE data. It is how the front end of an application (think \u201cphone app\u201d or \u201cwebsite\u201d) can communicate with the data store (think \u201cdatabase\u201d or \u201cfile system\u201d) https://developer.wordpress.org/rest-api/. controllers that provide endpoints to manage the notification from the frontend.B. Frontend use case\nThe frontend use case will cover the following elements:\nAn admin bar integration that shows notification state and opens a panel to read and dismiss current notifications.An settings page that lets the user control which notifications to show/hide in the admin bar and which notifications to forward through email.Technical Requirements\nObjects must be serializable to JSON in such a way that it can be sent to the client, either as a localized JavaScriptJavaScript JavaScript or JS is an object-oriented computer programming language commonly used to create interactive effects within web browsers. WordPress makes extensive use of JS for a better user experience. While PHP is executed on the server, JS executes within a user\u2019s browser. https://www.javascript.com/. snippet or as a REST API response.A notification can have one or more recipients, which can be users, roles or a mixture of both.A recipient can configure the channel(s) they want to receive the notifications in, on a \u201cper-group\u201d basis.Distribution across channels is not directly coupled to the frontend request, but works as a background queue.The admin bar integration needs to build on top of the work done with GutenbergGutenberg The Gutenberg project is the new Editor Interface for WordPress. The editor improves the process and experience of creating new content, making writing rich content much simpler. It uses \u2018blocks\u2019 to add richness rather than shortcodes, custom HTML etc. https://wordpress.org/gutenberg/ and use a reactive interface powered by the REST API.Some Clarifications\nDid this just come out of the blue?\nNo, the need for a notification subsystem has been identified a long time ago. Current discussions have been centralized in the Trac ticket #43484.\nWhy does this document talk about a \u201csingle frontend use case\u201d? Does the proposal not already cover everything anyway?\nNo, having a sort of \u201cadmin bar hub\u201d to manage your notifications is indeed only one potential use of the the notifications subsystem. The way it is currently planned, it could easily have other use cases, like the following examples:\nForwarding notifications to a webhook, for integrations into third-party services like SlackSlack Slack is a Collaborative Group Chat Platform https://slack.com/. The WordPress community has its own Slack Channel at https://make.wordpress.org/chat/.Providing a webhook to feed notifications from third-party services like GitHubGitHub GitHub is a website that offers online implementation of git repositories that can easily be shared, copied and modified by other developers. Public repositories are free to host, private repositories require a paid subscription. GitHub introduced the concept of the \u2018pull request\u2019 where code changes done in branches by contributors can be reviewed and discussed before being merged be the repository owner.  https://github.com/ into WordPressShowing notifications in a management system like cPanel or ManageWPIntegrating notifications contextually into other parts of the admin experience in a targeted wayProviding a \u201cfeed\u201d view/endpointLetting other servers or tools send notifications to WordPress users/roles over the REST API, like a cron job completing a shell maintenance taskAttaching server notification systems like notify-send or growl to your WordPress dashboard\u2026Why have so many complex moving pieces? Isn\u2019t this called over-engineering?\nComplex solutions can easily be adapted to fit simpler needs, while the opposite is not true. As you can see with the current admin notices, a simplistic solution that tries to solve a complex problem causes more harm than good, as you cannot just get rid of inherent complexity. On the contrary, a solution that is not properly adapted will cause additional complexity just because of the amount of side-effects it will generate.\nI am certain that building a notifications mechanism for an entire platform like WordPress that fits the entire spectrum of scenarios from simple blogs to enterprise-grade custom solutions is inherently complex. An abstraction allows us to put the main extensibility points in place to stay future-proof and then concentrate on the few basic implementations we need for 80% use cases\u2026 without having locked out developers with more exotic needs and while at the same time leaving the solution open to creative improvements in the future.\nWhat is this \u201csimplified procedural API\u201d all about?\nWhile building an extensible object model will allow us to extend the implementations in a safe way in the future, it also comes with more complex usage when interacted with directly.\nThat is why we should include a simplified procedural wrapper around the object model that mimics the way plugin & theme developers are used to work with WordPress.\nAs an example, instead of creating an instance of a factory first, to then retrieve a base notification with a simple message and a single recipient to it, we could have a simplified wrapper that looks like this:\n\n// Create a new notification for the current user.\nwp_notify( 'MyBackupPlugin', get_current_user_id(), 'Backup completed!' );\n\n// Mark a specific notification as read.\nget_notification( $notification_id )->mark_as_read();\n\n\nThese procedural functions come with a default setup that can be controlled via actions & filters.\nSuch a simplified layer allows us to have the best of both worlds: robust and extensible behind the scenes, and simple and intuitive facing the user.\nSo we\u2019re building a complex object model and then wrap it with simplified functions. This is not how WordPress code is usually done\u2026\nIndeed. Given that this project is mostly isolated and can be approached in an unencumbered way, it offers the perfect opportunity to improve the general way WordPress Core code is done. It should demonstrate that it is possible to get the combined benefits of both an extensible object model that is robust to work with as well as an intuitive public-facing API that provides a low barrier of entry.\nThere is a lot of momentum right now on the WordPress Core developer front. But general coding conventions are still based in large parts on what we inherited from the project\u2019s roots. This project can help define a new set of WordPress-specific coding patterns that are not tied to the compromised patterns we inherited from the PHPPHP The web scripting language in which WordPress is primarily architected. WordPress requires PHP 5.6.20 or higher 4 era.\nYes, this is not how WordPress code is usually done \u2026 yet! But we can change that!\nWasn\u2019t there a similar Feature Project already?\nYou\u2019re referring to the post by John Blackbourn that he wrote in 2016. That project proposal never really got off the ground, and I got confirmation from John that it is abandoned and should hopefully be replaced, as the need for it is still there.\nCall for Volunteers\nIf the above sounds like something you would like to contribute to, please either write a brief comment below this post, with the area you are interested in and the skills you can offer.\nAlternatively, you can join the discussions on Slack in the #feature-notifications channel or on Trac ticket #43484.\nThis project covers a lot of different areas, like advanced backend code, scalable database gymnastics, reactive JavaScript code and dynamic UIUI User interface/UXUX User experience design.\nAll help is welcome, but please be aware that different topics will be in focus at different stages of the project.\nNext Steps\nThere have already been a number of interested parties on the TracTrac An open source project by Edgewall Software that serves as a bug tracker and project management tool for WordPress. ticketticket Created for both bug reports and feature development on the bug tracker. or in the #feature-notifications channel and I look forward to your feedback, comments and suggestions. By the 19th of August I plan to have an initial project kick off meeting scheduled, so that we can set up a plan of how best to move forward.Share this:TwitterFacebook\n\n\n\n\n\n\n\n\n\n\n\n\nJb Audras\n\n8:51 pm on August 5, 2019 \n\n\n\n\nGreat news!\nThanks @psykro for taking ownership on @schlessera\u2019s project!\nI just joined #feature-notifications channel. Happy to help where I can!\nCheers,\nJb\n\n\n\n\n\n\n\n\nJonathan Bossenger\n\n6:21 am on August 7, 2019 \n\n\n\n\nThanks @audrasjb\n\n\n\n\n\n\n\n\n\n\nRachel Cherry\n\n9:05 pm on August 5, 2019 \n\n\n\n\nThanks Johnathan! The notifications in the adminadmin (and super admin) dashboard need some serious consideration so it\u2019s awesome to hear things are moving forward.\nFor me, outside of the obvious design issues, the majority of the problem is that a lot of developers and pluginPlugin A plugin is a piece of software containing a group of functions that can be added to a WordPress website. They can extend functionality or add new features to your WordPress websites. WordPress plugins are written in the PHP programming language and integrate seamlessly with WordPress. These can be free in the WordPress.org Plugin Directory https://wordpress.org/plugins/ or can be cost-based plugin from a third-party/themes shops use the notices as a way to nag or advertise. \nI am often inundated with plugin notices that aren\u2019t vital to my use and aren\u2019t showing a change of state. Most of the time they want me to donate or give them a review or check out their other products.\nIt\u2019s tolerable when they only display these notices on their settings/tools page, but then you get the obnoxious plugins that display them on every page of the admin. And then that\u2019s the last time I use that plugin or any plugins from that developer or shop.\nBut most are not so lucky. I can build my own plugins, most cannot. They have to grin and bear the madness.\nWith all that said, I read this proposal and how you want to be able to export these notifications to other services and my instant reaction was \u201cgreat. now we\u2019re gonna give developers a way to spam us OUTSIDE WordPress too\u201d.\nI see you and Alain have given lots of thought to the technical and design issues with notifications, but I feel that\u2019s only half the battle. You can fix all of that but people will still take advantage.\nHave you given any thought to the (lack of) governance issues with notifications?\nI would love to see this project include work on defining boundaries and establishing policies for what the notification system can be used for.\nThanks for all of your work!\n\n\n\n\n\n\n\n\ndonmhico\n\n12:38 am on August 6, 2019 \n\n\n\n\n+1 to the concern of pluginPlugin A plugin is a piece of software containing a group of functions that can be added to a WordPress website. They can extend functionality or add new features to your WordPress websites. WordPress plugins are written in the PHP programming language and integrate seamlessly with WordPress. These can be free in the WordPress.org Plugin Directory https://wordpress.org/plugins/ or can be cost-based plugin from a third-party / theme developers may abuse this upcoming WP Notify. But unfortunately that\u2019s something we have little control to. At most, what we can do is be more strict in screening the plugins / themes submitted in WP.org\u2019s repo and make sure that they are not abusing the notification APIAPI An API or Application Programming Interface is a software intermediary that allows programs to interact with each other and share data in limited, clearly defined ways..\n\n\n\n\n\n\n\n\nMichael Nelson\n\n1:01 am on August 6, 2019 \n\n\n\n\nYa I think someone from the pluginPlugin A plugin is a piece of software containing a group of functions that can be added to a WordPress website. They can extend functionality or add new features to your WordPress websites. WordPress plugins are written in the PHP programming language and integrate seamlessly with WordPress. These can be free in the WordPress.org Plugin Directory https://wordpress.org/plugins/ or can be cost-based plugin from a third-party review team will need to be involved in deciding what the new rules will be, seeing how they\u2019re the ones who will ultimately be enforcing them.\n\n\n\n\n\n\n\n\nmikehealy\n\n1:57 am on August 6, 2019 \n\n\n\n\nPerhaps it could be controlled like notification permissions on your phone?\nThe site owner could explicitly enable certain types of notifications to be sent to them outside of WordPress, and the option would be off by default.\n\n\n\n\n\n\n\n\nMichael Nelson\n\n4:22 am on August 6, 2019 \n\n\n\n\nYa giving the site adminadmin (and super admin)/owner that level of control would probably be good.\n\n\n\n\n\n\n\n\n\n\n\n\nMike Schinkel [WPLib Box project lead]\n\n1:08 am on August 6, 2019 \n\n\n\n\nFor me, outside of the obvious design issues, the majority of the problem is that a lot of developers and pluginPlugin A plugin is a piece of software containing a group of functions that can be added to a WordPress website. They can extend functionality or add new features to your WordPress websites. WordPress plugins are written in the PHP programming language and integrate seamlessly with WordPress. These can be free in the WordPress.org Plugin Directory https://wordpress.org/plugins/ or can be cost-based plugin from a third-party/themes shops use the notices as a way to nag or advertise.\nThis. 1000% this.\n\n\n\n\n\n\n\n\nIpstenu (Mika Epstein)\n\n10:36 pm on August 6, 2019 \n\n\n\n\nThe reality there is plugins and themes will abuse the lack of system as much as the system.\nAlready, many plugins have built their own systems, which are far worse and not controllable. But if we have a single hub system for notifications, we can then via-coreCore Core is the set of software required to run WordPress. The Core Development Team builds WordPress. (and \u2026 plugins \u2026) give site owners some control back. Say you put in a pluginPlugin A plugin is a piece of software containing a group of functions that can be added to a WordPress website. They can extend functionality or add new features to your WordPress websites. WordPress plugins are written in the PHP programming language and integrate seamlessly with WordPress. These can be free in the WordPress.org Plugin Directory https://wordpress.org/plugins/ or can be cost-based plugin from a third-party to suppress all notifications. Then no matter how much a plugin or theme abuses the system, it\u2019s all silence for you.\nWon\u2019t stop people from going outside the system, but it will stop the rookies from writing some gorram awful code to invent a wheel, and it\u2019ll give a control-plugin a chance to wrangle in notifications, similar to how your phone does, perhaps.\n\n\n\n\n\n\n\n\n\n\nMike Schinkel [WPLib Box project lead]\n\n10:21 pm on August 5, 2019 \n\n\n\n\nGreat to see forward movement on this.\nIs there a GitGit Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency. Git is easy to learn and has a tiny footprint with lightning fast performance. Most modern plugin and theme development is being done with this version control system. https://git-scm.com/. repo where work is being done?  If it was in the tracTrac An open source project by Edgewall Software that serves as a bug tracker and project management tool for WordPress. ticketticket Created for both bug reports and feature development on the bug tracker. or this point, I obviously missed it.\n\n\n\n\n\n\n\n\nMichael Nelson\n\n11:49 pm on August 5, 2019 \n\n\n\n\n+100 this!\nI\u2019m interested in contributing. I\u2019ve contributed to the REST APIREST API The REST API is an acronym for the RESTful Application Program Interface (API) that uses HTTP requests to GET, PUT, POST and DELETE data. It is how the front end of an application (think \u201cphone app\u201d or \u201cwebsite\u201d) can communicate with the data store (think \u201cdatabase\u201d or \u201cfile system\u201d) https://developer.wordpress.org/rest-api/., Multisitemultisite Used to describe a WordPress installation with a network of multiple blogs, grouped by sites. This installation type has shared users tables, and creates separate database tables for each blog (wp_posts becomes wp_0_posts). See also network, blog, site, and am a plug-in developer.\nI love the technical plan so far. It sounds like it has the potential to bring some sanity to the state of notifications in WordPress for both site owners and developers.\nIt would be great to develop a plan that allows for this to be introduced to coreCore Core is the set of software required to run WordPress. The Core Development Team builds WordPress. in incrementally (otherwise I\u2019m afraid it might suffer the fate of other great initiatives like the fields APIAPI An API or Application Programming Interface is a software intermediary that allows programs to interact with each other and share data in limited, clearly defined ways., which were great but hard to adopt all-at-once).\nI\u2019m a bit afraid the politics of notifications (like Rachel brought up, where site creators detest spammy notifications, but pluginPlugin A plugin is a piece of software containing a group of functions that can be added to a WordPress website. They can extend functionality or add new features to your WordPress websites. WordPress plugins are written in the PHP programming language and integrate seamlessly with WordPress. These can be free in the WordPress.org Plugin Directory https://wordpress.org/plugins/ or can be cost-based plugin from a third-party owners see a huge increase in support from them) is another pitfall to navigate.\nBut I really hope this progresses and hope to contribute to it.\n\n\n\n\n\n\n\n\nKyle Maurer\n\n12:22 am on August 7, 2019 \n\n\n\n\nYou\u2019re awesome dude!\n\n\n\n\n\n\n\n\n\n\ndonmhico\n\n12:48 am on August 6, 2019 \n\n\n\n\nI love the idea of a better mechanism for notifications. But like Rachel mentioned above we need to somehow find a way to minimize the \u201cnoise\u201d from plugins / themes.\n\nAn settings page that lets the user control which notifications to show/hide in the adminadmin (and super admin) bar and which notifications to forward through email.\nThis is vital. The current `admin_notice` hook doesn\u2019t have this mechanism which results to a \u201cnoisy\u201d admin dashboard.\n\n\n\n\n\n\n\n\nCaspar H\u00fcbinger\n\n7:01 am on August 6, 2019 \n\n\n\n\nI  feel nothing short of thrilled about this proposal, the abstract reads great! \nRachel brought up a key question I\u2019d like to second, of course: how is WordPress going to own the screen estate it makes accessible to third-party developers and protect a powerful feature like notifications from being mis-/abused? \nTo re-state some of the potential premises here: \n\nIt is so powerful of a feature because it directly deals with and has the potential to either attract, or consume, the most battled-for resource in software design: human attention.\n\nIt is also a feature facing a major challenge: to transport any type of user-directed message, from system-critical to marketing, in a way that helps users prioritise those messages while the feature itself must avoid being too opinionated about their content.\n\nFinally (and this may sound more like a premature assumption than a premise), it is a feature that, at some point in the future, may have to enable communication both ways \u2013 providing not only a gateway to user attention, but also a way for users to send feedback to a notifying agent (pluginPlugin A plugin is a piece of software containing a group of functions that can be added to a WordPress website. They can extend functionality or add new features to your WordPress websites. WordPress plugins are written in the PHP programming language and integrate seamlessly with WordPress. These can be free in the WordPress.org Plugin Directory https://wordpress.org/plugins/ or can be cost-based plugin from a third-party/theme provider, or WordPress coreCore Core is the set of software required to run WordPress. The Core Development Team builds WordPress.), e.g. by \u2018flagging\u2019 any inappropriate use of the feature.\n\n\nBased on collective experience, I agree there have to be expectations and boundaries put in place. WordPress clearly not only has a technical mandate here, but one for design, and an educational one as well, all the while its mission must be \u2018people-first\u2019 which means to empower both, users and developers. Any bias towards either one of these groups could pose major obstacles in the reception of the work done.\nBased on the outlook Jonathan has provided on software architecture, I believe these two aspects \u2013 code and the implications of how it should and should not be used \u2013 can progress asynchronously for a while, informing each other but not holding each other back, at least not before this project gets to a technical MVPMinimum Viable Product \"A minimum viable product (MVP) is a product with just enough features to satisfy early customers, and to provide feedback for future product development.\" - WikiPedia in the Feature PluginFeature Plugin A plugin that was created with the intention of eventually being proposed for inclusion in WordPress Core. See Features as Plugins..\nI\u2019d love to see discussion happen in an organised, time-boxed, and moderated form across multiple channels (like here on Make, but also through other blogs, newsletters, talks, Contributor Days etc). Ideally, decisions regarding limitations and expected behaviour will be based on data from as many groups of stakeholders as possible. Perhaps that is something the WP Governance project could help to facilitate?\nFor the time being, I\u2019m excited to see this initiative being kicked off for real and keen to follow its progress.\n\n\n\n\n\n\n\n\ndingo-d\n\n7:26 am on August 6, 2019 \n\n\n\n\nRachel brought valid points, but ultimately I don\u2019t think it has much to do with the development of the notifications APIAPI An API or Application Programming Interface is a software intermediary that allows programs to interact with each other and share data in limited, clearly defined ways. (or WP Notify), but how pluginPlugin A plugin is a piece of software containing a group of functions that can be added to a WordPress website. They can extend functionality or add new features to your WordPress websites. WordPress plugins are written in the PHP programming language and integrate seamlessly with WordPress. These can be free in the WordPress.org Plugin Directory https://wordpress.org/plugins/ or can be cost-based plugin from a third-party and theme review teams are going to handle the use cases.\nIn this regard the community discussion is vital so that we can prevent abuse, but I don\u2019t think that we should limit the potential power of the new project, just out of fear that somebody will misuse it (and there are people who will definitely do that no matter what).\n\n\n\n\n\n\n\n\nCaspar H\u00fcbinger\n\n7:38 am on August 6, 2019 \n\n\n\n\nSo, people will definitely misuse a feature as powerful as this one and we should just stand by and watch it happen and not try to mitigate misuse through dedicated user research, applied design thinking, and ownership of the powers we set lose\u2026 is that what you\u2019re saying?\n\n\n\n\n\n\n\n\ndingo-d\n\n7:55 am on August 6, 2019 \n\n\n\n\nNo, I\u2019m saying that we need a community discussion on how to mitigate the potential misuse, but that it shouldn\u2019t hinder the development side of the new feature.\nPeople will always find ways to misuse a certain thing, no matter how hard we try to mitigate it. That\u2019s just the reality of things.\nOften times, at WordPress, the features are discussed until no development is being done and things just die away (just take a peek into the autoloading and the usage of composer in tracTrac An open source project by Edgewall Software that serves as a bug tracker and project management tool for WordPress.). Discussion should happen in parallel, but shouldn\u2019t hinder the development. That\u2019s my opinion \ud83d\ude09\n\n\n\n\n\n\n\n\nCaspar H\u00fcbinger\n\n8:02 am on August 6, 2019 \n\n\n\n\n\ud83d\udc4d\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nArchie22is\n\n8:24 am on August 6, 2019 \n\n\n\n\nThis one gets +1000 from me. Definitely a great proposal. The usage cases that come to my mind are definitely unlimited.\n\n\n\n\n\n\n\n\nAlain Schlesser\n\n9:31 am on August 6, 2019 \n\n\n\n\nA quick note about governance and abuse:\nThe original intent of the proposal was to let the plugins/themes decide WHAT to show, and let the users decide IF and HOW/WHERE to show it.\nThis would mean that there is some form of categorisation/prioritisation that plugins/themes can choose from. Users can then flexibly configure what they want to be bothered with, and through which channel(s).\nThe governance part would then basically be that the pluginPlugin A plugin is a piece of software containing a group of functions that can be added to a WordPress website. They can extend functionality or add new features to your WordPress websites. WordPress plugins are written in the PHP programming language and integrate seamlessly with WordPress. These can be free in the WordPress.org Plugin Directory https://wordpress.org/plugins/ or can be cost-based plugin from a third-party/theme review teams ensure that plugins/themes don\u2019t use deceiving categorisation/prioritisation. But even if they do, users would still be able to just switch off the offenders.\nThis is only a preliminary plan, of course, and all discussion is fruitful and welcome. But I think a general approach of splitting up the responsibilities between providers and consumers (instead of letting the providers do what they want and leaving the consumers powerless as is now) is a solid way of improving on the situation.\n\n\n\n\n\n\n\n\nCaspar H\u00fcbinger\n\n9:40 am on August 6, 2019 \n\n\n\n\n\ud83d\udc4d\n\n\n\n\n\n\n\n\nmikehealy\n\n9:51 pm on August 6, 2019 \n\n\n\n\nSounds good.\nWould having categories similar to error logging (info, notice, error, critical etc) work? Users could then have the choice of how they receive each class of notification, and plugins could be reprimanded or punished for abusing the categories (for example putting ads in the critical group).\n\n\n\n\n\n\n\n\nIpstenu (Mika Epstein)\n\n10:39 pm on August 6, 2019 \n\n\n\n\nSpeaking for the pluginPlugin A plugin is a piece of software containing a group of functions that can be added to a WordPress website. They can extend functionality or add new features to your WordPress websites. WordPress plugins are written in the PHP programming language and integrate seamlessly with WordPress. These can be free in the WordPress.org Plugin Directory https://wordpress.org/plugins/ or can be cost-based plugin from a third-party team, it\u2019d be easier to grep someone for using that system and smack \u2019em for abuse than it is today with a bajillion home-grown systems, half of which don\u2019t work.\nPLUS someone could easily make a plugin that limits the abuse by other plugins \ud83d\ude42 Notification managers would have a standard!\n\n\n\n\n\n\n\n\n\n\nIpstenu (Mika Epstein)\n\n10:40 pm on August 6, 2019 \n\n\n\n\n+make.wordpress.org/plugins\n\n\n\n\n\n\n\n\nAndrei Igna\n\n7:37 am on August 7, 2019 \n\n\n\n\nThis is great! As a pluginPlugin A plugin is a piece of software containing a group of functions that can be added to a WordPress website. They can extend functionality or add new features to your WordPress websites. WordPress plugins are written in the PHP programming language and integrate seamlessly with WordPress. These can be free in the WordPress.org Plugin Directory https://wordpress.org/plugins/ or can be cost-based plugin from a third-party/theme developer I noticed there\u2019s no easy way to handle this part in WordPress, and was thinking to propose something similar too. I\u2019ve put some time time and thoughts into this, and it\u2019s great to see most of the things are found in this feature plan.\nThere\u2019s one idea which I wanna mention here, and I think it will be helpful for end users and will help with preventing abuse. The idea is Notification groups.\nA. Backend implementation\n\nThe object model for notifications should have a required group field, and all notifications sent must be grouped based on the user\u2019s interest or notification source (something to be discussed more).\n\n\n\n// Let the admins know there's an action needed for a plugin\nwp_notify( $group = 'plugin/my-plugin', $usersOrRoleOrCapability = 'admin', $message = 'My Plugin requires attention or it will stop working soon.' );\n\n// Let the editors know a plugin finished a scheduled job\nwp_notify( $group = 'plugin/another-plugin', $usersOrRoleOrCapability = 'editor', $message = 'Another plugin finished that job you set up' );\n\n// Notify site owners about theme\nwp_notify( $group = 'theme', $usersOrRoleOrCapability = 'manage_options', $message = 'Theme X needs this setting to show this section' );\n\nB. Frontend use case\nHaving notification groups will enable a few extra options for end users on frontend:\n\nOn settings page allow muting by notification groups. Example based on the 3 notifications sent above: show the groups \u201cPlugin\u201d, \u201cPlugin \u2013 My Plugin\u201d, \u201cPlugin \u2013 Another plugin\u201d, \u201cTheme\u201d and allow to mute/unmute each one.\n\nEach notification should display the groups & subgroups, and allow muting for each. Example for first notification: \u201cMute all plugin notifications\u201d and \u201cMute My Plugin notifications\u201d\n\n\nI mention this mainly to start the discussion, and hope it will lead to a good implementation in WordPress. Will also follow the thread and contribute when this starts to be built\n\n\n\n\n\n\n\n\nPascal Birchler\n\n7:37 am on August 7, 2019 \n\n\n\n\nAre there any examples of what kind of notifications this would be useful for?\nI am a bit worried that this has a strong focus on backend implementation, and the frontend part gets just two sentences, suggesting a notification panel in the adminadmin (and super admin) toolbar. I feel like more thought should be put into the UXUX User experience of this.\nThere have also been learnings about notifications in GutenbergGutenberg The Gutenberg project is the new Editor Interface for WordPress. The editor improves the process and experience of creating new content, making writing rich content much simpler. It uses \u2018blocks\u2019 to add richness rather than shortcodes, custom HTML etc. https://wordpress.org/gutenberg/, BuddyPress and other projects. It would be good to chat and collaborate with these teams.\n\n\n\n\n\n\n\n\nAndrea Fercia\n\n9:21 am on August 7, 2019 \n\n\n\n\n> I feel like more thought should be put into the UXUX User experience of this.\nI\u2019d second Pascal\u2019s opinion. For example, I\u2019m not sure the adminadmin (and super admin) bar is the best place for notifications:\n\n\non the front end, the admin bar can be dismissed via user\u2019s preferences\n\non small screens, the admin bar is already very crowded (see all the recent problems to find a spot for the \u201crecovery mode\u201d notice\n\nin terms of accessibilityAccessibility Accessibility (commonly shortened to a11y) refers to the design of products, devices, services, or environments for people with disabilities. The concept of accessible design ensures both \u201cdirect access\u201d (i.e. unassisted) and \u201cindirect access\u201d meaning compatibility with a person\u2019s assistive technology (for example, computer screen readers). (https://en.wikipedia.org/wiki/Accessibility), the DOM order is important and the admin bar has a lot of content before it\n\n\nSide note: I\u2019d like to give credit to Tim Hengeveld as co-author of this proposal as he created the Trac ticket that started this project (which in turn, elaborates on the original proposal from John Blackbourn)\n\n\n\n\n\n\n\n\nErin 'Folletto' Casali\n\n12:04 pm on September 2, 2019 \n\n\n\n\nThanks for these notes. I\u2019d add that I suggested in the linked ticketticket Created for both bug reports and feature development on the bug tracker. to look up the design that has been worked on and agreed already by many regarding an adminadmin (and super admin) bar redesign, here. That should solve at least the \u201csmall screens\u201d issue, and possibly the bar having \u201clot of content\u201d issue (but that\u2019s something we can see once we get to prototype it).\n\n\n\n\n\n\n\n\n\n\nJonathan Bossenger\n\n9:45 am on August 7, 2019 \n\n\n\n\nPersonally, I have no plans to focus only on the technical implementation without already  having a solid plan on what the user experience should be.\nThis is not a project to be taken lightly, nor one that I expect to be ready to ship any time soon. I have already been advised that it would be a good idea to have a co-lead on this, and from my perspective having someone who has a strong focus on the user experience, and who is dedicated to seeing this through to the end, would be the perfect co-lead. Volunteers for that position welcome!\n@afercia thank you also for highlighting @hedgefield\u2018s initial work on this. I plan to confer with and take advice from the folks who have laid the groundwork before me, as well as other key members of the WordPress project, as we move forward.\n\n\n\n\n\n\n\n\nRachel Cherry\n\n12:57 pm on August 7, 2019 \n\n\n\n\nThanks everyone for the conversation and follow up!\nI don\u2019t think anyone expects/believes the tech itself is going to eradicate notification spam but that doesn\u2019t mean that we, as a community, cannot make rules/boundaries/expectations so that when devs ultimately break them, we have the power to remove them from the repo.\nAnd, yes, devs will do their own thing outside the new notification system but that\u2019s also where governance can make a difference.\nWe can\u2019t always control how people use WordPress software, but we can control who gets hosted in the repo. We can control guidelines, boundaries, and expected use for our software. We can tell developers they have to use our notification system, and play by the rules, if they want to be hosted in the repo.\nAs Caspar pointed out, new, fancy tech is great and all (and it does sound awesome) but we have to be responsible for the power and experience it creates. The current notification system, even with its minimum functionality, is already being exploited and you\u2019re basically talking about giving the system an unlimited playground. We have to discuss and research its implications. It has to be a part of the tech design process.\nNo one wants to hinder tech development but the whole point of the notification system is to help the user be more informed about their site. We have to be thinking about the user experience. It is one and the same with the code.\nFor example, here\u2019s some user research for you.\nI, as a user, don\u2019t want the solution to be \u201cwell just remove all notifications\u201d because some of them are actually important. Yes, being able to group them according to type will help because I can disable certain types. But that\u2019s not enough. If there\u2019s no attempt at governance of what constitutes a valid notification, I will just turn them all off rather than deal with the noise. And then what\u2019s the point of the system?\n\n\n\n\n\n\n\n\nJonathan Bossenger\n\n1:52 pm on August 7, 2019 \n\n\n\n\nThanks Rachel, I do appreciate your input.\nI do plan on following an approach where we spend a goodly amount of time designing the new system before we even write a single line of code. This is a problem that needs an informed approach, not just a quick fix.\nAs such, I would appreciate any input and feedback you have on the project, as it takes shape. Right now I\u2019m focusing on welcoming interested parties, and then planning next steps.\n\n\n\n\n\n\n\n\nRachel Cherry\n\n1:57 pm on August 7, 2019 \n\n\n\n\nThanks Jonathan! I\u2019m excited about the project and grateful for you and others involved. I know these things take a lot of dedication and time. I\u2019ll be sure to follow along. Let me know if/how I can help.\n\n\n\n\n\n\n\n\nJonathan Bossenger\n\n2:05 pm on August 7, 2019 \n\n\n\n\nThanks, I will.\n\n\n\n\n\n\n\n\n\n\n\n\nAur\u00e9lien Denis\n\n2:16 pm on August 7, 2019 \n\n\n\n\nI\u2019ve been waiting this project for a while, that\u2019s a nice!!\n\n\n\n\n\n\n\n\nBenjamin Denis\n\n2:18 pm on August 7, 2019 \n\n\n\n\nCan\u2019t wait!\n\n\n\n\n\n\n\n\nPatrick Buntsma\n\n2:39 pm on August 7, 2019 \n\n\n\n\n+100\nAs both a developer and user I have been reading along for some time now. I LOVE this project already. Reading all comments is extremely interesting. BRAVA to all!  \nI feel that a notification bubble in the Adminadmin (and super admin) Bar is already much less intrusive and annoying than all those Admin Notices now. \nI love the idea for sections.\nTo avoid cluttering and spamming of WP Notify, I strongly vote for similar restrictions / layout as home screen notifications on your mobile phone. Short, sweet and straight to the point. Perhaps users could select the categoryCategory The 'category' taxonomy lets you group posts / content together that share a common bond. Categories are pre-defined and broad ranging. as well as per pluginPlugin A plugin is a piece of software containing a group of functions that can be added to a WordPress website. They can extend functionality or add new features to your WordPress websites. WordPress plugins are written in the PHP programming language and integrate seamlessly with WordPress. These can be free in the WordPress.org Plugin Directory https://wordpress.org/plugins/ or can be cost-based plugin from a third-party? Choose the type of notification in general, but also mute certain plugins/themes altogether. Yet, there should be an exception for high priority issues \u2013 that will always come through \u2013 by the WP CoreCore Core is the set of software required to run WordPress. The Core Development Team builds WordPress. Team for example.\nSpamming with a commercial banner when you delete a post, should be punishable in my opinion. I too tend to completely remove such plugins. So I do also vote for a possibility for users to report misuse by developers. \nPlease correct me if I am wrong, I but I have not found a friendly way to notify \u201cmy\u201d users other than through an \u201cupgrade notice\u201d. Yet, that is only shown in the updates page and completely stripped to plain text, so users do not notice it.\nA push notification in WP Notify would certainly improve that. It will then also bypass the current (obvious)  restrictions on update notices on MultiSitemultisite Used to describe a WordPress installation with a network of multiple blogs, grouped by sites. This installation type has shared users tables, and creates separate database tables for each blog (wp_posts becomes wp_0_posts). See also network, blog, site.\n\n\n\n\n\n\n\n\nVictor M Ramirez\n\n12:35 am on August 8, 2019 \n\n\n\n\nI would love to be involved in fixing this issue. Notifications are currently the bane of my client dashboard existence.\n\n\n\n\n\n\n\n\nKuba Mikita\n\n7:10 am on August 9, 2019 \n\n\n\n\nSounds similar to my pluginPlugin A plugin is a piece of software containing a group of functions that can be added to a WordPress website. They can extend functionality or add new features to your WordPress websites. WordPress plugins are written in the PHP programming language and integrate seamlessly with WordPress. These can be free in the WordPress.org Plugin Directory https://wordpress.org/plugins/ or can be cost-based plugin from a third-party which covers backend notifications: https://wordpress.org/plugins/notification/\nI think you could take some ideas from it, as the developer APIAPI An API or Application Programming Interface is a software intermediary that allows programs to interact with each other and share data in limited, clearly defined ways. is pretty flexible.\n\n\n\n\n\n\n\n\nsenki\n\n1:48 pm on August 14, 2019 \n\n\n\n\nI would love to be involved in this development. Maybe we can do something that lay out of the future of the modernisation of the WordPress\n\n\n\n\n\n\n\n\nXedin Unknown\n\n6:07 pm on August 21, 2019 \n\n\n\n\nI would be very happy to contribute to this, having had experience in building standards-compliant robust solutions in this area, including flash messages, dismissable notifications, etc.\n\n\n\n\n\n\n\n\nErin 'Folletto' Casali\n\n12:01 pm on September 2, 2019 \n\n\n\n\nAs a designer that was involved in the earlier discussions, I can provide some design help depending on the needs of the project. I\u2019d note for something like this that we should be striving to ship a small modular MVPMinimum Viable Product \"A minimum viable product (MVP) is a product with just enough features to satisfy early customers, and to provide feedback for future product development.\" - WikiPedia first, and extend it later.\nI specifically note this as a counterpoint to \u201cWhy have so many complex moving pieces\u201d. APIs can be built to start small and then evolved (this is usually the best approach). There\u2019s no need to go full-blown from the start, it\u2019s actually a problem as will make shipping delayed and would release something hard to grok for developers lowering the adoption. I agree there that abstractions help, the key is to start with a small abstraction that can be extended in future releases, and an excellent UXUX User experience, and work from there.\nI worry a lot about a project that starts with already a very narrow scope as this, I would stress to start with two parallel explorations, one APIAPI An API or Application Programming Interface is a software intermediary that allows programs to interact with each other and share data in limited, clearly defined ways. side and one design side, and see where the balance strikes.\n\n\n\n\n\n\n\n\nMervin Hernandez\n\n4:26 pm on November 3, 2019 \n\n\n\n\nHere is the requirements doc if anyone is interested in learning more / contributing. https://docs.google.com/document/d/1SoIaFqXkXiVzq5mizbZQafMfL36bD0WKj8iwYM823MI/edit#heading=h.qpzqhl4y9i8b\n\n\n\n\nComments are closed.\n\n\n\nPost navigation\n\u2190 WordPress Local Environment Editor Chat Agenda: August 7th \u2192\n\n\n\n\n\n\n\n\nSearch\n\n\n\nEmail Updates\n\n\nEnter your email address to subscribe to this blog and receive notifications of new posts by email.\n\n\n\n\t\t\t\t\t\t\tEmail Address\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\t\t\t\t\t\t\tSubscribe\t\t\t\t\t\t\n\n\n\n\t\t\t\t\tJoin 5,560 other subscribers\t\t\t\t\n\nRecent UpdatesRecent CommentsNo RepliesRecent UpdatesRecent CommentsNo RepliesCurrent Release The current release in progress is WordPress 6.3.\nPlanned future releases are listed on the Project Roadmap.\nFeature projects not tied to specific releases can be found on the Features page.\n\nRegular ChatsNote: All chats happen on Slack.\n\n\n\nWeekly Developer Meetings: Wednesday 20:00 UTC in #core\n\n\nAbout the Dev Chat\n\n\nAgendas | Summaries\n\n\n\n\n\nAPAC Triage Sessions Tuesday 5:00 UTC alternating between #core and #core-editor\n\n\nJavaScript Weekly Chat Tuesday 14:00 UTC in #core-js\n\n\nPerformance Weekly Chat Tuesday 15:00 UTC in #core-performance\n\n\nMultisite Weekly Chat Tuesday 17:00 UTC in #core-multisite\n\n\nREST API Weekly Chat Thursday 18:00 UTC in #core-restapi\n\n\nEditor Weekly Chat Wednesday 14:00 UTC in #core-editor\n\n\nNew Contributors Chat Wednesday 19:00 UTC in #core\n\n\nImages/Media Weekly Chat Thursday 15:00 UTC in #core-media\n\n\nCSS Weekly Chat Thursday 21:00 UTC in #core-css\n\n\nCustomize Weekly Chat Monday 19:00 UTC in #core-customize\n\n\n\n\nSee all meetings \u2192 \nRecent Posts and Comments\n\n\n\t\t\tTeam Pledges\n\t\t\n\n1853 people have pledged time to contribute to Core Team efforts! When looking for help on a project or program, try starting by reaching out to them!\t\t\n\n\n\n\n\n\n\nAboutNewsHostingDonateSwag\nDocumentationDevelopersGet InvolvedLearn\nShowcasePluginsThemesPatterns\nWordCampWordPress.TVBuddyPressbbPress\nWordPress.comMattPrivacyPublic Code\n\n\n\n\n\n\n\nWordPress.org\n\n\n \n\n\n\n\nWordPress.org\n\n\n\n \n\n\n\nVisit our Facebook page\nVisit our Twitter account\nVisit our Instagram account\nVisit our LinkedIn account\n\n\n\n\n\n\n \n\n\n\n\nssearch\nccompose new post\nr reply\ne edit\nt go to top\nj go to the next post or comment\nk go to the previous post or comment\no toggle comment visibility\nesc cancel edit post or comment\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\tPlease enable JavaScript to view this page properly.\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n",
    "links": [
        "#content",
        "https://login.wordpress.org/?redirect_to=https%3A%2F%2Fmake.wordpress.org%2Fcore%2F2019%2F08%2F05%2Ffeature-project-proposal-wp-notify%2F&locale=en_US",
        "https://login.wordpress.org/register?locale=en_US",
        "https://wordpress.org/",
        "https://wordpress.org/news/",
        "https://wordpress.org/download/",
        "https://wordpress.org/download/",
        "https://wordpress.org/themes/",
        "https://wordpress.org/patterns/",
        "https://wordpress.org/plugins/",
        "https://wordpress.org/mobile/",
        "https://wordpress.org/hosting/",
        "https://openverse.org/",
        "https://learn.wordpress.org/",
        "https://learn.wordpress.org/",
        "https://wordpress.org/documentation/",
        "https://wordpress.org/support/forums/",
        "https://developer.wordpress.org/",
        "https://wordpress.tv/",
        "https://make.wordpress.org/",
        "https://make.wordpress.org/",
        "https://wordpress.org/photos/",
        "https://wordpress.org/five-for-the-future/",
        "https://central.wordcamp.org/",
        "https://www.meetup.com/pro/wordpress/",
        "https://jobs.wordpress.net/",
        "https://wordpress.org/about/",
        "https://wordpress.org/about/",
        "https://wordpress.org/showcase/",
        "https://wordpress.org/enterprise/",
        "https://wordpress.org/gutenberg/",
        "https://mercantile.wordpress.org/",
        "https://wordpress.org/download/",
        "https://wordpress.org/download/",
        "#",
        "https://make.wordpress.org/core/",
        "https://make.wordpress.org/core/reports/",
        "https://make.wordpress.org/core/components/",
        "https://make.wordpress.org/core/handbook/",
        "https://core.trac.wordpress.org/browser",
        "https://core.trac.wordpress.org/timeline",
        "https://login.wordpress.org/?redirect_to=https://core.trac.wordpress.org/newticket",
        "https://wordpress.org/support/bb-login.php?redirect_to=https://core.trac.wordpress.org/newticket",
        "https://core.trac.wordpress.org/tickets/good-first-bugs",
        "https://make.wordpress.org/core/handbook/testing/bug-gardening/",
        "https://make.wordpress.org/core/reports/",
        "https://core.trac.wordpress.org/tickets/needs-testing",
        "https://make.wordpress.org/core/features/",
        "https://make.wordpress.org/core/handbook/",
        "https://make.wordpress.org/chat/",
        "http://time.is/2000_in_UTC",
        "https://wordpress.slack.com/messages/core/",
        "https://make.wordpress.org/chat/",
        "https://profiles.wordpress.org/psykro/",
        "https://profiles.wordpress.org/psykro/",
        "https://make.wordpress.org/core/tag/feature-notifications/",
        "https://www.notion.so/Feature-Project-Proposal-WP-Notify-d6a2116f37bb4f48a9b6ad9e83bcdfca",
        "https://profiles.wordpress.org/schlessera/",
        "https://twitter.com/schlessera/status/1155428522892169216",
        "https://developer.wordpress.org/rest-api/",
        "https://www.javascript.com/",
        "https://wordpress.org/gutenberg/",
        "https://core.trac.wordpress.org/ticket/43484",
        "https://slack.com/",
        "https://make.wordpress.org/chat/",
        "https://github.com/",
        "https://make.wordpress.org/core/2016/10/03/feature-project-proposal-notifications-api/",
        "https://wordpress.slack.com/messages/C2K1C71FE",
        "https://core.trac.wordpress.org/ticket/43484",
        "https://make.wordpress.org/core/tag/feature-notifications/",
        "https://make.wordpress.org/core/2019/08/05/feature-project-proposal-wp-notify/?share=twitter",
        "https://make.wordpress.org/core/2019/08/05/feature-project-proposal-wp-notify/?share=facebook",
        "https://profiles.wordpress.org/audrasjb/",
        "https://profiles.wordpress.org/psykro/",
        "https://profiles.wordpress.org/schlessera/",
        "https://make.wordpress.org/core/tag/feature-notifications/",
        "https://profiles.wordpress.org/psykro/",
        "https://profiles.wordpress.org/audrasjb/",
        "https://profiles.wordpress.org/bamadesigner/",
        "https://profiles.wordpress.org/donmhico/",
        "https://profiles.wordpress.org/mnelson4/",
        "https://profiles.wordpress.org/mikehealy/",
        "https://profiles.wordpress.org/mnelson4/",
        "https://profiles.wordpress.org/mikeschinkel/",
        "https://profiles.wordpress.org/ipstenu/",
        "https://profiles.wordpress.org/mikeschinkel/",
        "https://git-scm.com/",
        "https://profiles.wordpress.org/mnelson4/",
        "https://developer.wordpress.org/rest-api/",
        "https://profiles.wordpress.org/brashrebel/",
        "https://profiles.wordpress.org/donmhico/",
        "https://profiles.wordpress.org/glueckpress/",
        "https://en.wikipedia.org/wiki/Minimum_viable_product",
        "https://make.wordpress.org/core/handbook/about/release-cycle/features-as-plugins/",
        "https://profiles.wordpress.org/dingo_d/",
        "https://profiles.wordpress.org/glueckpress/",
        "https://profiles.wordpress.org/dingo_d/",
        "https://profiles.wordpress.org/glueckpress/",
        "https://profiles.wordpress.org/archie22is/",
        "https://profiles.wordpress.org/schlessera/",
        "https://profiles.wordpress.org/glueckpress/",
        "https://profiles.wordpress.org/mikehealy/",
        "https://profiles.wordpress.org/ipstenu/",
        "https://profiles.wordpress.org/ipstenu/",
        "//make.wordpress.org/plugins",
        "https://profiles.wordpress.org/andreiigna/",
        "https://profiles.wordpress.org/swissspidy/",
        "https://wordpress.org/gutenberg/",
        "https://profiles.wordpress.org/afercia/",
        "https://core.trac.wordpress.org/ticket/43484",
        "https://profiles.wordpress.org/folletto/",
        "https://core.trac.wordpress.org/ticket/32678",
        "https://profiles.wordpress.org/psykro/",
        "https://profiles.wordpress.org/afercia/",
        "https://profiles.wordpress.org/hedgefield/",
        "https://profiles.wordpress.org/bamadesigner/",
        "https://profiles.wordpress.org/psykro/",
        "https://profiles.wordpress.org/bamadesigner/",
        "https://profiles.wordpress.org/psykro/",
        "https://profiles.wordpress.org/maigret/",
        "https://profiles.wordpress.org/rainbowgeek/",
        "https://profiles.wordpress.org/duisterdenhaag/",
        "https://profiles.wordpress.org/isvictorious/",
        "https://profiles.wordpress.org/kubitomakita/",
        "https://wordpress.org/plugins/notification/",
        "https://profiles.wordpress.org/_senki/",
        "https://profiles.wordpress.org/xedinunknown/",
        "https://profiles.wordpress.org/folletto/",
        "https://en.wikipedia.org/wiki/Minimum_viable_product",
        "https://profiles.wordpress.org/hrmervin/",
        "https://docs.google.com/document/d/1SoIaFqXkXiVzq5mizbZQafMfL36bD0WKj8iwYM823MI/edit#heading=h.qpzqhl4y9i8b",
        "https://make.wordpress.org/core/2019/08/05/wordpress-local-environment/",
        "https://make.wordpress.org/core/2019/08/06/editor-chat-agenda-august-7/",
        "#",
        "https://make.wordpress.org/core/",
        "https://make.wordpress.org/core/?o2_recent_comments=1",
        "https://make.wordpress.org/core/?replies=none",
        "https://make.wordpress.org/core/6-3/",
        "https://wordpress.org/about/roadmap/",
        "https://make.wordpress.org/core/features/",
        "https://make.wordpress.org/chat/",
        "https://www.timeanddate.com/worldclock/fixedtime.html?iso=20230503T2000",
        "https://wordpress.slack.com/archives/C02RQBWTW",
        "http://make.wordpress.org/core/weekly-developer-chats/",
        "http://make.wordpress.org/core/tag/agenda",
        "http://make.wordpress.org/core/tag/summary",
        "https://www.timeanddate.com/worldclock/fixedtime.html?iso=20230502T0500",
        "https://wordpress.slack.com/archives/C02RQBWTW",
        "https://wordpress.slack.com/archives/C02QB2JS7",
        "https://www.timeanddate.com/worldclock/fixedtime.html?iso=20230502T1400",
        "https://wordpress.slack.com/archives/C5UNMSU4R",
        "https://www.timeanddate.com/worldclock/fixedtime.html?iso=20230502T1500",
        "https://wordpress.slack.com/archives/C02KGN5K076",
        "https://www.timeanddate.com/worldclock/fixedtime.html?iso=20230502T1700",
        "https://wordpress.slack.com/archives/C03BVB47S",
        "https://www.timeanddate.com/worldclock/fixedtime.html?iso=20230504T1800",
        "https://wordpress.slack.com/archives/C02RQC26G",
        "https://www.timeanddate.com/worldclock/fixedtime.html?iso=20230503T1400",
        "https://wordpress.slack.com/archives/C02QB2JS7",
        "https://www.timeanddate.com/worldclock/fixedtime.html?iso=20230503T1900",
        "https://wordpress.slack.com/archives/C02RQBWTW",
        "https://www.timeanddate.com/worldclock/fixedtime.html?iso=20230504T1500",
        "https://wordpress.slack.com/archives/C02SX62S6",
        "https://www.timeanddate.com/worldclock/fixedtime.html?iso=20230504T2100",
        "https://wordpress.slack.com/archives/CQ7V4966Q",
        "https://www.timeanddate.com/worldclock/fixedtime.html?iso=20230508T1900",
        "https://wordpress.slack.com/archives/C0381N237",
        "https://make.wordpress.org/meetings/",
        "https://make.wordpress.org/core/pledges/",
        "https://wordpress.org/about/",
        "https://wordpress.org/news/",
        "https://wordpress.org/hosting/",
        "https://wordpressfoundation.org/donate/",
        "https://mercantile.wordpress.org/",
        "https://wordpress.org/documentation/",
        "https://developer.wordpress.org/",
        "https://make.wordpress.org/",
        "https://learn.wordpress.org/",
        "https://wordpress.org/showcase/",
        "https://wordpress.org/plugins/",
        "https://wordpress.org/themes/",
        "https://wordpress.org/patterns/",
        "https://central.wordcamp.org/",
        "https://wordpress.tv/",
        "https://buddypress.org/",
        "https://bbpress.org/",
        "https://wordpress.com/?ref=wporg-footer",
        "https://ma.tt/",
        "https://wordpress.org/about/privacy/",
        "https://publiccode.eu/",
        "https://wordpress.org/",
        "https://wordpress.org/",
        "https://www.facebook.com/WordPress/",
        "https://twitter.com/WordPress",
        "https://www.instagram.com/wordpress/",
        "https://www.linkedin.com/company/wordpress"
    ]
}