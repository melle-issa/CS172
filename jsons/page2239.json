{
    "title": "Make WordPress Core \u2013 WordPress Development Updates",
    "body": "\nSkip to content\n\n\nLog InRegister \n\n\n\n\n\n\nWordPress.org\n\n\n \n\n\n\n\n\n\n\nNewsDownload & ExtendGet WordPressThemesPatternsPluginsMobileHostingOpenverse \u2197\ufe0eLearnLearn WordPressDocumentationForumsDevelopersWordPress.tv \u2197\ufe0eCommunityMake WordPressPhoto DirectoryFive for the FutureWordCamp \u2197\ufe0eMeetups \u2197\ufe0eJob Board \u2197\ufe0eAboutAbout WordPressShowcaseEnterpriseGutenberg \u2197\ufe0eWordPress Swag Store \u2197\ufe0eGet WordPress\n\n\n\n\n\n\n\n\n\n\n\nSearch in WordPress.org\n\n\n\n\n\n\n\n\n\n\t\tGet WordPress\t\n\n\nMenu\n\nMake WordPress Core\n\n\nTickets\nComponents\nHandbook\nBrowse Source\nTrac Timeline\nCreate a New Ticket\n \n\n\n\nHide welcome box\n\n\n\n\nWelcome!\nThe WordPress coreCore Core is the set of software required to run WordPress. The Core Development Team builds WordPress. development team builds WordPress! Follow this site for\u00a0general updates, status reports, and the occasional code debate. There\u2019s lots of ways to contribute:\nFound a bugbug A bug is an error or unexpected result. Performance improvements, code optimization, and are considered enhancements, not defects. After feature freeze, only bugs are dealt with, with regressions (adverse changes from the previous version) being the highest priority.? Create a ticket in the bug tracker.\nWant to contribute? Get started quickly with tickets marked as good first bugs for new contributors or join a bug scrub. There\u2019s more on the reports page, like patches needing testing, and on feature projects page.\nOther questions? Here is a detailed handbook for contributors, complete with tutorials.\n\n\nCommunication\nCore uses Slack\u00a0for real-time communication. Contributors live all over the world, so there are discussions happening at all hours of the day.\nCore development meetings are every Wednesday at 20:00 UTC in the #core channel on Slack. Anyone can join and participate or listen in!\n\n\n\n\n\n\n\n\n\n\n\n \nJb Audras\n\n9:14 pm on May 1, 2023 \n\n\n\nTags: 6-3 ( 8 ), core ( 498 ), week in core ( 220 ) \u00a0\u00a0\n\t\t\t\t\n\nA Week in Core \u2013 May 1, 2023\n\n\nWelcome back to a new issue of Week in CoreCore Core is the set of software required to run WordPress. The Core Development Team builds WordPress.. Let\u2019s take a look at what changed on TracTrac An open source project by Edgewall Software that serves as a bug tracker and project management tool for WordPress. between April 24 and May 1, 2023.\n7 commits\n21 contributors\n50 tickets created\n3 tickets reopened\n38 tickets closed\nTicketticket Created for both bug reports and feature development on the bug tracker.\u00a0numbers are based on the\u00a0Trac timeline for the period above. The following is a summary of commits, organized by component and/or focus.\nCode changes\nCoding Standards\nRemove an empty else statement in dbDelta() \u2013 #56982\nEditor\nImprove the tagtag A directory in Subversion. WordPress uses tags to store a single snapshot of a version (3.6, 3.6.1, etc.), the common convention of tags in version control systems. (Not to be confused with post tags.) field loading spinner alignment \u2013 #58136\nGeneral\nDon\u2019t pass $action to wp_get_session_token() in wp_create_nonce() \u2013 #58181\nI18Ni18n Internationalization, or the act of writing and preparing code to be fully translatable into other languages. Also see localization. Often written with a lowercase i so it is not confused with a lowercase L or the numeral 1. Often an acquired skill.\nUse correct translationtranslation The process (or result) of changing text, words, and display formatting to support another language. Also see localization, internationalization. function in wp-admin/includes/media.php \u2013 #58138\nText Changes\nTypo fix in README.md \u2013 #58177\nThemes\nImprove performance of get_block_templates() \u2013 #57756\nRemove unused parameter in query for get_block_templates() \u2013 #57736\nProps\nThanks to the 21 people who contributed to WordPress Core on Trac last week: @audrasjb (3), @mukesh27 (2), @sergeybiryukov (2), @hellofromTonya (2), @neychok (1), @vladytimy (1), @mujuonly (1), @dd32 (1), @hztyfoon (1), @malavvasita (1), @davidbaumwald (1), @draganescu (1), @youknowriad (1), @flixos90 (1), @Presskopp (1), @jorgefilipecosta (1), @spacedmonkey (1), @brookedot (1), @krunal265 (1), @costdev (1), and @krupalpanchal (1).\nCore committers: @audrasjb (3), @sergeybiryukov (2), and @oandregal (2).\n#6-3, #core, #week-in-coreLogin to Reply\n\n\n\n\n\n\n\n\n\n\n \nFelix Arntz\n\n4:34 pm on May 1, 2023 \n\n\n\nTags: agenda ( 877 ), meeting ( 250 ), performance ( 192 ), performance-chat ( 150 ) \u00a0\u00a0\n\t\t\t\t\n\nPerformance Chat Agenda: 2 May 2023\n\n\nHere is the agenda for this week\u2019s performance team meeting scheduled for May 2, 2023 at 15:00 UTC.\nAnnouncements\nN/A\n\nPriority projects \nServer response time\nDatabase optimization\nJavaScript & CSS\nImages\nMeasurement\nEcosystem tools\nCreating standalone plugins\nNew projects / proposals\n\nOpen floor\nThis meeting happens in the #core-performance channel. To join the meeting, you\u2019ll need an account on the Make WordPress Slack.\n#agenda, #meeting, #performance, #performance-chatLogin to Reply\n\n\n\n\n\n\n\n\n\n\n \nBrian Alexander\n\n4:25 pm on April 27, 2023 \n\n\n\nTags: 6-3 ( 8 ), 6.2 ( 85 ), dev chat ( 630 ), meeting ( 250 ), summary ( 693 ) \u00a0\u00a0\n\t\t\t\t\n\nDev Chat Summary, April 26, 2023\n\n\nThe WordPress Developers Chat meeting took place on April 26, 2023 at 20:00 UTC in the core channel of Make WordPress Slack.\nKey Links\nStart of the Dev Chat on SlackSlack Slack is a Collaborative Group Chat Platform https://slack.com/. The WordPress community has its own Slack Channel at https://make.wordpress.org/chat/..\nThere was no agenda preceding today\u2019s chat.\nLast meeting summary: Dev Chat Summary, April 19, 2023.\nHighlighted Posts\nA Week in Core \u2013 April 24, 2023: Thank you as always, @audrasjb!\n\nHere\u2019s the awesome activity seen in TracTrac An open source project by Edgewall Software that serves as a bug tracker and project management tool for WordPress. between April 17 and April 24, 2023:\n27 commits\n36 contributors\n51 tickets created\n6 tickets reopened\n53 tickets closed\nand 4 new contributors \ud83c\udf89\n\nThe benefits of prioritizing and measuring performance in WordPress 6.2: Read about the collaborative planning and work that contributed to the performance gains brought with WordPress 6.2.\nWP Feature Notifications: 2023 Status Update: This update explains recent progress toward a CoreCore Core is the set of software required to run WordPress. The Core Development Team builds WordPress.-targeted modern WordPress user notification system, its interplay with GutenbergGutenberg The Gutenberg project is the new Editor Interface for WordPress. The editor improves the process and experience of creating new content, making writing rich content much simpler. It uses \u2018blocks\u2019 to add richness rather than shortcodes, custom HTML etc. https://wordpress.org/gutenberg/ Phase 3, and how you can get involved.\nWP Briefing: Episode 54: A Bill of Rights for the Open Web: Listen as Josepha explores the four freedoms of open sourceOpen Source Open Source denotes software for which the original source code is made freely available and may be redistributed and modified.  Open Source **must be** delivered via a licensing model, see GPL., which have been referred to as a \u201cBill of Rights\u201d for the open web.\nRelease Updates\n6.3 Planning\n@ironprogrammer shared a reminder that the WordPress 6.3 Planning Proposal & Call for Volunteers is open for release squad members and mentors through this Sunday, April 30.\n6.2.1 Minor ReleaseMinor Release A set of releases or versions having the same minor version number may be collectively referred to as .x , for example version 5.2.x to refer to versions 5.2, 5.2.1, 5.2.3, and all other versions in the 5.2 (five dot two) branch of that software. Minor Releases often make improvements to existing features and functionality.\n@audrasjb provided a WP 6.2 triagetriage The act of evaluating and sorting bug reports, in order to decide priority, severity, and other factors. update:\nOn Trac, there are\u00a019 tickets in milestone 6.2.1, 9 of them are fixed, and 2 others are awaiting backportbackport A port is when code from one branch (or trunk) is merged into another branch or trunk. Some changes in WordPress point releases are the result of backporting code from trunk to the release branch. to 6.2 (making a total of 11 tickets addressed thus far).\nOn Gutenberg, here are\u00a014 issues/PRs in the milestone, and 7 of them are ready for core merge.\n@ironprogrammer asked for confirmation that a small squad is still needed to run the 6.2.1 release, which @audrasjb confirmed. JB then added that an active Gutenberg contributor should ideally help shepherd the related issues/PRs/tasks; and that someone would be needed to help build packages, suggesting that @sergeybiryukov might help with Mission Control.\n@ironprogrammer suggested sharing the needs for Gutenberg contributor involvement in the #core-editor channel, which @audrasjb confirmed he would follow up.\nOpen Floor\nDuring open floor, @presskopp raised visibility on the following Trac tickets:\n#33073: Some strings need \u201cno HTML entities\u201d translator comments \u2014 @ironprogrammer proposed that the ticketticket Created for both bug reports and feature development on the bug tracker. be milestoned for 6.3, as it had suggestions on how it might be addressed. @sergeybiryukov assigned the milestone to move the ticket forward.\n#57999: Don\u2019t show error message when there is nothing to update \u2014 @audrasjb suggested moving the ticket to 6.3; @pbiron agreed by setting the milestone and self-assigning the ticket. @ironprogrammer suggested that example reproduction flows be added to the ticket in order to help during testing.\n#53682: tags (keywords) with umlauts don\u2019t get saved in German locale \u2014 @audrasjb noted that this ticket still needed a patchpatch A special text file that describes changes to code, by identifying the files and lines which are added, removed, and altered. It may also be referred to as a diff. A patch can be applied to a codebase for testing. to move it forward.\n#54836: Huge error logs filled with \u201cWordPress database error Illegal mix of collations\u201d errors caused by spammers \u2014 @ironprogrammer agreed with @audrasjb\u2018s in-ticket assessment, and that a Database component maintainer should review the ticket, so pinged @craigfrancis. @pbiron asked if the issue was due to different collations in the DB, or if the collation differed from the spam text encoding, and Brian asked for reproduction steps to better understand what triggers the errors.\n#50081: orderby datetime field \u2014 @audrasjb identified this as a Docs (DevHub) issue, and updated the ticket. @leogermani and @sergeybiryukov responded and provided context for when the code example was last updated. JB updated the sample code in DevHub and closed the ticket. \ud83c\udf89\n#39645: If user \u201cadmin\u201d doesn\u2019t exist (renamed admin account) users can create a user with username admin \u2014 this last ticket mention occurred after Dev Chat wrapped up, and there was no further discussion on it.\nNext Meeting\nThe next meeting will be on May 3, 2023 at 20:00 UTC.\n\nAre you interested in helping draft Dev Chat summaries? Volunteer at the start of the next meeting on the #core Slack channel.\n\nProps @costdev for peer review of this summary, and to everyone who participated in the Dev Chat.\n\n#6-3, #6-2, #dev-chat, #meeting, #summaryLogin to Reply\n\n\n\n\n\n\n\n\n\n\n \nPaal Joachim Romdahl\n\n2:41 pm on April 26, 2023 \n\n\n\nTags: core-editor ( 624 ), core-editor-summary ( 160 ), gutenberg ( 414 ), meeting notes ( 208 ), summary ( 693 ) \u00a0\u00a0\n\t\t\t\t\n\nEditor chat summary: 26 April, 2023\n\n\nThis post summarizes the weekly editor chat meeting (agenda for 26th of April meeting) held on Wednesday, April 26 2023, 03:00 PM GMT+1 in\u00a0Slack. Moderated by\u00a0@paaljoachim.\nGutenberg plugin 15.7 RC1 is ready to test. \nKey project updates:\nNavigation Block\nSite Editor & Templates\nBuilding with Patterns\nDesign Tools\nLayout Option & Design Tools\n\nStyles\nStyle Engine\n\nQuery Block\nMobile Team\nComponents Team\nWebFonts API\nNo updates of Key Projects during the coreCore Core is the set of software required to run WordPress. The Core Development Team builds WordPress. editor meeting.\nTask Coordination\nNo updates at this time.\nOpen Floor\n@bph\nIn case you missed it.\u00a0@greenshady publisehd\u00a0Per-block CSS with theme.json and @welcher published How webpack and WordPress packages interact on the WordPress Developer Blogblog (versus network, site).\nThere are a few more discussions at the GithubGitHub GitHub is a website that offers online implementation of git repositories that can easily be shared, copied and modified by other developers. Public repositories are free to host, private repositories require a paid subscription. GitHub introduced the concept of the \u2018pull request\u2019 where code changes done in branches by contributors can be reviewed and discussed before being merged be the repository owner.  https://github.com/ repo on the topic ideas on Developer Blog Content, just in case someone would like to start writing, or wants to chime in.\n#core-editor, #core-editor-summary, #gutenberg, #meeting-notes, #summaryLogin to Reply\n\n\n\n\n\n\n\n\n\n\n \nPaal Joachim Romdahl\n\n1:33 pm on April 26, 2023 \n\n\n\nTags: agenda ( 877 ), core-editor ( 624 ), core-editor-agenda ( 164 ), meeting ( 250 ) \u00a0\u00a0\n\t\t\t\t\n\nEditor Chat Agenda: 26 April 2023\n\n\nFacilitator and notetaker:\u00a0@paaljoachim\nThis is the agenda for the weekly\u00a0editor chat\u00a0scheduled for\u00a0Wednesday, April 26 2023, 03:00 PM GMT+1. This meeting is held in the\u00a0#core-editor\u00a0channel in the Making WordPress\u00a0SlackSlack Slack is a Collaborative Group Chat Platform https://slack.com/. The WordPress community has its own Slack Channel at https://make.wordpress.org/chat/..\nGutenbergGutenberg The Gutenberg project is the new Editor Interface for WordPress. The editor improves the process and experience of creating new content, making writing rich content much simpler. It uses \u2018blocks\u2019 to add richness rather than shortcodes, custom HTML etc. https://wordpress.org/gutenberg/ 15.7 RC1 is released today and available for testing.A big thank you to @bph for handling the release.\nKey project updates:\nNavigation Block\nSite Editor & Templates\nBuilding with Patterns\nDesign Tools\nLayout Option & Design Tools\n\nStyles\nStyle Engine\n\nQuery Block\nMobile Team\nComponents Team\nWebFonts API\nTask Coordination.\nOpen Floor \u2013 extended edition.\nIf you are not able to\u00a0attend\u00a0the meeting, you are encouraged to share anything relevant for the discussion:\nIf you have an update for the main site editing projects, please feel free to share as a comment or come prepared for the meeting itself.\nIf you have anything to share for the Task Coordination section, please leave it as a comment on this post.\nIf you have anything to propose for the agenda or other specific items related to those listed above, please leave a comment below.\n#agenda, #core-editor, #core-editor-agenda, #meetingLogin to Reply\n\n\n\n\n\n\n\n\n\n\n \nEmily Clarke\n\n4:03 pm on April 25, 2023 \n\n\n\nTags: core-media ( 114 ), core-performance ( 23 ), performance ( 192 ), performance-chat ( 150 ), summary ( 693 ) \u00a0\u00a0\n\t\t\t\t\n\nPerformance Chat Summary: 25 April 2023\n\n\nMeeting agenda here and the full chat log is available beginning here on Slack.\nAnnouncements\nUpdated the cadence of bugbug A bug is an error or unexpected result. Performance improvements, code optimization, and are considered enhancements, not defects. After feature freeze, only bugs are dealt with, with regressions (adverse changes from the previous version) being the highest priority. scrubs to be every 2 weeks \u2013 next one scheduled for April 26, 2023 at 15:00 UTC.\n@flixos90 Also briefly sharing that I just published a performance retrospective post on WP 6.2 that I had been working on over the past few weeks:\u00a0https://make.wordpress.org/core/2023/04/25/the-benefits-of-prioritizing-and-measuring-performance-in-wordpress-6-2/ It highlights some of the key aspects which changed in 6.2 in how we dealt with performance and also summarizes high level numbers. It can be seen as somewhat complementing\u00a0https://make.wordpress.org/core/2023/04/05/wordpress-6-2-performance-improvements-for-all-themes/, at a higher level however without looking as much at specific improvements.\nDiscussion regarding the\u00a0decoupling of the SQLite pluginPlugin A plugin is a piece of software containing a group of functions that can be added to a WordPress website. They can extend functionality or add new features to your WordPress websites. WordPress plugins are written in the PHP programming language and integrate seamlessly with WordPress. These can be free in the WordPress.org Plugin Directory https://wordpress.org/plugins/ or can be cost-based plugin from a third-party\u00a0from the performance lab work. In reference to\u00a0this conversation that came up in a previous performance chat. Would love to have an open discussion about peoples preferences here and whether we do decouple this?\n@olliejones I favor that approach. It will usually be deployedDeploy Launching code from a local development environment to the production web server, so that it's available to visitors. independently of the stuff in PL.\n@10upsimon I tend to lean more toward an agreement with\u00a0@rmccue in that SQLite is not necessarily performance improvements focused (or at least that is not the primary goal), and probably belongs outside of the realm of the performance lab work.\n@spacedmonkey To be clear, I think that performance team should continue to support SQlite getting into coreCore Core is the set of software required to run WordPress. The Core Development Team builds WordPress., to much sure it done in a performant way. But SQlite is not a performance benefit on the face of it, so it is confusing why we part of performance lab plugin.\n@rmccue Yeah, that was basically my thought; I think it\u2019s beneficial all-round to separate it out (but with performance still consulting as @spacedmonkey says)\n@olliejones yes, having SQLite headed for core is good. I believe the issue is about monorepo and multifunction plugins on the one hand and a separate repo and plugin on the other.\n@aristath I agree with what was mentioned above 100%. SQLite\u00a0can\u00a0be related to performance, but is not in itself a \u201cperformance\u201d module/plugin. It should be developed in collaboration with the performance team since it can have a big impact, but I\u2019d vote to decouple it from the performance-lab plugin\n@olliejones Maybe in a parallel universe or another year, there can be a separate database team. But for now the perf. team has the talent.\n@spacedmonkey If you want to setup a meeting for a database team, that could work. Many component meetings have less than 5 people.\n@flixos90 To clarify, this conversation is slightly different and mostly unrelated to the \u201cunbundling Performance Lab plugin\u201d effort. While we are publishing other PL modules as standalone plugins, those standalone plugins will still be directly associated with the performance team, developed in the monorepo, referenced from the PL main plugin etc. Removing / decoupling SQLite from PL would be different: We would still support getting the plugin towards WP core of course, but it wouldn\u2019t be in any way connected to PL anymore. Maybe that was clear, but just in case.\nNext steps clarification:\n@aristath I think the only thing to do here would be to remove the module from PL, and add a notice so in case the user previously had the module activated, they\u2019ll be prompted to install the standalone plugin\n@joemcgill I assume we\u2019ll remove the module from the performance lab plugin in the same release where we remove other modules. How we handle the transition so as to not break any active sites, is not clear to me at the moment.\n@olliejones Do we have any usage telemetry to help guide that decision?\n@flixos90 Potentially. As mentioned, I think this conversation is decoupled from the general PL unbundling effort, so we could do it at the same time, but also sooner. I would love to find a way to make the transition smooth though. For sites that already have the SQLite module active, we should probably recommend activating the SQLite plugin before deactivating the feature.\n@aristath That\u2019s a good idea\u2026\n@flixos90 Has anyone tried yet to activate the SQLite standalone plugin on a site where the PL SQLite module is already active? We need to make sure it doesn\u2019t throw fatal errors\n@aristath Adding it on my TODO list for tomorrow, though from what I recall I tried it last month and I there were no issues. I\u2019ll need to test that again just to be sure, it\u2019s been a long time\n\n@10upsimon I feel strongly about not intentionally breaking users sites, however few are using it. Perhaps we need to defer the removal to 2 versions from now, and raise a notice or similar in the adminadmin (and super admin) making it very clear that from version\u00a0n\u00a0it will no longer be supported as a core PL module.\n@flixos90 agreed @10upsimon adding though that for a smooth transition the plugin should be activated before deactivating the PL module, so we have to make sure that that is actually possible\n\n@joemcgill A similar transition plan will be good for all of the modules, to be honest, even though SQLite is the most critical due to potential breakage.\n@flixos90 @joemcgill I think for the other modules we\u2019ll handle that in a central effort as part of unbundling, but with SQLite it will now be bit different, since that plugin will not be referenced directly from PL in the future. But I agree it\u2019s most critical there to have a smooth transition since switching back to a MySQLMySQL MySQL is a relational database management system. A database is a structured collection of data where content, configuration and other options are stored. https://www.mysql.com/. / MariaDB database accidentally will break any site that actually relies on SQLite right now\n\n\nPriority Projects\nServer Response Time\nLink to roadmap projects\nContributors: @joemcgill @spacedmonkey @aristath\n@spacedmonkey I landed lazy loading term metaMeta Meta is a term that refers to the inside workings of a group. For us, this is the team that works on internal WordPress sites like WordCamp Central and Make WordPress.https://github.com/WordPress/wordpress-develop/commit/2c6bf77a9e7532c6ac3a03502b44d108cae86179\nI hope to get comment meta in the next week.https://github.com/WordPress/wordpress-develop/pull/4128\u00a0\u2013 Code review welcome\nRelated to term meta,\u00a0https://github.com/WordPress/wordpress-develop/pull/4259\u00a0also need code review\nThis saves around 15k calls to sanitise term function per page load\nTLDR, there was no need to call\u00a0get_term\u00a0, we already had the term id, so just remove that\nI also reviewed this \u2013\u00a0https://github.com/WordPress/wordpress-develop/pull/4097 (amazing work @oandregal)\n@joemcgill This is a huge one that I had noticed in my profiling research, so nice to see this already addressed!\n@10upsimon Call me cheesy, but 15%\u00a0server time\u00a0alone across many WP hosts is a positive contribution to the environment alone\n@mukesh27 With all this improvement, 6.3 is faster than 6.2\n@flixos90 Yeah, this alone will make blockBlock Block is the abstract term used to describe units of markup that, composed together, form the content or layout of a webpage using the WordPress editor. The idea combines concepts of what in the past may have achieved with shortcodes, custom HTML, and embed discovery into a single consistent API and user experience. theme performance in 6.3 almost as much faster as it got faster in 6.2\n\n@flixos90 Certainly the highest performance improvement in a single PR that I\u2019ve seen so far\n@joemcgill Worth noting that the 15% improvement on that PR is compared against WP 6.1.1, not the commit prior to that one, so it would be interesting to A/B against the commit prior (if I\u2019m reading the workflow correctly)\n@flixos90 No, the 15% is against today\u2019s\u00a0trunk. The original metrics on the PR are incorrect, but then I measured it against\u00a0trunk\u00a0and that\u2019s where the 15% come from\n\n\nDatabase Optimization\nLink to roadmap projects\nContributors: @aristath @spacedmonkey @olliejones @rjasdfiii\n@olliejones I\u2019ve been on the SQLite Object Cache, making it more useful for @spacedmonkey hopefully \u2013 Nothing on the bigger SQLite project.\n@spacedmonkey Not related to database, but object caching. I have been working WP CLICLI Command Line Interface. Terminal (Bash) in Mac, Command Prompt in Windows, or WP-CLI for WordPress. support new functionality object cache\nhttps://github.com/wp-cli/cache-command/issues/79\nhttps://github.com/wp-cli/cache-command/issues/80\n\nJavaScriptJavaScript JavaScript or JS is an object-oriented computer programming language commonly used to create interactive effects within web browsers. WordPress makes extensive use of JS for a better user experience. While PHP is executed on the server, JS executes within a user\u2019s browser. https://www.javascript.com/. & CSSCSS Cascading Style Sheets.\nLink to roadmap project\nContributors: @mukesh27 @10upsimon @adamsilverstein\n@10upsimon Regarding \u201cEnhancing the WP Scripts APIAPI An API or Application Programming Interface is a software intermediary that allows programs to interact with each other and share data in limited, clearly defined ways. with a Loading Strategy\u201d:\nWe\u2019ve had a good amount of feedback and iteration on our draft PR\nWe\u2019ve had some valuable feedback come in this week, so we\u2019ll be addressing that with the goal of opening a PR against core later this week. Thanks @joemcgill @adamsilverstein and @westonruter\u00a0for the invaluable feedback thus far (and to @spacedmonkey)\nWe\u2019ve established a mostly approved documentation plan/roadmap, with slight ongoing tweaks thereto. Draft documentation and documentation updates can commence soon\n\n@flixos90 One more thing regarding JSJS JavaScript, a web scripting language typically executed in the browser. Often used for advanced user interfaces and behaviors. & CSS, last week I opened\u00a0https://github.com/WordPress/gutenberg/issues/49927\u00a0to optimize how block CSS is loaded in classic themes (it\u2019s great in block themes, but not so much for classic themes, and we can probably improve that). There have been some great conversations on that.\u00a0@aristath has pointed out a detailed code example with how we could improve this by printing inline styles per block type right before the first block of each type is rendered\n@aristath If you have some capacity to work on a PR, I think that would be a great next step\n@flixos90 If we can find a solution that works reliably, maybe we can eventually even change the default behavior so that it\u2019s no longer opt-in but just works out of the box\u00a0\n@spacedmonkey I have a PR for the above \u2013\u00a0\u00a0https://github.com/spacedmonkey/wordpress-develop/tree/try/inline-styles It might be useful in discovery\n\nImages\nLink to roadmap projects\nContributors: @flixos90 @thekt12 @adamsilverstein @joemcgill\nNo updates this week\nMeasurement\nLink to roadmap projects\nContributors: @adamsilverstein @olliejones @joemcgill @mukesh27\n@joemcgill I\u2019ve been working to prioritize a set of \u201cnext steps\u201d for automated performance testing. For me, the \u201cnext step\u201d is to turn these tasks into tracTrac An open source project by Edgewall Software that serves as a bug tracker and project management tool for WordPress. tickets that we can address as capacity allows.\nOne of the big ones is to improve the stability of the results and make them more atomic, so we can use them to evaluate specific PRs (like the discussion we had earlier about the\u00a0get_block_templates\u00a0PR)\n\nEcosystem Tools\nLink to roadmap projects\nContributors: @joegrainger\n@joegrainger We\u2019re still progressing through the issues raised in the Plugin Checker Milestone 1 Review/QA and will continue to be working on these over the coming weeks. You can follow the progress on the\u00a0GitHub repo\u00a0and any thoughts/ideas/comments are welcome. Thanks!\n@spacedmonkey Got some feedback from the community \u2013\u00a0https://github.com/10up/plugin-check/issues/153\nCreating Standalone Plugins\nLink to GitHub overview issue\nContributors: @flixos90 @mukesh27 @10upsimon\n@flixos90 We\u2019re still waiting to get the Fetchpriority standalone plugin approved, beyond that and then the same for Dominant Color, we have basically completed the work for \u201cMilestone 1\u201d in\u00a0https://github.com/WordPress/performance/issues/656\nWe should probably close\u00a0https://github.com/WordPress/performance/issues/661\u00a0following the conversation earlier, or we can break it out as another issue to discuss how to remove SQLite from PL\n\n@flixos90 Separately, we need to explore what we want the user experience for \u201cMilestone 2\u201d to look like, both in terms of the regular UIUI User interface of the PL plugin going forward (in which it controls certain plugins as well as the Site Health modules), and for a smooth migrationMigration Moving the code, database and media files for a website site from one server to another. Most typically done when changing hosting companies. from the modules to remove to their standalone plugins\nNew Projects / Proposals\n@spacedmonkey I would love feedback on \u2013\u00a0https://github.com/WordPress/performance/issues/718 a new module proposal for adding object caching information to site health\nI want to make it easier for users to understand what kind of object cache they are using and what features it supports.\nSpecially if your object cache drop in supports multiple gets. I got a lot of questions after this\u00a0article\u00a0was published.\n\nOpen Floor\nNo updates\nOur next chat will be held on Tuesday, May 2, 2023 at 15:00 UTC in the #core-performance channel in Slack.\n#core-media, #core-performance, #performance, #performance-chat, #summaryLogin to Reply\n\n\n\n\n\n\n\n\n\n\n \nFelix Arntz\n\n2:59 pm on April 25, 2023 \n\n\n\nTags: 6.2 ( 85 ), performance ( 192 ), retrospective ( 16 ) \u00a0\u00a0\n\t\t\t\t\n\nThe benefits of prioritizing and measuring performance in WordPress 6.2\n\n\nBased on lab benchmarks, WordPress 6.2 loads 14-18% faster overall for blockBlock Block is the abstract term used to describe units of markup that, composed together, form the content or layout of a webpage using the WordPress editor. The idea combines concepts of what in the past may have achieved with shortcodes, custom HTML, and embed discovery into a single consistent API and user experience. themes and 2-5% faster overall for classic themes (measured via Largest Contentful Paint / LCP). Particularly server-side performance (measured via Time to First Byte / TTFB) is seeing a major boost of 17-23% for block themes and 3-5% for classic themes, which directly contributes to the overall load time.\nThis post provides more information and a retrospective on how those performance wins were achieved in the WordPress 6.2 release cycle.\nLearning from previous WordPress coreCore Core is the set of software required to run WordPress. The Core Development Team builds WordPress. releases\nDuring the betaBeta A pre-release of software that is given out to a large group of users to trial under real conditions. Beta versions have gone through alpha testing in-house and are generally fairly close in look, feel and function to the final product; however, design changes often occur as part of the process./RCrelease candidate One of the final stages in the version release cycle, this version signals the potential to be a final release to the public. Also see alpha (beta). testing phase of WordPress 6.1 in November 2022, it became evident that a few notable performance regressions had made it into the release when compared to the performance of WordPress 6.0. While the single most impactful performance regressionregression A software bug that breaks or degrades something that previously worked. Regressions are often treated as critical bugs or blockers. Recent regressions may be given higher priorities. A \"3.6 regression\" would be a bug in 3.6 that worked as intended in 3.5. was addressed before the 6.1 stable release in one of its release candidates, overall performance still regressed slightly when using a block theme. Previous WordPress core releases, especially 6.0, saw more notable performance regressions. Despite other performance enhancements landing in those releases, the regressions effectively ended up canceling out the enhancements. In WordPress 6.2, this is significantly different, with all key metrics improving over the previous release, as highlighted in these performance benchmarks shared by @oandregal.\nFor WordPress 6.1, the regressions were discussed in a general assessment of WordPress 6.1 RC performance. Despite contributors from different core teams quickly prioritizing and investigating the issues, it was too late in the release cycle to address them all. This was a great learning experience: As much as we are working on performance enhancements, it is as important to continuously monitor performance of existing core features to avoid regressions. The more regressions there are, the less impactful any other performance enhancements are overall. While this seems logical and simple, it sometimes still takes an actual learning experience to get things right.\nIt is great to see that we have put these learnings into practice, and the performance wins in WordPress 6.2 demonstrate that. So what changed in the 6.2 release cycle?\nIncreased focus on performance measurement\nWhen trying to summarize how performance work changed between the 6.1 and the 6.2 cycle in a single word, an increased focus on measurement proved to be the deciding factor. The following elaborates on the nuance of that simplified statement.\nIdentifying performance bottlenecks and opportunities for improvement\nIt was clearly visible that contributors were keen to rectify the 6.1 regressions and learn from that prior release. This already surfaced in the WordPress 6.1.1 follow up release which contained a few performance-related fixes: 12 of 30 tickets fixed in that release were focused on performance.\nNumerous contributors from different core teams actively worked towards identifying and addressing performance bottlenecks, by both benchmarking and profiling WordPress core performance.\nProfiling WordPress core has been tremendously helpful in identifying performance issues on the server-side, which has led to the notably improved TTFB performance we are seeing in WordPress 6.2. Common tools used for server-side profiling among contributors have been the open sourceOpen Source Open Source denotes software for which the original source code is made freely available and may be redistributed and modified.  Open Source **must be** delivered via a licensing model, see GPL. tools Xdebug and XHProf and the SaaS tool Blackfire. Contributors have been starting to define and document standardized ways for using these tools, which are intended to be published in the Make Performance Handbook soon.\nFor benchmarking WordPress core on the other hand, there was less clarity or known tools that could be used as is. While contributors initially came up with individual tooling of their choice to measure performance, the different benchmarking approaches had varying degrees of accuracy and ease of use, so it soon became clear that a more consistent approach would be needed. This was one of the key topics discussed in the first performance focused hallway hangout in January. From there, several contributors started more coordinated efforts for measuring performance, for both manual benchmarks locally and automated benchmarks via continuous integration.\nThe Performance Lead role\nAnother change that was made for the WordPress 6.2 cycle which has been supporting everything I have mentioned so far is the introduction of a new Performance Lead role as part of the release squad. This came as a result of the aforementioned performance focused hallway hangout, and I ended up stepping into this role for the 6.2 release. This enabled me to closely collaborate and support the other contributors and coordinate with them our performance measurement approaches. As mentioned before, I would like to emphasize that the performance wins in this release are a result of excellent work from several contributors on identifying performance weaknesses. The introduction of the Performance Lead role then merely brought a better representation of performance alongside the other members of the release squad.\nI hope the role of the Performance Lead is here to stay, and I am excited to see additional contributors step into this role in the future.\nAssessing performance on individual WordPress core patches / pull requests\nAs mentioned before, profiling is the recommended approach to identify performance bottlenecks in WordPress core. However, once a pull request with a potential fix is implemented, it is also crucial to measure the actual performance impact and through that validate whether the outcome is as expected. While profiling gives us an idea about the potential performance impact, it comes with caveats such as the overhead of the profiling tools running on the WordPress site, and also that it only captures a single request, which as mentioned above is subject to a good degree of variance when it comes to performance.\nVarious contributors in the WordPress 6.2 cycle benchmarked performance on individual pull requests, whether to prove a positive impact or performance or ensure that no regression is introduced. Different tools were used to assess the impact, often CLICLI Command Line Interface. Terminal (Bash) in Mac, Command Prompt in Windows, or WP-CLI for WordPress. commands like \u201cbenchmark-server-timing\u201d or \u201cbenchmark-web-vitals\u201d. The \u201cbenchmark-server-timing\u201d command has been most helpful for individual PRs with server-side performance impact, for example it was used in the #57502 ticketticket Created for both bug reports and feature development on the bug tracker. (see this comment), which is possibly the largest single performance enhancementenhancement Enhancements are simple improvements to WordPress, such as the addition of a hook, a new feature, or an improvement to an existing feature. in the 6.2 release. The \u201cbenchmark-web-vitals\u201d command however has still been useful for a few situations where performance decisions came down to exclusively client-side performance, for example in the #56990 ticket (see this comment), which explores the classic-themes.css performance impact.\nLaunching an automated performance testing workflow\nIn the WordPress 6.2 cycle, most of these benchmarks were conducted manually, which sometimes is a necessity due to the nature of the pull request, but other times is rather inefficient. Furthermore, it would not be feasible to benchmark performance manually for every WordPress core change \u2013 and that is precisely how a performance regression may be merged unnoticed. Several contributors have been collaborating on introducing an automated performance measuring CI workflow to WordPress core, and a first MVPMinimum Viable Product \"A minimum viable product (MVP) is a product with just enough features to satisfy early customers, and to provide feedback for future product development.\" - WikiPedia was committed to WordPress core in [55459]. With this CI workflow, WordPress core performance metrics are now recorded for every single commit and are available in this dashboard. This allows us to easily spot a potential regression where previously it would have gone unnoticed. While at this point, there is still a sizable amount of variance in the data points and a limited number of metrics are available, the team will iterate in the coming weeks and months. This is only the starting point, and additional features like CWV support are already being planned. Needless to say, this is a major milestone and win for monitoring performance in WordPress core and will reduce some of the measuring workload already for the upcoming 6.3 cycle.\nAssessing performance of WordPress core holistically\nWhile assessing performance on every individual WordPress core change (pull request / commit) is very important to ensure continuous monitoring of performance and avoid regressions, it is also important to keep track of overall performance in WordPress core. This is particularly true during the Beta and RC stages of a release cycle.\nAt this point in particular, it is advisable to use the production ZIP version of WordPress core (e.g. a particular Beta or RC release) instead of measuring in the WordPress core development environment. The \u201cbenchmark-web-vitals\u201d command mentioned in the previous section is perfect for this use-case, as it provides high-level performance metrics that capture both server-side and client-side performance. The resulting data can then be compared with the same metrics from e.g. the previous stable release, to get an idea how performance of WordPress core has changed (hopefully improved!) in the new release. This approach is what the numbers I shared in the beginning of this post are based on.\nPerformance benchmarks for WordPress 6.2\nI would like to share a few more detailed numbers for the WordPress 6.2 performance improvements. Generally, I have been benchmarking two different scenarios, which showcase particularly the server-side performance enhancements (with #57502 contributing the most to them):\nHome page using a block theme (Twenty Twenty-Three) with the default content (\u201cHello World!\u201d post)\nHome page using a classic theme (Twenty Twenty-One) with the default content (\u201cHello World!\u201d post)\nSince WordPress 6.2 included one notable client-side performance enhancement that affects only sites using images (see #56930), I included two more scenarios to assess that impact too:\nHome page using a block theme (Twenty Twenty-Three) with the default content (\u201cHello World!\u201d post) and a featured imageFeatured image A featured image is the main image used on your blog archive page and is pulled when the post or page is shared on social media. The image can be used to display in widget areas on your site or in a summary list of posts. on that post\nHome page using a classic theme (Twenty Twenty-One) with the default content (\u201cHello World!\u201d post) and a featured image on that post\nFor all of these scenarios, I then loaded the URLURL A specific web address of a website or web page on the Internet, such as a website\u2019s URL www.wordpress.org 20 times using the \u201cbenchmark-web-vitals\u201d command and recorded the metrics. The full metrics include more granular percentiles, but by far the most important ones are the medians (p50). Here is the data for the two scenarios with only the default \u201cHello world!\u201d post (no featured image):\nScenarioMetricWP 6.1.1 medianWP 6.2 medianDiff %Block Theme: Twenty Twenty-ThreeLCP281.7ms241.15ms-14.39%TTFB176.75ms137.8ms-22.04%Classic Theme: Twenty Twenty-OneLCP209.65ms203.65ms-2.86%TTFB75.3ms72.6ms-3.59%For comparison, here is the same data for the two alternative scenarios where the post has a featured image. Note how the LCP improvement for block themes is even more pronounced in this scenario:\nScenarioMetricWP 6.1.1 medianWP 6.2 medianDiff %Block Theme: Twenty Twenty-ThreeLCP292.8ms241.4ms-17.55%TTFB167.7ms138.45ms-17.44%Classic Theme: Twenty Twenty-OneLCP217.65ms206.95ms-4.92%TTFB75.35ms72.85ms-3.32%The full data can be inspected in this spreadsheet.\nTo close this section, it should be noted that of course the 4 scenarios above are not representative of what most actual WordPress sites look like. Some other benchmarks were using the theme unit testunit test Code written to test a small piece of code or functionality within a larger application. Everything from themes to WordPress core have a series of unit tests. Also see regression. data, and while that is more content, it is not necessarily more accurate either. There are inevitably limitations from lab analyses, and we will never be able to capture the \u201caverage\u201d or \u201crealistic\u201d WordPress site synthetically. However, the Core Performance Team is exploring a few good baseline scenarios as part of enhancing the aforementioned automated core performance testing CI workflow, and it would be great if in the 6.3 cycle we could align the benchmarks to use similar scenarios rather than every contributor including myself having their own scenarios for benchmarking.\nFor some of the individual ticket highlights that contributed to the performance improvements in WordPress 6.2, please see the recent core editor improvements post.\nComparing performance between block themes and classic themes\nYou may have noticed in the data above that the classic theme is apparently loading faster than the block theme. Let me clarify that a bit since, while that is technically true based on my benchmarks, the data may be deceiving at first glance.\nLet\u2019s take another look at the data from the first table above: For the LCP metric, the classic theme already loads notably faster (203.65ms vs 241.15ms, based on the first two scenarios for WordPress 6.2), but for TTFB, it\u2019s almost twice as fast (72.6ms vs 137.8ms). Server-side performance is better in classic themes mainly because block themes have to handle more data since much of what a classic theme\u2019s code is responsible for is now handled through more dynamic features that furthermore rely on making additional database queries. However, it also needs to be acknowledged that block theme support in WordPress core is still relatively new (little more than 1 year old now), while the logic for classic themes has seen more than a decade of refinements. In other words, chances are there is still a lot of headroom for improving server-side performance of block themes, while for classic themes there is probably less of that. The performance improvements in WordPress 6.2 perfectly indicate that, noting that TTFB with a block theme has improved far more than TTFB with a classic theme.\nNow here comes the most important part though: In client-side performance, block themes are much faster than classic themes. The way to spot that is by looking at the difference between the LCP metric and the TTFB metric, and here\u2019s why: LCP can be considered representative of the overall load time, while TTFB is the server response time. So \u201cLCP minus TTFB\u201d is representative of the client-side load time. If you make this calculation for the above data points for WordPress 6.2, you can clearly see the benefits of the block theme when it comes to client-side performance (103.35ms vs 131.05ms). These benefits are evident due to the more dynamic logic that is applied in block themes to e.g. load scripts and stylesheets. Rather than the common pattern of enqueuing a big stylesheet and big script in the theme, block themes load assets more granularly and dynamically, only for what is actually needed on the current page.\nYou may argue that it doesn\u2019t matter that client-side performance is ~30ms faster in a block theme if at the same time server-side performance is ~65ms slower. Yes, in this benchmark the classic theme is overall ~35ms faster than the block theme \u2013 however that is without any caching. It is a common best practice for WordPress sites to use a full page cache to avoid the need for all the WordPress server-side logic to run on every page load or, even better, to avoid the request to hit the WordPress site at all in favor of serving a cached response. While by far not all WordPress sites use a full page cache, many do. And in that case, the server-side performance becomes potentially less relevant. Keep in mind however that even then improving server-side performance is still important: As mentioned, many sites still do not use a full page cache, and even for those that do, certain dynamic content is almost impossible to reliably cache. However, if your WordPress site uses primarily static content and a full page cache, block themes are already faster than classic themes today \u2013 because they are faster client-side. You can \u201ccache\u201d away server-side performance problems, but you cannot do that on the client-side. In other words: Despite block themes being slower on the server-side, they provide a better foundation for building performant sites in the long run.\nAppendix: Tools to measure and profile performance\nTo finish this post, here you find a list of links to some of the tools mentioned:\nAutomated WordPress core performance dashboard\n\u201cBenchmark-web-vitals\u201d command\n\u201cBenchmark-server-timing\u201d command\nPerformance Lab plugin Server-Timing API\nMini plugin to \u201cunlock\u201d full metrics\nMini plugin as a starting point to expose additional metrics\n\nGutenberg pull request to add XHProf to @wordpress/env package\nDocumentation for how to add XHProf to core development environment\nProps @annezazu @tweetythierry @desrosj @joemcgill @hellofromtonya @spacedmonkey for extensive review and proofreading.\n#6-2, #performance, #retrospectiveLogin to Reply\n\n\n\n\n\n\n\n\n\n\n \nJoe Bailey-Roberts\n\n12:01 pm on April 25, 2023 \n\n\n\nTags: feature-notifications ( 45 ) \u00a0\u00a0\n\t\t\t\t\n\nWP Feature Notifications: 2023 Status Update\n\n\nThe WP Feature Notifications (formerly WP Notify) project was first proposed in 2019 in order to improve and modernise the way in which WordPress handles user notifications.\nIn the last few months we\u2019ve had a good amount of progress, as well as a number of changes, which have led to the recent publication of prerelease 0.2.0.\n0.2.0 \u2013 A robust JavaScriptJavaScript JavaScript or JS is an object-oriented computer programming language commonly used to create interactive effects within web browsers. WordPress makes extensive use of JS for a better user experience. While PHP is executed on the server, JS executes within a user\u2019s browser. https://www.javascript.com/. system\n\nYou can test out the current state of the feature pluginFeature Plugin A plugin that was created with the intention of eventually being proposed for inclusion in WordPress Core. See Features as Plugins. by downloading the latest release at https://github.com/WordPress/wp-feature-notifications/releases/latest. Please note that you will need to be using WordPress 6.2 or above.\nAlternatively, if you\u2019d like to get involved in development, you can clone and build the repo at https://github.com/WordPress/wp-feature-notifications, which includes ongoing work for the 0.3.0 milestone.\nWhat originally started as a UX proof of concept has evolved into a more sophisticated JSJS JavaScript, a web scripting language typically executed in the browser. Often used for advanced user interfaces and behaviors.-based system for displaying notifications based on serialised data. At the moment this uses static dummy data, however in a future update this will interface with the upcoming REST controllers to display persistent data.\nProps to @codekraft and @bitmachina for some exceptional work here, which has really progressed the project.\nLeadership, planning and the team\nAfter extensive work as project lead, @psykro has decided to step down from the role. On behalf of the whole team, I\u2019d like to thank him for the massive contributions he\u2019s made, and the time and effort he\u2019s put into the project over the last few years. @sephsekla has taken over project leadership in his stead.\nIn addition to our weekly office hours (15:00 UTC on Wednesday), @sephsekla, @codekraft, @bitmachina and @jason_the_adams have started a monthly planning call, in order to better scope out the future of the projects\nTo support the project\u2019s long-term goal of becoming part of WP CoreCore Core is the set of software required to run WordPress. The Core Development Team builds WordPress., the team is looking for partnership from a core committercommitter A developer with commit access. WordPress has five lead developers and four permanent core developers with commit access. Additionally, the project usually has a few guest or component committers - a developer receiving commit access, generally for a single release cycle (sometimes renewed) and/or for a specific component., who can provide guidance on strategy as well as potential barriers to entry.\nCore Feature vs Canonical PluginPlugin A plugin is a piece of software containing a group of functions that can be added to a WordPress website. They can extend functionality or add new features to your WordPress websites. WordPress plugins are written in the PHP programming language and integrate seamlessly with WordPress. These can be free in the WordPress.org Plugin Directory https://wordpress.org/plugins/ or can be cost-based plugin from a third-party\nMatt\u2019s post around Canonical Plugins late last year sparked some discussion as to whether this should be an option to consider for the future of the project. While this is a valuable concept, and indeed the approach taken for development, the team are in strong agreement that the update to notifications should be merged when ready, and not kept as a separate plugin.\nTo quote the original project proposal by @psykro and @schlessera:\n\nWordPress is currently lacking a fundamental mechanism: sending notifications to users to give them feedback about state changes in the system.\n\nNotification functionality is indeed fundamental, and already in constant use via the admin_notices hook, a workaround that has major issues of standardisation and accessibility. The new APIAPI An API or Application Programming Interface is a software intermediary that allows programs to interact with each other and share data in limited, clearly defined ways. needs to be universal, and available by default, otherwise admin_notices will remain the de facto option.\nGutenbergGutenberg The Gutenberg project is the new Editor Interface for WordPress. The editor improves the process and experience of creating new content, making writing rich content much simpler. It uses \u2018blocks\u2019 to add richness rather than shortcodes, custom HTML etc. https://wordpress.org/gutenberg/ Phase 3\nThe team was excited to see the upcoming evolution of the adminadmin (and super admin) experience, which was recently detailed in https://make.wordpress.org/core/2023/03/24/phase-3-collaboration/. As the WordPress dashboard continues to modernise, we are keen to play our part in improving the current admin_notices experience. It\u2019s crucial to ensure that our designs and functionality mesh with the work being done here.\nRoadmap and Next steps\nThe team has recently picked up momentum, but there is still much to be done in order to achieve the project\u2019s goals. Currently the focus is on refining scope and transforming the demo into a minimum viable productMinimum Viable Product \"A minimum viable product (MVP) is a product with just enough features to satisfy early customers, and to provide feedback for future product development.\" - WikiPedia (MVPMinimum Viable Product \"A minimum viable product (MVP) is a product with just enough features to satisfy early customers, and to provide feedback for future product development.\" - WikiPedia). The upcoming 0.3.0 prerelease is planned to be a minimal, but functional notification system, with all demo content removed.\nThe next (and largest) piece of the puzzle is persistent database storage of notification data. We\u2019re working on finalising the proposed schema, as well as discussing other issues such as retention, translations, multisitemultisite Used to describe a WordPress installation with a network of multiple blogs, grouped by sites. This installation type has shared users tables, and creates separate database tables for each blog (wp_posts becomes wp_0_posts). See also network, blog, site support and more.\nAs we move on to this major phase, the team would greatly welcome additional contributors onto the project, particularly developers specialising in PHPPHP The web scripting language in which WordPress is primarily architected. WordPress requires PHP 5.6.20 or higher and SQL.\nExpect a consultation and call for feedback on how we approach this database architecture soon!\nGet involved\nThe project is always on the lookout for new contributors. If you would like to contribute to the project, we invite you to join the #feature-notifications channel in the Making WordPress Slack for our weekly office hours, every Wednesday at 15:00 UTC.\nWe will have a presence at the WordCampWordCamp WordCamps are casual, locally-organized conferences covering everything related to WordPress. They're one of the places where the WordPress community comes together to teach one another what they\u2019ve learned throughout the year and share the joy. Learn more. Europe Contributor DayContributor Day Contributor Days are standalone days, frequently held before or after WordCamps but they can also happen at any time. They are events where people get together to work on various areas of https://make.wordpress.org/ There are many teams that people can participate in, each with a different focus. https://2017.us.wordcamp.org/contributor-day/ https://make.wordpress.org/support/handbook/getting-started/getting-started-at-a-contributor-day/., where we would love to see some new contributors. Regardless of skill set or expertise, Developers, designers, users or any other interested parties are very welcome!\nProps to @erikyo and @bitmachina for their collaboration writing this post, and and @bacoords and @psykro for reviewing.\n#feature-notificationsLogin to Reply\n\n\n\n\n\n\n\n\n\n\n \nEmily Clarke\n\n10:39 am on April 25, 2023 \n\n\n\nTags: agenda ( 877 ), meeting ( 250 ), performance ( 192 ), performance-chat ( 150 ) \u00a0\u00a0\n\t\t\t\t\n\nPerformance Chat Agenda: 25 April 2023\n\n\nHere is the agenda for this week\u2019s performance team meeting scheduled for April 25, 2023 at 15:00 UTC.\nAnnouncements\nUpdated the cadence of bugbug A bug is an error or unexpected result. Performance improvements, code optimization, and are considered enhancements, not defects. After feature freeze, only bugs are dealt with, with regressions (adverse changes from the previous version) being the highest priority. scrubs to be every 2 weeks \u2013 next one scheduled for April 26, 2023 at 15:00 UTC.\nSQLite decoupling discussion\n\nPriority projects \nServer response time\nDatabase optimization\nJavaScript & CSS\nImages\nMeasurement\nEcosystem tools\nCreating standalone plugins\nNew projects / proposals\n\nOpen floor\nThis meeting happens in the #core-performance channel. To join the meeting, you\u2019ll need an account on the Make WordPress Slack.\n#agenda, #meeting, #performance, #performance-chatLogin to Reply\n\n\n\n\n\n\n\n\n\n\n \nJb Audras\n\n10:38 pm on April 24, 2023 \n\n\n\nTags: 6-3 ( 8 ), core ( 498 ), week in core ( 220 ) \u00a0\u00a0\n\t\t\t\t\n\nA Week in Core \u2013 April 24, 2023\n\n\nWelcome back to a new issue of Week in CoreCore Core is the set of software required to run WordPress. The Core Development Team builds WordPress.. Let\u2019s take a look at what changed on TracTrac An open source project by Edgewall Software that serves as a bug tracker and project management tool for WordPress. between April 17 and April 24, 2023.\n27 commits\n36 contributors\n51 tickets created\n6 tickets reopened\n53 tickets closed\nTicketticket Created for both bug reports and feature development on the bug tracker.\u00a0numbers are based on the\u00a0Trac timeline for the period above. The following is a summary of commits, organized by component and/or focus.\nCode changes\nBuild/Tests Tools\nCorrect the expected quotes in get_comment_author_url_link() tests \u2013 #57839\nBundled Themes\nTwenty Nineteen: Fix a translationtranslation The process (or result) of changing text, words, and display formatting to support another language. Also see localization, internationalization. issue in Comments navigation text \u2013 #58149\nCoding Standards\nEscape edit profile URLURL A specific web address of a website or web page on the Internet, such as a website\u2019s URL www.wordpress.org in default_password_nag() \u2013 #58182\nRemove unused $key variable in wp-admin/network/sites.php \u2013 #57839\nUpdate code layout in default_password_nag() for readability \u2013 #57839\nUse more meaningful variable names in various comment functions \u2013 #57839\nUse strict comparison in wp-admin/includes/class-wp-ms-sites-list-table.php \u2013 #58139\nUse strict comparison in wp-admin/includes/class-wp-site-icon.php \u2013 #57839\nUse strict comparison where strtolower() is involved \u2013 #57839\nUse strict comparison where trim() is involved \u2013 #57839\nDocs\nUse third-person singular verbs for WP_Importer related function descriptions, as per docblocks standards \u2013 #57840\nUse third-person singular verbs in various function descriptions, as per docblocks standards \u2013 #57840\nEditor\nAdd selectors field to blockBlock Block is the abstract term used to describe units of markup that, composed together, form the content or layout of a webpage using the WordPress editor. The idea combines concepts of what in the past may have achieved with shortcodes, custom HTML, and embed discovery into a single consistent API and user experience. type definition \u2013 #57585\nHTMLHTML HyperText Markup Language. The semantic scripting language primarily used for outputting content in web browsers. APIAPI An API or Application Programming Interface is a software intermediary that allows programs to interact with each other and share data in limited, clearly defined ways.\nAdd support for a few invalidinvalid A resolution on the bug tracker (and generally common in software development, sometimes also notabug) that indicates the ticket is not a bug, is a support request, or is generally invalid. HTML comment forms \u2013 #58007\nEnsure attribute updates happen only once for case variants \u2013 #58146\nFix a case where updates are overlooked when seeking to earlier locations \u2013 #58160\nUpdate code style so it passes when backported into GutenbergGutenberg The Gutenberg project is the new Editor Interface for WordPress. The editor improves the process and experience of creating new content, making writing rich content much simpler. It uses \u2018blocks\u2019 to add richness rather than shortcodes, custom HTML etc. https://wordpress.org/gutenberg/ \u2013 #58170\nI18Ni18n Internationalization, or the act of writing and preparing code to be fully translatable into other languages. Also see localization. Often written with a lowercase i so it is not confused with a lowercase L or the numeral 1. Often an acquired skill.\nUse correct translation function in wp-admin/includes/media.php \u2013 #58138\nNetworks and Sites\nSimplify the check for main site on Networknetwork (versus site, blog) Adminadmin (and super admin) \u2192 Sites screen \u2013 #58150\nUse is_main_site() in a few more places \u2013 #58150\nScript Loader\nImprove code style and readability in _wp_normalize_relative_css_links() \u2013 #58069\nOptimize performance of _wp_normalize_relative_css_links() by more than 2x \u2013 #58069, #54243\nSecurity\nUpdate GitHubGitHub GitHub is a website that offers online implementation of git repositories that can easily be shared, copied and modified by other developers. Public repositories are free to host, private repositories require a paid subscription. GitHub introduced the concept of the \u2018pull request\u2019 where code changes done in branches by contributors can be reviewed and discussed before being merged be the repository owner.  https://github.com/ security policy to refer to H1 \u2013 #57937\nSite Health\nBump the recommended MariaDB version to 10.4 \u2013 #58158\nTaxonomyTaxonomy A taxonomy is a way to group things together. In WordPress, some common taxonomies are category, link, tag, or post format. https://codex.wordpress.org/Taxonomies#Default_Taxonomies.\nAlways lazily load term metaMeta Meta is a term that refers to the inside workings of a group. For us, this is the team that works on internal WordPress sites like WordCamp Central and Make WordPress. \u2013 #57645\nUsers\nCache database queries within WP_User_Query class \u2013 #40613\nChange cache group from users-queries to user-queries \u2013 #40613\nProps\nThanks to the 36 people who contributed to WordPress Core on Trac last week: @sergeybiryukov (6), @mukesh27 (4), @dmsnell (4), @spacedmonkey (4), @peterwilsoncc (3), @audrasjb (3), @afercia (3), @poena (3), @aristath (3), @mujuonly (2), @costdev (2), @hellofromTonya (2), @krupalpanchal (2), @pouicpouic (2), @jbcouton (1), @jankyz (1), @flixos90 (1), @rjasdfiii (1), @khoipro (1), @OllieJones (1), @srikanthmeenakshi (1), @strategio (1), @dd32 (1), @westi (1), @zieladam (1), @johnjamesjacoby (1), @JavierCasares (1), @ecorica (1), @westonruter (1), @vladytimy (1), @desrosj (1), @aaronrobertshaw (1), @ntsekouras (1), @utsav72640 (1), @laurentmagnin (1), and @sabernhardt (1).\nCongrats and welcome to our 4 new contributors of the week:\u00a0@pouicpouic, @jbcouton, @ecorica, @laurentmagnin \u2665\ufe0f\nCore committers: @sergeybiryukov (11), @audrasjb (5), @spacedmonkey (3), @zieladam (2), @bernhard-reiter (2), @gziolo (1), @peterwilsoncc (1), @azaozz (1), and @westonruter (1).\n#6-3, #core, #week-in-coreLogin to Reply\n\n\n\n\n\n\n\nPost navigation\n\u2190 Older posts\n\n\n\n\n\n\n\n\n\n\nSearch\n\n\n\nEmail Updates\n\n\nEnter your email address to subscribe to this blog and receive notifications of new posts by email.\n\n\n\n\t\t\t\t\t\t\tEmail Address\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\t\t\t\t\t\t\tSubscribe\t\t\t\t\t\t\n\n\n\n\t\t\t\t\tJoin 5,560 other subscribers\t\t\t\t\n\nRecent UpdatesRecent CommentsNo RepliesRecent UpdatesRecent CommentsNo RepliesCurrent Release The current release in progress is WordPress 6.3.\nPlanned future releases are listed on the Project Roadmap.\nFeature projects not tied to specific releases can be found on the Features page.\n\nRegular ChatsNote: All chats happen on Slack.\n\n\n\nWeekly Developer Meetings: Wednesday 20:00 UTC in #core\n\n\nAbout the Dev Chat\n\n\nAgendas | Summaries\n\n\n\n\n\nAPAC Triage Sessions Tuesday 5:00 UTC alternating between #core and #core-editor\n\n\nJavaScript Weekly Chat Tuesday 14:00 UTC in #core-js\n\n\nPerformance Weekly Chat Tuesday 15:00 UTC in #core-performance\n\n\nMultisite Weekly Chat Tuesday 17:00 UTC in #core-multisite\n\n\nREST API Weekly Chat Thursday 18:00 UTC in #core-restapi\n\n\nEditor Weekly Chat Wednesday 14:00 UTC in #core-editor\n\n\nNew Contributors Chat Wednesday 19:00 UTC in #core\n\n\nImages/Media Weekly Chat Thursday 15:00 UTC in #core-media\n\n\nCSS Weekly Chat Thursday 21:00 UTC in #core-css\n\n\nCustomize Weekly Chat Monday 19:00 UTC in #core-customize\n\n\n\n\nSee all meetings \u2192 \nRecent Posts and Comments\n\n\n\t\t\tTeam Pledges\n\t\t\n\n1853 people have pledged time to contribute to Core Team efforts! When looking for help on a project or program, try starting by reaching out to them!\t\t\n\n\n\n\n\n\n\nAboutNewsHostingDonateSwag\nDocumentationDevelopersGet InvolvedLearn\nShowcasePluginsThemesPatterns\nWordCampWordPress.TVBuddyPressbbPress\nWordPress.comMattPrivacyPublic Code\n\n\n\n\n\n\n\nWordPress.org\n\n\n \n\n\n\n\nWordPress.org\n\n\n\n \n\n\n\nVisit our Facebook page\nVisit our Twitter account\nVisit our Instagram account\nVisit our LinkedIn account\n\n\n\n\n\n\n \n\n\n\n\nssearch\nccompose new post\nr reply\ne edit\nt go to top\nj go to the next post or comment\nk go to the previous post or comment\no toggle comment visibility\nesc cancel edit post or comment\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\tPlease enable JavaScript to view this page properly.\t\n \n\n\u00a0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLoading Comments...\n\n\n\n\u00a0\n\n\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tYou must be logged in to post a comment.\t\t\t\t\t\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \n",
    "links": [
        "#content",
        "https://login.wordpress.org/?redirect_to=https%3A%2F%2Fmake.wordpress.org%2Fcore%2F&locale=en_US",
        "https://login.wordpress.org/register?locale=en_US",
        "https://wordpress.org/",
        "https://wordpress.org/news/",
        "https://wordpress.org/download/",
        "https://wordpress.org/download/",
        "https://wordpress.org/themes/",
        "https://wordpress.org/patterns/",
        "https://wordpress.org/plugins/",
        "https://wordpress.org/mobile/",
        "https://wordpress.org/hosting/",
        "https://openverse.org/",
        "https://learn.wordpress.org/",
        "https://learn.wordpress.org/",
        "https://wordpress.org/documentation/",
        "https://wordpress.org/support/forums/",
        "https://developer.wordpress.org/",
        "https://wordpress.tv/",
        "https://make.wordpress.org/",
        "https://make.wordpress.org/",
        "https://wordpress.org/photos/",
        "https://wordpress.org/five-for-the-future/",
        "https://central.wordcamp.org/",
        "https://www.meetup.com/pro/wordpress/",
        "https://jobs.wordpress.net/",
        "https://wordpress.org/about/",
        "https://wordpress.org/about/",
        "https://wordpress.org/showcase/",
        "https://wordpress.org/enterprise/",
        "https://wordpress.org/gutenberg/",
        "https://mercantile.wordpress.org/",
        "https://wordpress.org/download/",
        "https://wordpress.org/download/",
        "#",
        "https://make.wordpress.org/core/",
        "https://make.wordpress.org/core/reports/",
        "https://make.wordpress.org/core/components/",
        "https://make.wordpress.org/core/handbook/",
        "https://core.trac.wordpress.org/browser",
        "https://core.trac.wordpress.org/timeline",
        "https://login.wordpress.org/?redirect_to=https://core.trac.wordpress.org/newticket",
        "https://wordpress.org/support/bb-login.php?redirect_to=https://core.trac.wordpress.org/newticket",
        "https://core.trac.wordpress.org/tickets/good-first-bugs",
        "https://make.wordpress.org/core/handbook/testing/bug-gardening/",
        "https://make.wordpress.org/core/reports/",
        "https://core.trac.wordpress.org/tickets/needs-testing",
        "https://make.wordpress.org/core/features/",
        "https://make.wordpress.org/core/handbook/",
        "https://make.wordpress.org/chat/",
        "http://time.is/2000_in_UTC",
        "https://wordpress.slack.com/messages/core/",
        "https://make.wordpress.org/chat/",
        "https://profiles.wordpress.org/audrasjb/",
        "https://profiles.wordpress.org/audrasjb/",
        "https://make.wordpress.org/core/tag/6-3/",
        "https://make.wordpress.org/core/tag/core/",
        "https://make.wordpress.org/core/tag/week-in-core/",
        "https://make.wordpress.org/core/2023/05/01/a-week-in-core-may-1-2023/",
        "https://core.trac.wordpress.org/timeline?from=05%2F01%2F2023&daysback=7&authors=&ticket=on&changeset=on&repo-=on&repo-design=on&repo-tests=on&sfp_email=&sfph_mail=&update=Update",
        "https://core.trac.wordpress.org/ticket/56982",
        "https://core.trac.wordpress.org/ticket/58136",
        "https://core.trac.wordpress.org/ticket/58181",
        "#l10n",
        "#l10n",
        "#i18n",
        "https://core.trac.wordpress.org/ticket/58138",
        "https://core.trac.wordpress.org/ticket/58177",
        "https://core.trac.wordpress.org/ticket/57756",
        "https://core.trac.wordpress.org/ticket/57736",
        "https://profiles.wordpress.org/audrasjb/",
        "https://profiles.wordpress.org/mukesh27/",
        "https://profiles.wordpress.org/sergeybiryukov/",
        "https://profiles.wordpress.org/hellofromtonya/",
        "https://profiles.wordpress.org/neychok/",
        "https://profiles.wordpress.org/vladytimy/",
        "https://profiles.wordpress.org/mujuonly/",
        "https://profiles.wordpress.org/dd32/",
        "https://profiles.wordpress.org/hztyfoon/",
        "https://profiles.wordpress.org/malavvasita/",
        "https://profiles.wordpress.org/davidbaumwald/",
        "https://profiles.wordpress.org/youknowriad/",
        "https://profiles.wordpress.org/flixos90/",
        "https://profiles.wordpress.org/presskopp/",
        "https://profiles.wordpress.org/jorgefilipecosta/",
        "https://profiles.wordpress.org/spacedmonkey/",
        "https://profiles.wordpress.org/brookedot/",
        "https://profiles.wordpress.org/krunal265/",
        "https://profiles.wordpress.org/costdev/",
        "https://profiles.wordpress.org/krupalpanchal/",
        "https://profiles.wordpress.org/audrasjb/",
        "https://profiles.wordpress.org/sergeybiryukov/",
        "https://profiles.wordpress.org/oandregal/",
        "https://make.wordpress.org/core/tag/6-3/",
        "https://make.wordpress.org/core/tag/core/",
        "https://make.wordpress.org/core/tag/week-in-core/",
        "https://login.wordpress.org/?redirect_to=https%3A%2F%2Fmake.wordpress.org%2Fcore%2F2023%2F05%2F01%2Fa-week-in-core-may-1-2023%2F%23respond&locale=en_US",
        "https://profiles.wordpress.org/flixos90/",
        "https://profiles.wordpress.org/flixos90/",
        "https://make.wordpress.org/core/tag/agenda/",
        "https://make.wordpress.org/core/tag/meeting/",
        "https://make.wordpress.org/core/tag/performance/",
        "https://make.wordpress.org/core/tag/performance-chat/",
        "https://make.wordpress.org/core/2023/05/01/performance-chat-agenda-2-may-2023/",
        "https://www.timeanddate.com/worldclock/fixedtime.html?iso=20230502T1500",
        "https://make.wordpress.org/performance/roadmap-2023/#category-server-response-time",
        "https://make.wordpress.org/performance/roadmap-2023/#category-database-optimization",
        "https://make.wordpress.org/performance/roadmap-2023/#category-javascript-css",
        "https://make.wordpress.org/performance/roadmap-2023/#category-images",
        "https://make.wordpress.org/performance/roadmap-2023/#category-measurement",
        "https://make.wordpress.org/performance/roadmap-2023/#category-ecosystem-tools",
        "https://github.com/WordPress/performance/issues/656",
        "http://wordpress.slack.com/messages/core-performance/",
        "https://make.wordpress.org/chat/",
        "https://make.wordpress.org/core/tag/agenda/",
        "https://make.wordpress.org/core/tag/meeting/",
        "https://make.wordpress.org/core/tag/performance/",
        "https://make.wordpress.org/core/tag/performance-chat/",
        "https://login.wordpress.org/?redirect_to=https%3A%2F%2Fmake.wordpress.org%2Fcore%2F2023%2F05%2F01%2Fperformance-chat-agenda-2-may-2023%2F%23respond&locale=en_US",
        "https://profiles.wordpress.org/ironprogrammer/",
        "https://profiles.wordpress.org/ironprogrammer/",
        "https://make.wordpress.org/core/tag/6-3/",
        "https://make.wordpress.org/core/tag/6-2/",
        "https://make.wordpress.org/core/tag/dev-chat/",
        "https://make.wordpress.org/core/tag/meeting/",
        "https://make.wordpress.org/core/tag/summary/",
        "https://make.wordpress.org/core/2023/04/27/dev-chat-summary-april-19-2023-2/",
        "https://www.timeanddate.com/worldclock/fixedtime.html?iso=20230426T2000",
        "https://wordpress.slack.com/messages/core/",
        "https://make.wordpress.org/chat/",
        "https://wordpress.slack.com/archives/C02RQBWTW/p1682539204017639",
        "https://slack.com/",
        "https://make.wordpress.org/chat/",
        "https://make.wordpress.org/core/2023/04/19/dev-chat-summary-april-19-2023/",
        "https://make.wordpress.org/core/2023/04/24/a-week-in-core-april-24-2023/",
        "https://profiles.wordpress.org/audrasjb/",
        "https://make.wordpress.org/core/2023/04/25/the-benefits-of-prioritizing-and-measuring-performance-in-wordpress-6-2/",
        "https://make.wordpress.org/core/2023/04/25/wp-feature-notifications-2023-status-update/",
        "https://wordpress.org/gutenberg/",
        "https://wordpress.org/news/2023/04/episode-54-open-webs-bill-of-rights/",
        "https://profiles.wordpress.org/ironprogrammer/",
        "https://make.wordpress.org/core/2023/04/14/wordpress-6-3-planning-proposal-call-for-volunteers/",
        "https://make.wordpress.org/core/2023/04/07/preparing-for-the-next-women-nonbinary-release-squad/",
        "https://profiles.wordpress.org/audrasjb/",
        "https://core.trac.wordpress.org/query?status=accepted&status=assigned&status=closed&status=new&status=reopened&status=reviewing&milestone=6.2.1&group=resolution&col=id&col=summary&col=status&col=milestone&col=owner&col=type&col=priority&order=priority",
        "https://github.com/orgs/WordPress/projects/88",
        "https://profiles.wordpress.org/ironprogrammer/",
        "https://profiles.wordpress.org/audrasjb/",
        "https://profiles.wordpress.org/sergeybiryukov/",
        "https://profiles.wordpress.org/ironprogrammer/",
        "https://wordpress.slack.com/archives/C02QB2JS7",
        "https://profiles.wordpress.org/audrasjb/",
        "https://profiles.wordpress.org/presskopp/",
        "https://core.trac.wordpress.org/ticket/33073",
        "https://profiles.wordpress.org/ironprogrammer/",
        "https://profiles.wordpress.org/sergeybiryukov/",
        "https://core.trac.wordpress.org/ticket/57999",
        "https://profiles.wordpress.org/audrasjb/",
        "https://profiles.wordpress.org/pbiron/",
        "https://profiles.wordpress.org/ironprogrammer/",
        "https://core.trac.wordpress.org/ticket/53682",
        "https://profiles.wordpress.org/audrasjb/",
        "https://core.trac.wordpress.org/ticket/54836",
        "https://profiles.wordpress.org/ironprogrammer/",
        "https://profiles.wordpress.org/audrasjb/",
        "https://profiles.wordpress.org/craigfrancis/",
        "https://profiles.wordpress.org/pbiron/",
        "https://core.trac.wordpress.org/ticket/50081",
        "https://profiles.wordpress.org/audrasjb/",
        "https://profiles.wordpress.org/leogermani/",
        "https://profiles.wordpress.org/sergeybiryukov/",
        "https://core.trac.wordpress.org/ticket/39645",
        "https://www.timeanddate.com/worldclock/fixedtime.html?iso=20230503T2000",
        "https://wordpress.slack.com/archives/C02RQBWTW",
        "https://profiles.wordpress.org/costdev/",
        "https://make.wordpress.org/core/tag/6-3/",
        "https://make.wordpress.org/core/tag/6-2/",
        "https://make.wordpress.org/core/tag/dev-chat/",
        "https://make.wordpress.org/core/tag/meeting/",
        "https://make.wordpress.org/core/tag/summary/",
        "https://login.wordpress.org/?redirect_to=https%3A%2F%2Fmake.wordpress.org%2Fcore%2F2023%2F04%2F27%2Fdev-chat-summary-april-19-2023-2%2F%23respond&locale=en_US",
        "https://profiles.wordpress.org/paaljoachim/",
        "https://profiles.wordpress.org/paaljoachim/",
        "https://make.wordpress.org/core/tag/core-editor/",
        "https://make.wordpress.org/core/tag/core-editor-summary/",
        "https://make.wordpress.org/core/tag/gutenberg/",
        "https://make.wordpress.org/core/tag/meeting-notes/",
        "https://make.wordpress.org/core/tag/summary/",
        "https://make.wordpress.org/core/2023/04/26/editor-chat-summary-26-april-2023/",
        "https://make.wordpress.org/core/2023/04/26/editor-chat-agenda-26-april-2023/",
        "https://www.timeanddate.com/worldclock/fixedtime.html?msg=Core+editor+meeting&iso=20230412T16&p1=187&ah=1",
        "https://wordpress.slack.com/archives/C02QB2JS7/p1682517629755279",
        "https://github.com/WordPress/gutenberg/releases/tag/v15.7.0-rc.1",
        "https://github.com/WordPress/gutenberg/issues/41549",
        "https://github.com/WordPress/gutenberg/issues/41241",
        "https://github.com/WordPress/gutenberg/issues/38529",
        "https://github.com/WordPress/gutenberg/issues/33447",
        "https://github.com/WordPress/gutenberg/issues/44720",
        "https://github.com/WordPress/gutenberg/issues/41232",
        "https://github.com/WordPress/gutenberg/issues/38167",
        "https://github.com/WordPress/gutenberg/issues/41405",
        "https://github.com/WordPress/gutenberg/issues/38407",
        "https://github.com/WordPress/gutenberg/labels/%5BPackage%5D%20Components",
        "https://github.com/WordPress/gutenberg/issues/41479",
        "https://profiles.wordpress.org/bph/",
        "https://profiles.wordpress.org/greenshady/",
        "https://developer.wordpress.org/news/2023/04/per-block-css-with-theme-json/",
        "https://profiles.wordpress.org/welcher/",
        "https://developer.wordpress.org/news/2023/04/how-webpack-and-wordpress-packages-interact/",
        "https://github.com/",
        "https://github.com/WordPress/developer-blog-content/discussions/categories/topic-ideas",
        "https://make.wordpress.org/core/tag/core-editor/",
        "https://make.wordpress.org/core/tag/core-editor-summary/",
        "https://make.wordpress.org/core/tag/gutenberg/",
        "https://make.wordpress.org/core/tag/meeting-notes/",
        "https://make.wordpress.org/core/tag/summary/",
        "https://login.wordpress.org/?redirect_to=https%3A%2F%2Fmake.wordpress.org%2Fcore%2F2023%2F04%2F26%2Feditor-chat-summary-26-april-2023%2F%23respond&locale=en_US",
        "https://profiles.wordpress.org/paaljoachim/",
        "https://profiles.wordpress.org/paaljoachim/",
        "https://make.wordpress.org/core/tag/agenda/",
        "https://make.wordpress.org/core/tag/core-editor/",
        "https://make.wordpress.org/core/tag/core-editor-agenda/",
        "https://make.wordpress.org/core/tag/meeting/",
        "https://make.wordpress.org/core/2023/04/26/editor-chat-agenda-26-april-2023/",
        "https://profiles.wordpress.org/paaljoachim/",
        "https://www.timeanddate.com/worldclock/fixedtime.html?msg=Core+editor+meeting&iso=20230412T16&p1=187&ah=1",
        "https://www.timeanddate.com/worldclock/fixedtime.html?msg=Core+editor+meeting&iso=20230412T16&p1=187&ah=1",
        "https://www.timeanddate.com/worldclock/fixedtime.html?msg=Core+editor+meeting&iso=20230412T16&p1=187&ah=1",
        "https://wordpress.slack.com/archives/C02QB2JS7",
        "https://slack.com/",
        "https://make.wordpress.org/chat/",
        "https://wordpress.org/gutenberg/",
        "https://github.com/WordPress/gutenberg/releases/tag/v15.7.0-rc.1",
        "https://profiles.wordpress.org/bph/",
        "https://github.com/WordPress/gutenberg/issues/41549",
        "https://github.com/WordPress/gutenberg/issues/41241",
        "https://github.com/WordPress/gutenberg/issues/38529",
        "https://github.com/WordPress/gutenberg/issues/33447",
        "https://github.com/WordPress/gutenberg/issues/44720",
        "https://github.com/WordPress/gutenberg/issues/41232",
        "https://github.com/WordPress/gutenberg/issues/38167",
        "https://github.com/WordPress/gutenberg/issues/41405",
        "https://github.com/WordPress/gutenberg/issues/38407",
        "https://github.com/WordPress/gutenberg/labels/%5BPackage%5D%20Components",
        "https://github.com/WordPress/gutenberg/issues/41479",
        "https://make.wordpress.org/core/tag/agenda/",
        "https://make.wordpress.org/core/tag/core-editor/",
        "https://make.wordpress.org/core/tag/core-editor-agenda/",
        "https://make.wordpress.org/core/tag/meeting/",
        "https://login.wordpress.org/?redirect_to=https%3A%2F%2Fmake.wordpress.org%2Fcore%2F2023%2F04%2F26%2Feditor-chat-agenda-26-april-2023%2F%23respond&locale=en_US",
        "https://profiles.wordpress.org/clarkeemily/",
        "https://profiles.wordpress.org/clarkeemily/",
        "https://make.wordpress.org/core/tag/core-media/",
        "https://make.wordpress.org/core/tag/core-performance/",
        "https://make.wordpress.org/core/tag/performance/",
        "https://make.wordpress.org/core/tag/performance-chat/",
        "https://make.wordpress.org/core/tag/summary/",
        "https://make.wordpress.org/core/2023/04/25/performance-chat-summary-25-april-2023/",
        "https://make.wordpress.org/core/2023/04/25/performance-chat-agenda-25-april-2023/",
        "https://wordpress.slack.com/archives/C02KGN5K076/p1682434772025969",
        "https://www.timeanddate.com/worldclock/fixedtime.html?iso=20230426T1500",
        "https://profiles.wordpress.org/flixos90/",
        "https://make.wordpress.org/core/2023/04/25/the-benefits-of-prioritizing-and-measuring-performance-in-wordpress-6-2/",
        "https://make.wordpress.org/core/2023/04/05/wordpress-6-2-performance-improvements-for-all-themes/",
        "https://wordpress.slack.com/archives/C02KGN5K076/p1680019422571839",
        "https://profiles.wordpress.org/olliejones/",
        "https://profiles.wordpress.org/10upsimon/",
        "https://profiles.wordpress.org/rmccue/",
        "https://profiles.wordpress.org/spacedmonkey/",
        "https://profiles.wordpress.org/rmccue/",
        "https://profiles.wordpress.org/spacedmonkey/",
        "https://profiles.wordpress.org/olliejones/",
        "https://profiles.wordpress.org/aristath/",
        "https://profiles.wordpress.org/olliejones/",
        "https://profiles.wordpress.org/spacedmonkey/",
        "https://profiles.wordpress.org/flixos90/",
        "https://profiles.wordpress.org/aristath/",
        "https://profiles.wordpress.org/joemcgill/",
        "https://profiles.wordpress.org/olliejones/",
        "https://profiles.wordpress.org/flixos90/",
        "https://profiles.wordpress.org/aristath/",
        "https://profiles.wordpress.org/flixos90/",
        "https://profiles.wordpress.org/aristath/",
        "https://profiles.wordpress.org/10upsimon/",
        "https://profiles.wordpress.org/flixos90/",
        "https://profiles.wordpress.org/10upsimon/",
        "https://profiles.wordpress.org/joemcgill/",
        "https://profiles.wordpress.org/flixos90/",
        "https://profiles.wordpress.org/joemcgill/",
        "https://www.mysql.com/",
        "https://make.wordpress.org/performance/roadmap-2023/#category-server-response-time",
        "https://profiles.wordpress.org/joemcgill/",
        "https://profiles.wordpress.org/spacedmonkey/",
        "https://profiles.wordpress.org/aristath/",
        "https://profiles.wordpress.org/spacedmonkey/",
        "https://github.com/WordPress/wordpress-develop/commit/2c6bf77a9e7532c6ac3a03502b44d108cae86179",
        "https://github.com/WordPress/wordpress-develop/pull/4128",
        "https://github.com/WordPress/wordpress-develop/pull/4259",
        "https://github.com/WordPress/wordpress-develop/pull/4097",
        "https://profiles.wordpress.org/oandregal/",
        "https://profiles.wordpress.org/joemcgill/",
        "https://profiles.wordpress.org/10upsimon/",
        "https://profiles.wordpress.org/mukesh27/",
        "https://profiles.wordpress.org/flixos90/",
        "https://profiles.wordpress.org/flixos90/",
        "https://profiles.wordpress.org/joemcgill/",
        "https://profiles.wordpress.org/flixos90/",
        "https://make.wordpress.org/performance/roadmap-2023/#category-database-optimization",
        "https://profiles.wordpress.org/aristath/",
        "https://profiles.wordpress.org/spacedmonkey/",
        "https://profiles.wordpress.org/olliejones/",
        "https://profiles.wordpress.org/rjasdfiii/",
        "https://profiles.wordpress.org/olliejones/",
        "https://profiles.wordpress.org/spacedmonkey/",
        "https://profiles.wordpress.org/spacedmonkey/",
        "https://github.com/wp-cli/cache-command/issues/79",
        "https://github.com/wp-cli/cache-command/issues/80",
        "https://www.javascript.com/",
        "https://make.wordpress.org/performance/roadmap-2023/#category-javascript-css",
        "https://profiles.wordpress.org/mukesh27/",
        "https://profiles.wordpress.org/10upsimon/",
        "https://profiles.wordpress.org/adamsilverstein/",
        "https://profiles.wordpress.org/10upsimon/",
        "https://profiles.wordpress.org/joemcgill/",
        "https://profiles.wordpress.org/adamsilverstein/",
        "https://profiles.wordpress.org/westonruter/",
        "https://profiles.wordpress.org/spacedmonkey/",
        "https://profiles.wordpress.org/flixos90/",
        "https://github.com/WordPress/gutenberg/issues/49927",
        "https://profiles.wordpress.org/aristath/",
        "https://profiles.wordpress.org/aristath/",
        "https://profiles.wordpress.org/flixos90/",
        "https://profiles.wordpress.org/spacedmonkey/",
        "https://github.com/spacedmonkey/wordpress-develop/tree/try/inline-styles",
        "https://make.wordpress.org/performance/roadmap-2023/#category-images",
        "https://profiles.wordpress.org/flixos90/",
        "https://profiles.wordpress.org/thekt12/",
        "https://profiles.wordpress.org/adamsilverstein/",
        "https://profiles.wordpress.org/joemcgill/",
        "https://make.wordpress.org/performance/roadmap-2023/#category-measurement",
        "https://profiles.wordpress.org/adamsilverstein/",
        "https://profiles.wordpress.org/olliejones/",
        "https://profiles.wordpress.org/joemcgill/",
        "https://profiles.wordpress.org/mukesh27/",
        "https://profiles.wordpress.org/joemcgill/",
        "https://make.wordpress.org/performance/roadmap-2023/#category-ecosystem-tools",
        "https://profiles.wordpress.org/joegrainger/",
        "https://profiles.wordpress.org/joegrainger/",
        "https://github.com/10up/plugin-check/",
        "https://profiles.wordpress.org/spacedmonkey/",
        "https://github.com/10up/plugin-check/issues/153",
        "https://github.com/WordPress/performance/issues/656",
        "https://profiles.wordpress.org/flixos90/",
        "https://profiles.wordpress.org/mukesh27/",
        "https://profiles.wordpress.org/10upsimon/",
        "https://profiles.wordpress.org/flixos90/",
        "https://github.com/WordPress/performance/issues/656",
        "https://github.com/WordPress/performance/issues/661",
        "https://profiles.wordpress.org/flixos90/",
        "https://profiles.wordpress.org/spacedmonkey/",
        "https://github.com/WordPress/performance/issues/718",
        "https://xwp.co/object-caching-improvement-wordpress-6-2/",
        "https://www.timeanddate.com/worldclock/fixedtime.html?iso=20230502T1500",
        "https://wordpress.slack.com/messages/core-performance/",
        "https://make.wordpress.org/chat/",
        "https://make.wordpress.org/core/tag/core-media/",
        "https://make.wordpress.org/core/tag/core-performance/",
        "https://make.wordpress.org/core/tag/performance/",
        "https://make.wordpress.org/core/tag/performance-chat/",
        "https://make.wordpress.org/core/tag/summary/",
        "https://login.wordpress.org/?redirect_to=https%3A%2F%2Fmake.wordpress.org%2Fcore%2F2023%2F04%2F25%2Fperformance-chat-summary-25-april-2023%2F%23respond&locale=en_US",
        "https://profiles.wordpress.org/flixos90/",
        "https://profiles.wordpress.org/flixos90/",
        "https://make.wordpress.org/core/tag/6-2/",
        "https://make.wordpress.org/core/tag/performance/",
        "https://make.wordpress.org/core/tag/retrospective/",
        "https://make.wordpress.org/core/2023/04/25/the-benefits-of-prioritizing-and-measuring-performance-in-wordpress-6-2/",
        "https://web.dev/lcp/",
        "https://web.dev/ttfb/",
        "#alpha-beta",
        "#blocker",
        "https://oandre.gal/evolution-of-wordpress-ttfb-5-6-to-6-2/",
        "https://profiles.wordpress.org/oandregal/",
        "https://core.trac.wordpress.org/query?milestone=6.1.1&col=id&col=summary&col=focuses&col=owner&col=type&order=focuses",
        "https://xdebug.org/",
        "https://github.com/longxinH/xhprof",
        "https://www.blackfire.io/",
        "https://make.wordpress.org/core/2022/12/16/hallway-hangout-performance-considerations-for-block-themes/",
        "https://make.wordpress.org/core/2022/12/16/hallway-hangout-performance-considerations-for-block-themes/",
        "https://github.com/GoogleChromeLabs/wpp-research/tree/main/cli#benchmark-server-timing",
        "https://github.com/GoogleChromeLabs/wpp-research/tree/main/cli#benchmark-web-vitals",
        "https://core.trac.wordpress.org/ticket/57502",
        "https://github.com/WordPress/wordpress-develop/pull/3789#issuecomment-1405803691",
        "https://core.trac.wordpress.org/ticket/56990",
        "https://core.trac.wordpress.org/ticket/56990#comment:42",
        "https://make.wordpress.org/core/2023/02/02/automated-performance-monitoring-in-wordpress-core/",
        "https://en.wikipedia.org/wiki/Minimum_viable_product",
        "https://core.trac.wordpress.org/changeset/55459",
        "https://www.codevitals.run/project/wordpress",
        "https://core.trac.wordpress.org/ticket/57502",
        "https://core.trac.wordpress.org/ticket/56930",
        "https://docs.google.com/spreadsheets/d/1LroIJoYz-O9CpfJzaiKYYMWJ7GbE5RZoW1rf1R4FqyA/edit#gid=576773622",
        "#regression",
        "https://make.wordpress.org/core/2023/04/05/wordpress-6-2-performance-improvements-for-all-themes/",
        "https://www.codevitals.run/project/wordpress",
        "https://github.com/GoogleChromeLabs/wpp-research/tree/main/cli#benchmark-web-vitals",
        "https://github.com/GoogleChromeLabs/wpp-research/tree/main/cli#benchmark-server-timing",
        "https://github.com/WordPress/performance/pull/553",
        "https://gist.github.com/felixarntz/9c3d7150c74082e69bb426393b68b12e",
        "https://gist.github.com/felixarntz/63c05392dbf7d51cc7f8f4a424b1ff39",
        "https://github.com/WordPress/gutenberg/pull/48147",
        "https://github.com/GoogleChromeLabs/wpp-research/tree/main/tools/xhprof",
        "https://profiles.wordpress.org/annezazu/",
        "https://profiles.wordpress.org/tweetythierry/",
        "https://profiles.wordpress.org/desrosj/",
        "https://profiles.wordpress.org/joemcgill/",
        "https://profiles.wordpress.org/hellofromtonya/",
        "https://profiles.wordpress.org/spacedmonkey/",
        "https://make.wordpress.org/core/tag/6-2/",
        "https://make.wordpress.org/core/tag/performance/",
        "https://make.wordpress.org/core/tag/retrospective/",
        "https://login.wordpress.org/?redirect_to=https%3A%2F%2Fmake.wordpress.org%2Fcore%2F2023%2F04%2F25%2Fthe-benefits-of-prioritizing-and-measuring-performance-in-wordpress-6-2%2F%23respond&locale=en_US",
        "https://profiles.wordpress.org/sephsekla/",
        "https://profiles.wordpress.org/sephsekla/",
        "https://make.wordpress.org/core/tag/feature-notifications/",
        "https://make.wordpress.org/core/2023/04/25/wp-feature-notifications-2023-status-update/",
        "https://github.com/WordPress/wp-feature-notifications",
        "https://make.wordpress.org/core/2019/08/05/feature-project-proposal-wp-notify/",
        "https://www.javascript.com/",
        "https://make.wordpress.org/core/files/2023/04/image-10.png",
        "https://make.wordpress.org/core/handbook/about/release-cycle/features-as-plugins/",
        "https://github.com/WordPress/wp-feature-notifications/releases/latest",
        "https://github.com/WordPress/wp-feature-notifications",
        "https://make.wordpress.org/core/2022/07/21/request-for-feedback-feature-notifications-proof-of-concept/",
        "https://profiles.wordpress.org/codekraft/",
        "https://profiles.wordpress.org/bitmachina/",
        "https://profiles.wordpress.org/psykro/",
        "https://profiles.wordpress.org/sephsekla/",
        "https://profiles.wordpress.org/sephsekla/",
        "https://profiles.wordpress.org/codekraft/",
        "https://profiles.wordpress.org/bitmachina/",
        "https://profiles.wordpress.org/jason_the_adams/",
        "https://make.wordpress.org/core/2022/09/11/canonical-plugins-revisited/",
        "https://make.wordpress.org/core/2019/08/05/feature-project-proposal-wp-notify/",
        "https://profiles.wordpress.org/psykro/",
        "https://profiles.wordpress.org/schlessera/",
        "https://core.trac.wordpress.org/ticket/50486",
        "https://wordpress.org/gutenberg/",
        "https://make.wordpress.org/core/2023/03/24/phase-3-collaboration/",
        "https://en.wikipedia.org/wiki/Minimum_viable_product",
        "https://en.wikipedia.org/wiki/Minimum_viable_product",
        "https://wordpress.slack.com/archives/C2K1C71FE",
        "https://make.wordpress.org/chat/",
        "https://central.wordcamp.org/about/",
        "https://make.wordpress.org/",
        "https://2017.us.wordcamp.org/contributor-day/",
        "https://make.wordpress.org/support/handbook/getting-started/getting-started-at-a-contributor-day/",
        "https://profiles.wordpress.org/erikyo/",
        "https://profiles.wordpress.org/bitmachina/",
        "https://profiles.wordpress.org/bacoords/",
        "https://profiles.wordpress.org/psykro/",
        "https://make.wordpress.org/core/tag/feature-notifications/",
        "https://login.wordpress.org/?redirect_to=https%3A%2F%2Fmake.wordpress.org%2Fcore%2F2023%2F04%2F25%2Fwp-feature-notifications-2023-status-update%2F%23respond&locale=en_US",
        "https://profiles.wordpress.org/clarkeemily/",
        "https://profiles.wordpress.org/clarkeemily/",
        "https://make.wordpress.org/core/tag/agenda/",
        "https://make.wordpress.org/core/tag/meeting/",
        "https://make.wordpress.org/core/tag/performance/",
        "https://make.wordpress.org/core/tag/performance-chat/",
        "https://make.wordpress.org/core/2023/04/25/performance-chat-agenda-25-april-2023/",
        "https://www.timeanddate.com/worldclock/fixedtime.html?iso=20230425T1500",
        "https://www.timeanddate.com/worldclock/fixedtime.html?iso=20230426T1500",
        "https://make.wordpress.org/performance/roadmap-2023/#category-server-response-time",
        "https://make.wordpress.org/performance/roadmap-2023/#category-database-optimization",
        "https://make.wordpress.org/performance/roadmap-2023/#category-javascript-css",
        "https://make.wordpress.org/performance/roadmap-2023/#category-images",
        "https://make.wordpress.org/performance/roadmap-2023/#category-measurement",
        "https://make.wordpress.org/performance/roadmap-2023/#category-ecosystem-tools",
        "https://github.com/WordPress/performance/issues/656",
        "http://wordpress.slack.com/messages/core-performance/",
        "https://make.wordpress.org/chat/",
        "https://make.wordpress.org/core/tag/agenda/",
        "https://make.wordpress.org/core/tag/meeting/",
        "https://make.wordpress.org/core/tag/performance/",
        "https://make.wordpress.org/core/tag/performance-chat/",
        "https://login.wordpress.org/?redirect_to=https%3A%2F%2Fmake.wordpress.org%2Fcore%2F2023%2F04%2F25%2Fperformance-chat-agenda-25-april-2023%2F%23respond&locale=en_US",
        "https://profiles.wordpress.org/audrasjb/",
        "https://profiles.wordpress.org/audrasjb/",
        "https://make.wordpress.org/core/tag/6-3/",
        "https://make.wordpress.org/core/tag/core/",
        "https://make.wordpress.org/core/tag/week-in-core/",
        "https://make.wordpress.org/core/2023/04/24/a-week-in-core-april-24-2023/",
        "https://core.trac.wordpress.org/timeline?from=04%2F24%2F2023&daysback=7&authors=&ticket=on&changeset=on&repo-=on&repo-design=on&repo-tests=on&sfp_email=&sfph_mail=&update=Update",
        "https://core.trac.wordpress.org/ticket/57839",
        "#l10n",
        "#i18n",
        "https://core.trac.wordpress.org/ticket/58149",
        "https://core.trac.wordpress.org/ticket/58182",
        "https://core.trac.wordpress.org/ticket/57839",
        "https://core.trac.wordpress.org/ticket/57839",
        "https://core.trac.wordpress.org/ticket/57839",
        "https://core.trac.wordpress.org/ticket/58139",
        "https://core.trac.wordpress.org/ticket/57839",
        "https://core.trac.wordpress.org/ticket/57839",
        "https://core.trac.wordpress.org/ticket/57839",
        "https://core.trac.wordpress.org/ticket/57840",
        "https://core.trac.wordpress.org/ticket/57840",
        "https://core.trac.wordpress.org/ticket/57585",
        "https://core.trac.wordpress.org/ticket/58007",
        "https://core.trac.wordpress.org/ticket/58146",
        "https://core.trac.wordpress.org/ticket/58160",
        "https://wordpress.org/gutenberg/",
        "https://core.trac.wordpress.org/ticket/58170",
        "#l10n",
        "https://core.trac.wordpress.org/ticket/58138",
        "https://core.trac.wordpress.org/ticket/58150",
        "https://core.trac.wordpress.org/ticket/58150",
        "https://core.trac.wordpress.org/ticket/58069",
        "https://core.trac.wordpress.org/ticket/58069",
        "https://github.com/",
        "https://core.trac.wordpress.org/ticket/57937",
        "https://core.trac.wordpress.org/ticket/58158",
        "https://codex.wordpress.org/Taxonomies#Default_Taxonomies",
        "https://core.trac.wordpress.org/ticket/57645",
        "https://core.trac.wordpress.org/ticket/40613",
        "https://core.trac.wordpress.org/ticket/40613",
        "https://profiles.wordpress.org/sergeybiryukov/",
        "https://profiles.wordpress.org/mukesh27/",
        "https://profiles.wordpress.org/dmsnell/",
        "https://profiles.wordpress.org/spacedmonkey/",
        "https://profiles.wordpress.org/peterwilsoncc/",
        "https://profiles.wordpress.org/audrasjb/",
        "https://profiles.wordpress.org/afercia/",
        "https://profiles.wordpress.org/poena/",
        "https://profiles.wordpress.org/aristath/",
        "https://profiles.wordpress.org/mujuonly/",
        "https://profiles.wordpress.org/costdev/",
        "https://profiles.wordpress.org/hellofromtonya/",
        "https://profiles.wordpress.org/krupalpanchal/",
        "https://profiles.wordpress.org/pouicpouic/",
        "https://profiles.wordpress.org/jbcouton/",
        "https://profiles.wordpress.org/jankyz/",
        "https://profiles.wordpress.org/flixos90/",
        "https://profiles.wordpress.org/rjasdfiii/",
        "https://profiles.wordpress.org/khoipro/",
        "https://profiles.wordpress.org/olliejones/",
        "https://profiles.wordpress.org/srikanthmeenakshi/",
        "https://profiles.wordpress.org/strategio/",
        "https://profiles.wordpress.org/dd32/",
        "https://profiles.wordpress.org/westi/",
        "https://profiles.wordpress.org/zieladam/",
        "https://profiles.wordpress.org/johnjamesjacoby/",
        "https://profiles.wordpress.org/javiercasares/",
        "https://profiles.wordpress.org/ecorica/",
        "https://profiles.wordpress.org/westonruter/",
        "https://profiles.wordpress.org/vladytimy/",
        "https://profiles.wordpress.org/desrosj/",
        "https://profiles.wordpress.org/aaronrobertshaw/",
        "https://profiles.wordpress.org/ntsekouras/",
        "https://profiles.wordpress.org/utsav72640/",
        "https://profiles.wordpress.org/laurentmagnin/",
        "https://profiles.wordpress.org/sabernhardt/",
        "https://profiles.wordpress.org/pouicpouic/",
        "https://profiles.wordpress.org/jbcouton/",
        "https://profiles.wordpress.org/ecorica/",
        "https://profiles.wordpress.org/laurentmagnin/",
        "https://profiles.wordpress.org/sergeybiryukov/",
        "https://profiles.wordpress.org/audrasjb/",
        "https://profiles.wordpress.org/spacedmonkey/",
        "https://profiles.wordpress.org/zieladam/",
        "https://profiles.wordpress.org/bernhard-reiter/",
        "https://profiles.wordpress.org/gziolo/",
        "https://profiles.wordpress.org/peterwilsoncc/",
        "https://profiles.wordpress.org/azaozz/",
        "https://profiles.wordpress.org/westonruter/",
        "https://make.wordpress.org/core/tag/6-3/",
        "https://make.wordpress.org/core/tag/core/",
        "https://make.wordpress.org/core/tag/week-in-core/",
        "https://login.wordpress.org/?redirect_to=https%3A%2F%2Fmake.wordpress.org%2Fcore%2F2023%2F04%2F24%2Fa-week-in-core-april-24-2023%2F%23respond&locale=en_US",
        "https://make.wordpress.org/core/page/2/",
        "#",
        "https://make.wordpress.org/core/",
        "https://make.wordpress.org/core/?o2_recent_comments=1",
        "https://make.wordpress.org/core/?replies=none",
        "https://make.wordpress.org/core/6-3/",
        "https://wordpress.org/about/roadmap/",
        "https://make.wordpress.org/core/features/",
        "https://make.wordpress.org/chat/",
        "https://www.timeanddate.com/worldclock/fixedtime.html?iso=20230503T2000",
        "https://wordpress.slack.com/archives/C02RQBWTW",
        "http://make.wordpress.org/core/weekly-developer-chats/",
        "http://make.wordpress.org/core/tag/agenda",
        "http://make.wordpress.org/core/tag/summary",
        "https://www.timeanddate.com/worldclock/fixedtime.html?iso=20230502T0500",
        "https://wordpress.slack.com/archives/C02RQBWTW",
        "https://wordpress.slack.com/archives/C02QB2JS7",
        "https://www.timeanddate.com/worldclock/fixedtime.html?iso=20230502T1400",
        "https://wordpress.slack.com/archives/C5UNMSU4R",
        "https://www.timeanddate.com/worldclock/fixedtime.html?iso=20230502T1500",
        "https://wordpress.slack.com/archives/C02KGN5K076",
        "https://www.timeanddate.com/worldclock/fixedtime.html?iso=20230502T1700",
        "https://wordpress.slack.com/archives/C03BVB47S",
        "https://www.timeanddate.com/worldclock/fixedtime.html?iso=20230504T1800",
        "https://wordpress.slack.com/archives/C02RQC26G",
        "https://www.timeanddate.com/worldclock/fixedtime.html?iso=20230503T1400",
        "https://wordpress.slack.com/archives/C02QB2JS7",
        "https://www.timeanddate.com/worldclock/fixedtime.html?iso=20230503T1900",
        "https://wordpress.slack.com/archives/C02RQBWTW",
        "https://www.timeanddate.com/worldclock/fixedtime.html?iso=20230504T1500",
        "https://wordpress.slack.com/archives/C02SX62S6",
        "https://www.timeanddate.com/worldclock/fixedtime.html?iso=20230504T2100",
        "https://wordpress.slack.com/archives/CQ7V4966Q",
        "https://www.timeanddate.com/worldclock/fixedtime.html?iso=20230508T1900",
        "https://wordpress.slack.com/archives/C0381N237",
        "https://make.wordpress.org/meetings/",
        "https://make.wordpress.org/core/pledges/",
        "https://wordpress.org/about/",
        "https://wordpress.org/news/",
        "https://wordpress.org/hosting/",
        "https://wordpressfoundation.org/donate/",
        "https://mercantile.wordpress.org/",
        "https://wordpress.org/documentation/",
        "https://developer.wordpress.org/",
        "https://make.wordpress.org/",
        "https://learn.wordpress.org/",
        "https://wordpress.org/showcase/",
        "https://wordpress.org/plugins/",
        "https://wordpress.org/themes/",
        "https://wordpress.org/patterns/",
        "https://central.wordcamp.org/",
        "https://wordpress.tv/",
        "https://buddypress.org/",
        "https://bbpress.org/",
        "https://wordpress.com/?ref=wporg-footer",
        "https://ma.tt/",
        "https://wordpress.org/about/privacy/",
        "https://publiccode.eu/",
        "https://wordpress.org/",
        "https://wordpress.org/",
        "https://www.facebook.com/WordPress/",
        "https://twitter.com/WordPress",
        "https://www.instagram.com/wordpress/",
        "https://www.linkedin.com/company/wordpress",
        "#",
        "#",
        "#"
    ]
}