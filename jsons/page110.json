{
    "title": "#72 \u2013 Steve Bruner and Timothy Jacobs on Using Gutenberg Outside of WordPress \u2013 WP Tavern",
    "body": "\n\n\n\n\n\n\n\n\n\n\n\nNewsOpinionPluginsThemesEventsPodcastContactSearchSearch\n\n\n\n\n\n\n\nSearch\n\n\n\nCancel\n\n\n\n\n\n\n\n\nApril 19, 2023\nNathan Wrigley\n#72 \u2013 Steve Bruner and Timothy Jacobs on Using Gutenberg Outside of WordPress\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\t\t\t\t\tJukebox\t\t\t\t\t\n#72 \u2013 Steve Bruner and Timothy Jacobs on Using Gutenberg Outside of WordPress\n\n\n\n\nPlay Episode\n\n\nPause Episode\n\n\n\n\n\n\n\n\n\n\n\n\n\nMute/Unmute Episode\n\n\nRewind 10 Seconds\n\n1x\n\nFast Forward 30 seconds\n\n\n\n00:00\n/\n\n00:49:01\n\n\n\n\n\nSubscribe\nShare\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\t\t\t\t\t\t\tApple Podcasts\t\t\t\t\t\t\t\n\n\n\t\t\t\t\t\t\t\tSpotify\t\t\t\t\t\t\t\n\n\n\n\t\t\t\t\t\tRSS Feed\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\t\t\t\tShare\t\t\t\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\t\t\t\t\tLink\t\t\t\t\n\n\n\n\n\n\n\n\t\t\t\t\tEmbed\t\t\t\t\n\n\n\n\n\n\n\n\nDownload file | Play in new window | Duration: 00:49:01 | Recorded on April 19, 2023Subscribe: Apple Podcasts | Spotify\n\n\n\nTranscript\n[00:00:00] Nathan Wrigley: Welcome to the Jukebox podcast from WP Tavern. My name is Nathan Wrigley.\nJukebox is a podcast which is dedicated to all things WordPress. The people, the events, the plugins, the blocks, the themes, and in this case using Gutenberg to build the Engine Awesome SaaS app.\nIf you\u2019d like to subscribe to the podcast, you can do that by searching for WP Tavern in your podcast player of choice, or by going to WPTavern.com forward slash feed forward slash podcast. And you can copy that URL into most podcasts players.\nIf you have a topic that you\u2019d like us to feature on the podcast, I\u2019m very keen to hear from you, and hopefully get you all your idea featured on the show had to WPTavern.com forward slash contact forward slash jukebox, and use the form there.\nSo on the podcast today we have Steve Bruner and Timothy Jacobs.\nSteve has been active in the WordPress community for the past 17 years. He\u2019s a WordPress developer, co organizer of the WordPress NYC meetup, and has organized many word camps in New York City.\nTimothy is a WordPress core committer for the REST API, and has been a WordPress developer for over 10 years. At StellarWP he leads development of the iThemes security plugin.\nWhat brings them together is that they\u2019re both founders of a SaaS app called Engine Awesome, where Steve is the CEO, and Timothy is the CTO.\nWhat has this got to do with WordPress, you might ask? Well, they\u2019re here today to talk about Gutenberg, but not how you might expect. It\u2019s Gutenberg outside of WordPress, but Gutenberg, nonetheless. Like all of WordPress, Gutenberg is open source. You are free to download it, modify it and use it in whatever way you like.\nWhen Steve and Timothy began working on their new project and needed a way for their clients to interact with it, they found Gutenberg was the perfect tool for the job.\nWe talk about what benefits they\u2019ve gained by using Gutenberg. How it saved them time, and how it\u2019s fast becoming a stable and mature product which is easy for non-technical users to understand.\nWe get into the details of which parts of Gutenberg they used, and which parts were not suitable for their app. They\u2019ve been building their own blocks, which work well in the UI, but which are more suited to the kinds of data that they\u2019re gathering.\nThe discussion then moves on to what Engine Awesome actually does. It\u2019s an app builder in which you can construct your own data containers and theme them so that it displays in any way you like. They tell us about the features, which they have so far, as well as the items which are on their roadmap.\nTowards the end we talk about their commitment to continue contributing back to the Gutenberg project, and how they feel that it\u2019s in everyone\u2019s interest if the project gets better from any updates that they have made.\nIf you\u2019re looking to build your own SaaS app, or you\u2019re just curious about how Gutenberg is being deployed outside of WordPress, this podcast is for you.\nIf you\u2019re interested in finding out more, you can find all of the links in the show notes by heading to WPTavern.com forward slash podcast, where you\u2019ll find the other episodes as well.\nAnd so without further delay, I bring you Steve Bruner and Timothy Jacobs.\nI am joined on the podcast today by two gentlemen. I\u2019m joined by Steve Bruner and Timothy Jacobs. Hello.\n[00:04:23] Steve Bruner: Hey Nathan. Nice to meet you.\n[00:04:24] Timothy Jacobs: Hey.\n[00:04:25] Nathan Wrigley: Steve. Firstly, did I pronounce your surname correctly?\n[00:04:29] Steve Bruner: You did absolutely.\n[00:04:30] Nathan Wrigley: First try. Yeah, that\u2019s great. Well, thank you for joining us on the podcast today. We\u2019re going to be talking about something which we literally haven\u2019t covered in any way, shape, or form at all. We\u2019ve talked endlessly about Gutenberg and the Block Editor, and blocks and patterns and all of that. But we\u2019re kind of staying away from that, despite the fact we\u2019re going to be talking about Gutenberg. Because we\u2019re going to be talking about an app which has been built on top of Gutenberg, but really not that connected to WordPress. So buckle up. This will be an interesting episode.\nWe like to orientate the listeners as to who you are so that when they\u2019re listening, they know that you are an authority on what you\u2019re talking about. So can I take you in turn? Can I go Steve, first? Would you mind giving us your little potted history of who you are, what you do for a living, where you live, and what your relationship has been with WordPress?\n[00:05:18] Steve Bruner: Sure. So back in my previous life I was in like marketing and sales. I embraced technology back then and using spreadsheets and eventually Microsoft Access, I was able to do more than anyone else on my team, right? I could do 10, 20 times the amount of work, just writing macros in Excel or, do database config in Microsoft Access.\nAnd I loved playing with technology and started playing with HTML, and a friend of mine about 17 years ago, 18 years ago, introduced me to WordPress, said, this is pretty cool, you may want to check it out. And I really loved it. It was easy and it was hackable and it was a lot of fun.\nEventually somebody asked me to build them a website. Somebody else offered to pay me to build them a website. And that just grew over the years until I became a full-time, I guess, solopreneur. I have an agency, but I do hire out contractors on a regular basis. I have relationships with many contractors who I\u2019ve been using now for over a decade.\nI also ended up back then taking over the WordPress meetup in New York City. It was about 400 members, now it\u2019s 9,000. That really gave me a good introduction to WordPress. It introduced me to a lot of people, and I learned. In the very beginning of a meetup, for those of you who are trying to start one, if you don\u2019t have somebody who will present, you are the presenter.\nSo for the first year, year and a half, I presented every month, third Tuesday of the month. Did that for a year and a half until we started getting more presenters in. So that grew and yeah, I\u2019m a full-time WordPress developer now.\n[00:06:56] Nathan Wrigley: Isn\u2019t it curious how, if you have been using the internet, let\u2019s say, and building websites for anything like 20, 30 plus years, you kind of more or less fell into this job. I\u2019ve yet to come across anybody of my age, shall we say, who\u2019s been doing this for that length of time who sort of decided from the outset, that\u2019s what I\u2019m going to do.\nThe story is always the same. I was doing something else and then I discovered HTML and played with CSS and realized, oh, I could actually make a living with this. What fun.\n[00:07:23] Steve Bruner: That\u2019s exactly right. The fact that WordPress is open source. You can run it locally. I learned how to code, and this is not an uncommon story, right? I learned how to code by changing code in WordPress. By commenting things out and changing things, and just seeing how it worked.\n[00:07:39] Nathan Wrigley: Yeah. A verified tinkerer. It sounds like a man after my own heart. Okay, so let\u2019s move on to Timothy. Timothy, same question really. Give us your background story and particularly your relationship with WordPress.\n[00:07:52] Timothy Jacobs: For sure. I\u2019m also based in the New York City area, so you can guess how I met Steve at the WordPress New York City Meetup Group, which I also help co-organize. But aside from that I\u2019ve been working with WordPress now for about ish 10 years or so. My day job is I work over at StellarWP on iThemes security. So I\u2019m the lead developer over there.\nBut I also have yeah been involved with the WordPress community for a bit. I\u2019m right now a WordPress core committer. I help work with the REST API in WordPress Core. And then also try and, you know, work with the Gutenberg team as well on REST API things and bringing the two together and helping everything work.\n[00:08:29] Nathan Wrigley: Well thank you. At the outset of this podcast it might be useful if you are listening to this and you\u2019re anywhere near a computer. Just pause for a moment and go to the URL engineawesome.com. It is exactly as you\u2019d imagine. There\u2019s no funky spelling there, engineawesome.com.\nGo and have a poke around because I feel that the context that you\u2019ll get from doing that will put you in a good position to enjoy this podcast episode more. So come back and we\u2019ll get on with the ride. So first of all, whoever wants to answer the question, what is Engine Awesome? We should probably clear that up straight away.\n[00:09:03] Steve Bruner: Great. So yeah, I can answer that. Engine Awesome is a SaaS application, and for those interested it is built using Gutenberg, but Gutenberg using Laravel, not WordPress. But it\u2019s a SaaS application that allows you to build applications for your business with absolutely no code, just using blocks. You could build your own CRM. You can build an order management system, a donation system, project tracking, to-dos. Anything you want in the config that you need.\n[00:09:33] Nathan Wrigley: So the ability to do that in SaaS software, there\u2019s probably a multitude of apps that we could go to that offer, I guess, something fairly similar. You know a no code tool which allows you to build something custom. But the unique bit which has got you on this podcast today is the fact that you\u2019ve chosen to do that outside of WordPress, but still using Gutenberg.\nAnd I want to know why. I want to know why was it that you decided to take that on board? I can imagine there\u2019s a whole bunch of reasons, but they would be guesses. So let\u2019s delve right into\n[00:10:09] Timothy Jacobs: Yeah, so I think one of the big things is that the user experience that the block editor provides, while there\u2019s always places that it can be improved, is really excellent. There are so many tools out there where the first years of their development are, how do we build a good UI for dragging things onto the screen and making it look like you would expect it to look.\nAnd how do we, you know, have settings that adjust things and make tweaks and have visual changes? And how do I navigate to different areas, and how do I present blocks of content? I think WordPress, the block editor in Gutenberg, isn\u2019t really the only block based system that\u2019s out there. Lots of different tools have come to realize the power of the block.\nBut the block editor in Gutenberg being open source, lets us have tons of customization ability. So it really gave us a great headstart for building out an application user interface, where we could get right down to the meat of it, instead of worrying about all of the bits that go into building a WYSIWYG block editor interface.\n[00:11:13] Nathan Wrigley: It\u2019s almost like the use case for using WordPress to build a website in a way, isn\u2019t it? Because it does a bunch of the heavy lifting for you. You don\u2019t have to invent all the user permissions yourself, and write all of that code. You can get yourself off to a flying start by implementing something which is freely available and ready to roll.\n[00:11:31] Timothy Jacobs: Exactly. It gives you that same kind of headstart. And it also provides like a great prototype experience. The first prototype that we built out was just by building some custom blocks in a WordPress, Gutenberg system. Not even with a whole Laravel side of things. It\u2019s just a great place to prototype.\n[00:11:48] Nathan Wrigley: So Steve, I don\u2019t know if you have anything to add to that, but basically why Gutenberg? If you\u2019ve got a different answer than Timothy\u2019s, go for it.\n[00:11:56] Steve Bruner: Tim\u2019s the CTO, so his is a little more technical. Mine would be a little more business oriented, I guess. First off, the Gutenberg UI is proven, right. It\u2019s a proven UI that works well, and millions of people and millions of websites use it every day to build websites. So not having to deal with that, not having to work on a UI and go through the whole trial and error process really was appealing to us.\nGutenberg gave us, we probably would\u2019ve taken two years, three years to build this out if it wasn\u2019t for Gutenberg. So having that head start, having a UI that\u2019s proven, that works. And if you\u2019re coming from the WordPress world, you\u2019ll feel natural. You\u2019ll feel comfortable in Engine Awesome, because it\u2019s Gutenberg, right? We have some custom blocks and some custom workflows, but at the heart of it is Gutenberg, and you will, you\u2019ll feel very comfortable using it.\n[00:12:48] Nathan Wrigley: So given that Gutenberg itself has been how to describe it? It\u2019s been tumultuous over the last few years. You know, there\u2019s been a lot of changes, a lot of rapid iterations. I guess that\u2019s slowed down a little bit more recently when the whole project seemed to move over to full site editing and all of that. Is that a concern of yours? Have you frozen your version of Gutenberg in time? Or are you keeping up with the very latest and greatest that that project offers?\n[00:13:13] Timothy Jacobs: We are keeping very up to date. I think we are one version of Gutenberg behind usually. And that\u2019s where we like to keep it at. But yeah, just a couple of weeks ago, we added support for fixed positioning. Which was a feature that the main Gutenberg team had just introduced. So we see that the, like, iteration speed of Gutenberg is a benefit.\nA big thing is that as Gutenberg is maturing, and now we\u2019re seeing Gutenberg with the isolated block editor project and coming to the wordpress.org forums. And of course what Automattic is doing with Tumblr, that the core WordPress Gutenberg packages, while they are moving very fast and you do have to keep up with them, they are kind of stable enough that you can build on top of them in this way.\nAnd they have to be so that those projects don\u2019t just keep breaking. And so WordPress.org doesn\u2019t just keep breaking. While it is not as stable, let\u2019s say as WordPress Core pre 5.0, and just building on top of the WordPress Core PHP. I think it\u2019s stable enough to build on top of, for sure.\n[00:14:19] Nathan Wrigley: Did the nature of what you were trying to achieve, and we can dig into exactly what it is that you are solving in a little while, but did the paradigm of blocks fit pretty neatly? In other words can you. atomize your workflow inside of Engine Awesome into a collection of blocks basically? Drag in blocks, reposition blocks, fill in data into blocks, and that\u2019s essentially what the app is doing.\n[00:14:43] Timothy Jacobs: Yeah, I think so. At its core in Engine Awesome, each field, each bit of data that you\u2019re putting into your, let\u2019s say CRM or invoice management system, each one of those fields is a block that you create. So starting from that level of, hey, we have a block, which is a field that data can be entered into. And it doesn\u2019t just look like, let\u2019s say a plain text field, it looks something a bit more of a rich application user interfaced.\nThe field and the block being like that common low level bit that we build on top of. Yeah, it does make, I think the block-based paradigm a good fit. There are some struggles with a block-based paradigm, and achieving some more complex layouts where things aren\u2019t just neatly stacked in rows and stacked in columns, like a grid.\nBut that is something that\u2019s getting more and more possible to with Gutenberg every few releases. But I do think that the block-based nature, being able to map over to every block as a field did make it a good match, of philosophically in that sense.\n[00:15:45] Nathan Wrigley: Yeah, right from the outset. Matt Mullenweg ages ago, I don\u2019t exactly know when, he had this, what felt like a really almost crystal ball gazing idea that Gutenberg as the editor would become almost synonymous with entering data across the whole internet. It would become something which was used everywhere.\nGutenberg itself would become bigger than WordPress and all of that kind of thing. Do you see this? Do you see people doing what you are doing out there? In other words, does the Gutenberg interface, is it increasingly cropping up in places just like Engine Awesome?\n[00:16:20] Timothy Jacobs: I\u2019m not sure if I\u2019ve seen many cases. There are some that are out there. There is a Laraberg, as I believe the combination of names and how they landed on that one of combining Laravel plus Gutenberg, more for like a page editor context. The same way that is used in WordPress Core.\nAs well as I believe there\u2019s a Drupal integration. And I think a couple of other things. Of course, there\u2019s the isolated block editor project and what Tumblr is doing. I haven\u2019t seen a lot of people though that are doing it to the degree that we are doing it, in terms of, hey, we\u2019re letting you build an application as opposed to letting you design a webpage.\nAnd so I don\u2019t think we are there yet. But I think the stabilization over the past year has made it more of a possibility for projects who are looking to adopt Gutenberg in that way absolutely can, and I think it\u2019s something worth looking into.\n[00:17:10] Nathan Wrigley: How much of the core Gutenberg blocks do you bring along? And how much of it is bespoke work for your application? I\u2019m presuming, I mean, you alluded to it earlier. I think you said you\u2019ve got some of your own custom blocks in there. Do you bring almost everything along for the ride, including, I don\u2019t know, the Vimeo embed block or whatever it may be? Or do you pull out a certain amount and keep a certain amount only?\n[00:17:32] Timothy Jacobs: Yes, this is actually, it\u2019s a really interesting question in terms of how functionality in Gutenberg these days gets divided. So we don\u2019t bring in any core WordPress Gutenberg blocks. But what we are able to do is, as we\u2019ve had the introduction of global styles in the full site editor experience. There\u2019s been more of a separation of, what are things that are really blocks and what are things that are settings that your blocks can opt in to.\nSo for instance in Engine Awesome, you can use the margin tools, and the padding tools, and the sizing tools, and the colors, and the text sizes. All of these different systems. And the way that we support that in Engine Awesome is we just say in our block.json, hey, we want this feature. Gutenberg, render me the UI for it. Build me the styles. Save all of it to the block metadata information.\nGutenberg, you handle all of that. And what I\u2019ll do is I\u2019ll render the part that you see in the canvas, the actual block UI. But core Gutenberg is able to handle those types of controls. So that\u2019s where we\u2019ve really made the delineation, is that we don\u2019t use the core blocks, but we use all of the features that the core blocks use. And are able to pull them in without having to copy thousands of lines of code. So we for instance, have a text block and a group block, and they\u2019re a few dozen lines of code that are really just implementing the WordPress core APIs around layout and around rich text.\n[00:19:09] Nathan Wrigley: Yeah, it\u2019s interesting because I\u2019m looking at your homepage now and there\u2019s a video on there showing what is obviously to me, the Gutenberg interface. I guess to your customers maybe they\u2019ll recognize it as that, maybe not. But it shows the inserter, the panel on the left opening up, and it really does look the same.\nAnd so I made the mistake of thinking they were core blocks because many of them map really similarly. You know, you\u2019ve got a text field and then you\u2019ve got a URL and the iconography looks remarkably similarly. You haven\u2019t really tweaked that in any way. It really, really looks like the interface right down to the colors and everything is exactly the same. Black text, black icons, blue buttons, looks similar. That\u2019s a curious choice that you decided not to fiddle with the design of it.\n[00:19:54] Timothy Jacobs: Yeah, I think the design of the block editor, like Steve was mentioning, is really well proven. And I think there are places where maybe in the future that we do more customization, based off of how our users are going to be using Engine Awesome. And the differences between the block editor in WordPress Core for designing pages and the block editor in Engine Awesome for designing applications.\nBut I don\u2019t think we wanted to take an approach of, well, let\u2019s just redesign it for the sake of redesigning it without knowing hey, here are these specific UX benefits that we want to change and we want to improve.\nThe other aspect of it, to be honest, is that some of these components are harder to tweak than others. Like the inserter, for instance, is a very complex component. So we don\u2019t want to just say like, okay, let\u2019s rip it all apart. That\u2019s one of the aspects where I think you can get into a little bit of trickiness with the rapid pace of Gutenberg development. Is that if you rip everything and everything and everything down to its very bare bone bits, then it is a lot harder to stay up to date with Gutenberg and to be on the latest versions. It makes each upgrade a little bit more of a chore. Whereas for us upgrading Gutenberg isn\u2019t very difficult.\n[00:21:15] Nathan Wrigley: So I guess if you\u2019re a listener to this podcast, the chances are that you\u2019ve played with Gutenberg in the past and you\u2019ve experienced how it works and this whole process in Engine Awesome will be really familiar to you. But it also raises the question, you know, in WordPress there\u2019s a whole ton of different blocks out there now. If you, you know, you can go to the internet and download thousands, possibly tens of thousands of different blocks. And, so you are using that block methodology in your application.\nIt feels like we\u2019ve sidestep the, the most important question, which is what on earth, what an earth does this SaaS platform actually do? So it might be a good idea to bring Steve back in at this point and ask what is Engine Awesome? What is it doing?\n[00:21:56] Steve Bruner: Yeah. So like I mentioned before, I\u2019ve been running a small business for almost 20 years. Full-time for, you know, close to 10. And I\u2019ve tried every piece of software out there to help you run your business, right? I\u2019ve tried every CRM. I\u2019ve tried every project management tool and to-do list and anything you can imagine, I\u2019ve tried.\nAnd to be honest with you, I haven\u2019t loved any of \u2019em. And anybody I\u2019ve spoken to has said the same thing. Usually when you try these out of the box solutions, you feel like you\u2019re overpaying for a product where you\u2019re only using 50, 60% of the features. And they keep loading it up with more features and they keep raising the price.\nWith Engine Awesome you get to build exactly what you want. You build the CRM that you want in the way you work. The way your team works. The way your business works. We have had clients that have taken paper forms that they\u2019ve used in their business and replicated them in Engine Awesome. And their employees just log in and they know how to use it. There\u2019s nothing strange here anymore. They see the same form they\u2019ve been using for years, it\u2019s just a digital version. So training comes down and training costs come down.\nNow, there are other no-code platforms out there. We realize that there are others that are doing this. Our goal is to make it simple. To make it really, really simple for you to get your application up, right. Tim and I always talk about getting our clients up and running in minutes, not months. You don\u2019t have to know anything about databases to use Engine Awesome. You don\u2019t have to know about key fields and indexing fields. You don\u2019t have to know how to build relationships. You don\u2019t have to do any of that stuff. Engine Awesome takes care of it for you very easily. Just drag and drop some blocks, check a box, press save, and you\u2019re ready to go.\n[00:23:55] Nathan Wrigley: I\u2019m seeing when I\u2019m on your homepage, I\u2019m seeing what looked like the two UIs. I\u2019m seeing the Gutenberg UI, which obviously has a purpose, but I\u2019m also seeing like another UI where I don\u2019t know what\u2019s going on there. Is it, do you have a UI to build the blocks themselves and then they\u2019re created inside of Gutenberg to drop in whatever data it is that you need to put into that particular block?\n[00:24:18] Timothy Jacobs: Yeah, so we have two different base points. They\u2019re both Gutenberg. But the first step of building your Engine Awesome application is deciding what fields that you want to support. So what data you want to collect. And this is just dragging from the inserter, a URL, or a name, or a color, and bringing them into a separate editor where you see all the list of fields that you\u2019ve created for this particular, what we call an object type. For WordPress users it would kind of be most analogous to a custom post type.\nAnd so your contact, for instance, might have a name field, a phone, an address, things like that. Those fields that you define when you\u2019re editing your object type, make up the inserter, make up the block library when you then edit your layouts. So you first define your kind of data that you\u2019re looking to collect. And then you can define as many different user interfaces that you want to show that data or collect that data. And Steve can give some good examples of how that interface building portion happens.\n[00:25:19] Steve Bruner: Yeah, so a lot of our clients come from using spreadsheets, for instance. Just giant spreadsheets. 30 columns, thousands of rows. And it\u2019s really easy for them to work with Engine Awesome, right. So as Tim mentioned, first they define their object and then they literally are transferring those fields from a spreadsheet to Engine Awesome using the blocks.\nThen they go and start creating their layouts. And the layouts are, they could be forms, right? Where you\u2019re entering data. They could be tables where you are viewing data. They can be queries where you\u2019re searching for data. And those layouts also are conditional.\nThey can change based upon data that\u2019s entered. So, for instance, if you have quote that you provided through an Engine Awesome system, and that quote is in maybe an open status, you will see certain fields that are there. But once that quote gets changed to an approved status, those fields will be locked, right?\nYou\u2019re not changing the quote after it\u2019s been approved. So fields are locked. Nobody on your team can enter data or edit data anymore. And then you can move through a process. And again, I just want to reiterate, that is not a set process in Engine Awesome, that\u2019s a process that somebody would\u2019ve built, right? Everything is custom.\nSo those layouts, change in Engine Awesome. One other UI I guess that we have. We recently brought in the full site editing experience, or I guess the full, Tim can talk more about this, but the full site editing UI as the actual application UI. So when you are building your object and building your layouts, you see the inserter, the settings, Gutenberg like everyone is really familiar with it. But when you\u2019re using the application, when your team is using the application, when they\u2019re in the field or in the office, we are using the full site editing experience with the full site editing menu. And Tim, maybe you want to elaborate on that?\n[00:27:20] Nathan Wrigley: Yeah, please.\n[00:27:21] Timothy Jacobs: Yeah, so you can kind of see this, if you go into our post, Engine Awesome has a new look. And you can kind of see that delineation there. Basically the Gutenberg team introduced a really fantastic collection of navigation elements. And so we were able to use those to say, here\u2019s how you navigate between different views, between different object types, between different sets of data. And use that navigation experience that the core Gutenberg team provided.\n[00:27:48] Nathan Wrigley: Yeah, I will link to that post. But anybody listening, there\u2019s a blog post. Currently it\u2019s linked in the footer, but I imagine over time it will disappear from the footer of the main homepage. It\u2019s called Engine Awesome has a new look and you can see the site editor panel on the left and all of that. Yeah, that\u2019s a really interesting implementation.\nSo you build out the structure of the data you want to consume, you then have the option to display that. Presumably there must be a whole piece of making that data interact with other data points.\nSo, you know, you just mentioned that something is marked as approved. So certain fields get locked up. But presumably there are relationships, child, parent relationships, one-to-one, and so on and so forth, that bind the data together. Otherwise, you\u2019re looking at a spreadsheet, aren\u2019t you, really? So there must be something more in here.\n[00:28:35] Timothy Jacobs: Exactly. So when you edit your object type, you can set up a relationship between another bit of data, and then when you do that by dragging a block. So you\u2019ll see in your inserter, for instance, let\u2019s say that you are editing a contacts object type, and you already have a company\u2019s object type set up.\nThe only thing that you need to do is drag a block that says that this contact has one company and then Engine Awesome takes care of the rest. And so then when you\u2019re building out a layout, let\u2019s say for a company, you can easily display a list of all of the contacts that are associated with that company or vice versa.\nWhen you\u2019re editing a contact, you can say, hey, here\u2019s a snapshot of information about this company. Maybe their address, their website, a photo of them. Just to give that contextual information. So you can set up all of those object types and all of those relationships just by dragging a block into the block editor.\n[00:29:29] Nathan Wrigley: Steve, it sounded like you wanted to chip in there.\n[00:29:31] Steve Bruner: I was just going to give you a couple of use cases so you can get a good understanding of how people are using Engine Awesome. So recently a non-profit provided us a spreadsheet, a thousand rows, 26 or 30 columns, and they were tracking their donors in it. And it really is not the best way to do that. In five minutes, and I really mean this, I\u2019m not joking.\nFive minutes, maybe six, on a Zoom call with this prospective customer, I built an application for him where he was able to enter donors and then keep a record, a log of donations. See those donations, filter those donations, and get a good understanding of what\u2019s going on. So it was really really quick and is going to change the way he does his job and his team\u2019s job, and everyone\u2019s just going to be, everyone\u2019s life is going to be easier.\nWe have a home cleaning service, a residential home cleaning service. Tim has done a great video, you\u2019ll find it on our YouTube channel about how to build a service business application, and in 30 minutes, and this is a live video that Tim did, and you\u2019ll go through it. Tim is not going quickly at all.\nBut in 30 minutes he built an application that tracks this home cleaning services clients. The jobs they do. Their team members and their teams. They go into people\u2019s homes, they bring up Engine Awesome on their phone. They view their jobs. They mark their job cleaning when they\u2019re starting to clean, and then they go through this whole process.\nAnd when they\u2019re done, they mark it done. Eventually they\u2019re going to be taking credit cards using Engine Awesome. So, we have a Zapier integration where when the job is done, the client will get an email automatically with a payment link. And this is changing her business, right? Right now, she deals with cash or check or Zelle. Sometimes people forget. And it\u2019s just making her life much easier.\nEven something crazy like a marketing company that has displays in Home Depot stores. They are going to be doing a test in a couple of hundred Home Depot stores. And they built a UI in Engine Awesome that tracks stores and products and promotions and using our web hooks and API, they\u2019re going to be pushing data to those stores, to those displays, and managing it all in Engine Awesome.\nSo ideas that we never even thought of, people are starting to use Engine Awesome for some really, really creative ideas. You know, at the core of it, Tim and I really are passionate about helping businesses be more productive every day. And I think these use cases give a good, broad example of that.\n[00:32:06] Nathan Wrigley: I don\u2019t know if either of you have ever used a piece of software called Airtable? But Airtable came around, I don\u2019t know, maybe five or six years ago and it felt like a really, quite an interesting piece of technology at the time, in that you could put data in, it was basically a spreadsheet, but then it could show you that data, back at you in a variety of different ways.\nSo that leads me to the question, is that possible here? It sounds like the answer\u2019s yes. So, as an example, let\u2019s say that I\u2019m a real estate agent and I\u2019m updating data about houses on my roster. And I\u2019ve input all the fields. I\u2019ve got images. I\u2019ve got prices and descriptions and maps of floor plans, all of that kind of thing.\nIs it possible for me to create bespoke layouts of that data? So rather than it just being an Airtable, which looks like, well, a spreadsheet, you\u2019ve got other options in there, but basically a spreadsheet. Is it possible for me to, I don\u2019t know, float images right? Or highlight this particular aspect of the text? Make this a heading and you know, add iconography.\nIn other words can I make the data engaging to look at? And further to that, can I bind those presentation layers to members of my team? So for example, could the sales director see a different layout of different data and somebody who\u2019s in marketing, front of shop, might be able to show data to a customer that walks in the store? That kind of thing.\n[00:33:23] Steve Bruner: Yeah, so it\u2019s interesting you brought up Airtable, right? Because Airtable is a no-code solution that, like you said, is mostly a spreadsheet. And I want to get back to that because I think Tim and I, we feel a little differently than the way Airtable and some other no-code solutions do their business.\nBut to answer your question, yes. You can build really compelling, beautiful layouts using Engine Awesome. Because you\u2019re using the Gutenberg design tools, right ? So you\u2019re essentially designing a webpage, but it\u2019s a, you know, maybe it\u2019s a form or tables or some type of layout. But yes, you can float things, right? You can float through things left. You can bold, change colors. We have themes. We brought in themes as well. So with one click you can change the color and style of your application.\nIn terms of different team members using Engine Awesome and seeing different things and seeing different items. This is a really important point, right. Tim and I are actually going through this right now. How we want the user roles and capability system to work i Engine Awesome. Because our goal, and this is the goal we\u2019ve had since day one. I think this is also what makes us different from a lot of no-code solutions out there, is that we want your entire team using Engine Awesome.\nWe don\u2019t charge per user, and I think that\u2019s a really important point, right? We really are charging per organization or per team. We want everybody, we want your part-timers to use Engine Awesome. You want the CEO to use Engine Awesome. Everybody in between. You shouldn\u2019t have to pick and choose who needs to use an application. We really believe at our core that when your entire team is on the same page and uses the same application, and can see the same data, your life\u2019s going to be better. Your business will be better. Everybody will be more productive.\nSo we\u2019re working really hard to make sure we have this roles and capabilities system that allows to do exactly what you\u2019re talking about, and really fine tune it. So that everyone is on the same page.\n[00:35:28] Nathan Wrigley: Timothy, anything to add to that?\n[00:35:30] Timothy Jacobs: Yeah, I would mention one thing, which is that right now we have things set up so that you can have different levels of permission. So you can have and invite users onto your team that can just read data, for instance, or who can just edit data, but they can\u2019t make changes to your application. But yeah, the next big thing is figuring out what it looks like and how do you make it intuitive for users to set up an application where they consider different things like permissions and capabilities?\nThere are some tools that, the kind of permission system is really just visibility. And if you\u2019re a developer, you can sneak under the hood and they throw warnings all over the documentation that, hey, you know, even though you\u2019re, you think you\u2019re hiding this data, you\u2019re not actually hiding this data. Because it still gets sent to every user\u2019s browser or something like that.\nSo thinking through ways to make it very intuitive for users to say, hey, how do we actually set up our permission model, is the thing we\u2019re exploring.\n[00:36:28] Nathan Wrigley: Will it be possible to change the data on, for want of a better word, the front end? In other words, if you\u2019ve input the data in one UI, but then you\u2019re looking at the way it\u2019s presented, the theme, if you like. Is it possible for, and again, user permissions, we\u2019ll assume that that\u2019s coming down the pike, but is it possible to have people change the data in the different displays? Or do you have to always return to the, if you like, WordPress post to amend that data?\n[00:36:55] Timothy Jacobs: Yeah, so you can edit the data everywhere. This is a trend that we\u2019ve been seeing with a lot of these different tools. Is that they give you different layouts that can present your data, but at the core of it, they all have a data mode where you\u2019re basically looking at a spreadsheet or a very, I\u2019ll say charitably, a plainly designed form that doesn\u2019t have a sense of hierarchy or related bits of information. And then you can present it in any way that you would want.\nFor us though, the first thing that we wanted to tackle was to make sure that when you presented and created a beautiful layout, that your users could also edit the data in that layout. So right now we don\u2019t have, for instance, a separate kind of raw spreadsheet like view into your data. That\u2019s something that is on our roadmap. But our main actual priority is for users to be entering in data through the rich UIs that you create.\n[00:37:48] Nathan Wrigley: I feel that\u2019s one of the, one of the great advances recently. The ability to change it wherever you are. I think that would be really good. Because it is frustrating if, well, you\u2019re looking at the data that you want to amend and then you have to, in WordPress parlance, click edit post and then go and find that field and amend that field and then click save and then go back and make sure it looks how it ought to look. That\u2019s just one of the best things about this whole approach, isn\u2019t it? Is that you can do it right there on the front end.\nJust moving slightly. Obviously you\u2019re a SaaS app. You\u2019re consuming all sorts of data. Probably you can imagine where this question\u2019s going. If you are consuming, I don\u2019t know, email addresses, images, all sorts of financial information, whatever it may be. How are you storing that? Where is that data being kept? If I\u2019m in the EU, do you have it in a certain jurisdiction? Is it encrypted? Let\u2019s just leave it at that.\n[00:38:41] Timothy Jacobs: Yeah, that\u2019s a great question. So right now we don\u2019t have a separate EU instance for instance. Unintentional rhyming there. But the way that we\u2019ve set this up is, we are using MongoDB as our database system. And each team that gets created gets their own, essentially database inside of MongoDB to themselves.\nSo right now that\u2019s all centrally part of Digital Ocean\u2019s managed database service and their encryption at rest and so on and so forth. And there are a lot of great security practices. In the future though, what that means is that we\u2019ll be able to support teams having data that is in a different data center, depending on what their needs are.\nAnd even for potentially more enterprise customers, the need to be able to self-host their own database. Engine Awesome is set up to be able to connect to different database applications. But right now all of that data is stored in Engine Awesome, in Digital Ocean.\n[00:39:37] Nathan Wrigley: Okay, thank you. You mentioned enterprise there, but also Steve earlier was talking about examples of local charities and things like that. So is this software basically open to everybody? And on the website, forgive me, it may be that I\u2019m just not looking all that carefully, but I can\u2019t see a price. So I don\u2019t know if that\u2019s a function of you haven\u2019t worked out your pricing yet. Or if it\u2019s a contact us, and we\u2019ll talk through what it is that we think you\u2019re going to need, and we\u2019ll work out the pricing accordingly. But are you aiming at all the people all the time. Enterprise, just small mom and pop stores. How are you launching and what is the pricing model?\n[00:40:14] Steve Bruner: So right now most of our clients are small to medium size businesses. We\u2019re not writing off enterprise, we just realize that enterprise may need other features that we don\u2019t have yet. Like single sign-on or maybe a, you know, a dedicated SLA or something of that nature.\nSo we\u2019re not there yet. Obviously we\u2019re happy to talk to enterprise. There is one larger company that expressed an interest in Engine Awesome, and we\u2019ve been talking to them. But right now, all of our clients have been small to medium sized businesses.\nThe pricing model we\u2019re still playing with. Again, we don\u2019t want to charge per user. So we\u2019ve been playing with all sorts of ideas. The number of records you use. Or the resources you use. Our goal is to get you and your entire team on Engine Awesome, and we\u2019re willing to do whatever it takes to get you there.\nSo, right now we have a manual onboarding process. If you sign up for Engine Awesome, you\u2019re scheduling a Zoom call with me. So we have a talk. I find out what your needs are, how you plan on using Engine Awesome, your pain points. And we talk it through.\nAnd at that point we start working out where Engine Awesome fits into your plan. For smaller teams, we\u2019re in the $10 range a month, $15 range a month, $20 a month. But we\u2019re not really going much higher than that right now.\n[00:41:42] Nathan Wrigley: Are you going to be making use? So we\u2019re in phase three of Gutenberg, which is for want of a better word, concurrent editing. Think Google Docs. Are you going to be making use of that? I mean, I can see that being incredibly useful if it\u2019s pulled off. But is that something that you are thinking about implementing?\n[00:42:00] Timothy Jacobs: I would love to. It\u2019s something that I\u2019m seeing, and I\u2019m really, really excited to see how that evolves. I\u2019m really curious how the core Gutenberg team is going to approach designing that. I think there\u2019s a lot of UX patterns that are going to be challenging. And seeing them pull that off is going to be really interest.\nAnd then seeing how that connects to WordPress. Is it going to be like peer to peer? Is it going to go through WordPress, as the PHP backend? What is all that going to look like from a technical perspective I think will also be fascinating. For us, I think one of the benefits of being a SaaS application is that it makes it a little bit easier for us to do that kind of orchestration, because we control what the backend is.\nBut of course with WordPress, when we\u2019re building for WordPress, we\u2019re building for like 45% of the web. So the technical requirements are a lot more of a challenge. Yeah, I\u2019m keeping a keen eye on that and I\u2019m really excited to see how that progresses. Because, yeah, I think that\u2019ll take Gutenberg to high Peaks, and will be something that a lot of different people building on top of the block editor, on top of the Gutenberg project will be able to utilize.\n[00:43:07] Nathan Wrigley: That was kind of like a roadmap question, but in disguise. Let\u2019s just ask it outright. Just outline for us in the near future, we\u2019re recording this towards the middle of February, so depending on how long it takes this podcast episode to actually make it out into the public, some of these things may have come a along already. But just outline roughly, maybe let\u2019s go for six months, eight months, something like that. What\u2019s the plan? What are you hoping to implement?\n[00:43:32] Steve Bruner: Well, our customers are always giving us ideas, right? So things do change like you mentioned. Our priority of right now is user roles and capabilities. Once that\u2019s integrated, and that\u2019s going to take a little bit because not only do we need to plan it out and how it\u2019s going to work technically. We also need to make it super simple to implement, so clients can do this and feel comfortable that the right people are seeing the right data. So that is going to take a little bit of time.\nE-commerce would probably be our next big focus. Our clients want to start taking payments from their clients, right? The cleaning service is a great example. Right now the plan for her is to email a Stripe payment link to her clients, but we want to make things a little bit easier.\nAlso that feature would, currently being done through Zapier. Which is an additional charge. So we want to bring that into Engine Awesome, where we can make it seamless and where our clients won\u2019t have to pay any more for that.\nThose are probably the two major features that we want to roll out in the next six months. There are other things we want to do. We want to do, you know, we want to add scheduling. Again, a lot of our clients are service businesses. So scheduling is a big part of that, and they\u2019re using services like Calendly, and if we can do something better or bring it into Engine Awesome , make it easier for them to use, then we want to be able to do that as well.\n[00:44:55] Nathan Wrigley: The introductions at the top of the show made it pretty obvious that you\u2019ve got a history of giving back to WordPress. So, forgive me if this question sounds ill placed. But given that you are leveraging quite a lot of the Gutenberg project to build out your SaaS app, I\u2019m just wondering what your posture is in terms of giving back from Engine Awesome. Back to Gutenberg. Again caveat emptor. Sorry, I know that you both do more than enough already, but I just wondered if that was part of the ethics of the business.\n[00:45:28] Timothy Jacobs: Yeah, I\u2019m a big believer in that I think the Gutenberg project gets better the more different use cases that we have. Historically, my contributions to WordPress have been mainly focused on the REST API, and how Gutenberg interacts with the REST API. But I hope to be able to dive in more and more into the core Gutenberg project.\nSo I think being good stewards of the open source community is a key aspect to building on top of an open source project. Both from, this is the best thing to do from a kind of community standpoint. But I think also everyone should really be thinking about how they contribute back to Gutenberg. So that we have a say in shaping how Gutenberg moves forward.\nThere\u2019s a lot of work to do, and we all have different pet features or things that we might want to have changed or improved in Gutenberg. And, really the long and short of it is that there\u2019s more work to do than there are contributors to do the work. So the more of us that can contribute back to the Gutenberg project and the WordPress Core project, the faster we\u2019re all able to go.\n[00:46:39] Nathan Wrigley: Thank you, Steve. Anything there?\n[00:46:42] Steve Bruner: No, Tim said it all. Tim said it best. He\u2019s been a core contributor for a long time. Our goal from day one, like you mentioned, we\u2019ve been contributing to the WordPress community in both code and education for a very long time and we want to continue to do that.\n[00:46:57] Nathan Wrigley: Yeah, that\u2019s a nice answer to hear actually. That\u2019s very heartening. Thank you. Should anybody have been listening to this podcast, had their interest peaked. They\u2019re either interested in talking about what you did with Gutenberg from a technological point of view, because maybe they\u2019re thinking of adopting Gutenberg in their own platform. Or they just want to actually find out what they can do with Engine Awesome themselves.\nI don\u2019t know if you want to answer this question separately or combined, but where is the best place to get in touch? Is it a contact form? An email address? Is it, dare I say it, Twitter.\n[00:47:30] Steve Bruner: Right now our website is really the best place to contact us. So engineawesome.com. On the homepage if you are interested in signing up, or just getting on a Zoom call with me to learn more, there\u2019s a input right there where you can put in your email address and sign up for that.\nAnd we also have a contact form where if you have questions about Gutenberg and how we did this and you want a more heavy developer talk, you want to chat with Tim, then that\u2019s the place to let us know.\n[00:47:59] Timothy Jacobs: Yeah, you can also always find me on the make make dot WordPress Slack. That\u2019s also a great place to reach out.\n[00:48:05] Nathan Wrigley: Okay. Thank you Timothy Jacobs and Steve Bruner. Thanks for joining me on the podcast today to talk about Engine Awesome. I really appreciate it.\n[00:48:13] Steve Bruner: Thank you, Nathan. I really, I really enjoyed this.\n[00:48:15] Timothy Jacobs: Thanks for having us.\n\nOn the podcast today we have Steve Bruner and Timothy Jacobs.\nSteve has been active in the WordPress community for the past 17 years. He\u2019s a WordPress developer, co-organizer of the WordPressNYC Meetup, and has organised many WordCamps in New York City.\nTimothy is a WordPress Core Committer for the REST API, and has been a WordPress developer for over ten years. At StellarWP, he leads development of the iThemes Security plugin.\nWhat brings them together is that they\u2019re both founders of a SaaS app called Engine Awesome, where Steve is the CEO and Timothy is the CTO.\nWhat has this got to do with WordPress, you might ask. Well, they\u2019re here today to talk about Gutenberg, but not how you might expect. It\u2019s Gutenberg outside of WordPress, but Gutenberg nonetheless.\nLike all of WordPress, Gutenberg is open source. You are free to download it, modify it, and use it in whatever way you like. When Steve and Timothy began working on their new project, and needed a way for their clients to interact with it, they found Gutenberg was the perfect tool for the job.\nWe talk about what benefits they\u2019ve gained by using Gutenberg. How it\u2019s saved them time, and how it\u2019s fast becoming a stable and mature product, which is easy for non-technical users to understand.\nWe get into the details of which parts of Gutenberg they used, and which parts were not suitable for their app. They\u2019ve been building their own blocks which work well in the UI, but which are more suited to the kinds of data that they\u2019re gathering.\nThe discussion then moves onto what Engine Awesome actually does. It\u2019s an app builder in which you can construct your own data containers and theme them so that it displays in any way you like. They tell us about the features which they have so far, as well as the items which are on their roadmap.\nTowards the end, we talk about their commitment to continue contributing back to the Gutenberg project, and how they feel that it\u2019s in everyone\u2019s interest if the project gets better from any updates that they have made.\nIf you\u2019re looking to build your own SaaS app, or you\u2019re just curious about how Gutenberg is being deployed outside of WordPress, this podcast is for you.\nUseful links.\nLaraberg\nGutenberg for Drupal\nEngine Awesome has a new look! \u2013 blog post\nAirtable\nMongoDB\nDigital Ocean\u2019s managed database service\nShare this:Click to share on Twitter (Opens in new window)Click to share on Mastodon (Opens in new window)Click to share on Facebook (Opens in new window)Click to share on Telegram (Opens in new window)Click to share on WhatsApp (Opens in new window)Click to share on Pocket (Opens in new window)Click to share on Reddit (Opens in new window)Click to email a link to a friend (Opens in new window)Like thisLike Loading\u2026\n \niTunes\n\nRSS\n\n\nPocket Casts\n\nStitcher\n\n\nGoogle Play\n\n\nDownload\n\n\n\n\n\n\n\nTagged\ngutenberg podcast\n\nPrevious Episode: #71 \u2013 Nathan Ingram on How To Manage Contracts With Your WordPress Clients\nNext Episode: #73 \u2013 Ryan Welcher on Using the create-block Tool to Quickly Scaffold a New Block Plugin\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n2\n\n\n\n\t\t2 responses to \u201c#72 \u2013 Steve Bruner and Timothy Jacobs on Using Gutenberg Outside of WordPress\u201d\t\n\n\n\n\n\n\n\n\n\n Steve Bruner says: \n\nApril 19, 2023 at 3:08 PM \n\n\nThank you for the discussion, Nathan. It was a lot of fun!\n\nLoading\u2026\n\n\n\nReply \n\n\n\n\n\n Nathan Wrigley says: \n\nApril 19, 2023 at 3:15 PM \n\n\nYou\u2019re welcome. I hope other people will hear this and think about how they can leverage Gutenberg for their own projects.\n\nLoading\u2026\n\n\n\nReply \n\n\n\n\n\n\n\n\n\nLeave a Reply Cancel replyYour email address will not be published. Required fields are marked *Comment * Name * \nEmail * \nWebsite \n Notify me of new posts by email. \n\n\u00a0Join the discussion via emailGet only replies to your comment, the best of the rest, as well as a daily recap of all comments on this post. No more than a few emails daily, which you can reply to/unsubscribe from directly from your inbox.\u0394 \nThis site uses Akismet to reduce spam. Learn how your comment data is processed.\n\n\n\n\n\n\n\n\nListen to more episodes\n\n#72 \u2013 Steve Bruner and Timothy Jacobs on Using Gutenberg Outside of WordPress\nApril 19, 2023\n\n#71 \u2013 Nathan Ingram on How To Manage Contracts With Your WordPress Clients\nApril 12, 2023\n\n#70 \u2013 Steve Persch and Brian Perry on How Hosting Is Changing\nApril 5, 2023\n\n#69 \u2013 Joost De Valk on What\u2019s Happening After Yoast\nMarch 29, 2023\n\n\n\nRelated Reads\n#10 \u2013 What\u2019s in WordPress 5.9, and What Is Openverse?December 2, 2021#18 \u2013 Leonardo Losoviz on the Block Protocol\u2019s Efforts To Make Blocks Work UniversallyMarch 16, 2022#54 \u2013 Steve Burge on Where We\u2019re at With Multi-Author Collaboration in WordPressDecember 7, 2022\n\n\n\n\nLatest Podcast\n\n#73 \u2013 Ryan Welcher on Using the create-block Tool to Quickly Scaffold a New Block Plugin\nOn the podcast today we have Ryan Welcher. He\u2019s a developer advocate sponsored by Automattic. He has been developing with WordPress since 2009 and before becoming a developer advocate, worked for agencies large and small and as a freelancer. If you\u2019ve been using WordPress for any length of time, you\u2019ll have come across the new\u2026Listen Now\n\n\n\n\n\nNewsletter\nSubscribe Via Email\nEnter your email address to subscribe to this blog and receive notifications of new posts by email.\n\n\n\n\n\n\n\t\t\t\t\t\t\tType your email\u2026\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n\t\t\t\t\t\t\tSubmit\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAbout WP Tavern\nWordPress Tavern is a website about all things WordPress. We cover news and events, write plugin and theme reviews, and talk about key issues within the WordPress ecosystem\u2026\n\n\n\nHomeAboutArchiveWrite For UsAsk the Bartender\n\n\nTwitter\nFacebook\nInstagram\n\n\n\n\n\u00a9 All Rights Reserved. Powered by WordPress, hosted by Pressable \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n%d bloggers like this:\n\n",
    "links": [
        "https://wptavern.com/",
        "/category/news",
        "/category/opinion",
        "/category/plugins",
        "/category/themes",
        "/category/wordcamps-meetups",
        "/podcast",
        "https://wptavern.com/contact",
        "#",
        "#",
        "https://podcasts.apple.com/gb/podcast/jukebox/id1559974424",
        "https://open.spotify.com/show/4JKqugYjTZJTPnTr9hYvDp",
        "https://www.facebook.com/sharer/sharer.php?u=https://wptavern.com/podcast/72-steve-bruner-and-timothy-jacobs-on-using-gutenberg-outside-of-wordpress&t=#72 - Steve Bruner and Timothy Jacobs on Using Gutenberg Outside of WordPress",
        "https://twitter.com/intent/tweet?text=https://wptavern.com/podcast/72-steve-bruner-and-timothy-jacobs-on-using-gutenberg-outside-of-wordpress&url=#72 - Steve Bruner and Timothy Jacobs on Using Gutenberg Outside of WordPress",
        "https://wptavern.com/podcast-player/143647/72-steve-bruner-and-timothy-jacobs-on-using-gutenberg-outside-of-wordpress.mp3",
        "https://wptavern.com/podcast-download/143647/72-steve-bruner-and-timothy-jacobs-on-using-gutenberg-outside-of-wordpress.mp3?ref=download",
        "https://wptavern.com/podcast-download/143647/72-steve-bruner-and-timothy-jacobs-on-using-gutenberg-outside-of-wordpress.mp3?ref=new_window",
        "https://podcasts.apple.com/gb/podcast/jukebox/id1559974424",
        "https://open.spotify.com/show/4JKqugYjTZJTPnTr9hYvDp",
        "https://wordpress.org/support/users/sbruner/",
        "https://profiles.wordpress.org/timothyblynjacobs/",
        "https://www.meetup.com/WordPressNYC/",
        "https://stellarwp.com/",
        "https://engineawesome.com/",
        "https://github.com/VanOns/laraberg/",
        "https://www.drupal.org/project/gutenberg",
        "https://engineawesome.com/2023/01/23/engine-awesome-has-a-new-look/",
        "https://airtable.com/",
        "https://www.mongodb.com/",
        "https://www.digitalocean.com/products/managed-databases",
        "https://wptavern.com/podcast/72-steve-bruner-and-timothy-jacobs-on-using-gutenberg-outside-of-wordpress?share=twitter",
        "https://wptavern.com/podcast/72-steve-bruner-and-timothy-jacobs-on-using-gutenberg-outside-of-wordpress?share=mastodon",
        "https://wptavern.com/podcast/72-steve-bruner-and-timothy-jacobs-on-using-gutenberg-outside-of-wordpress?share=facebook",
        "https://wptavern.com/podcast/72-steve-bruner-and-timothy-jacobs-on-using-gutenberg-outside-of-wordpress?share=telegram",
        "https://wptavern.com/podcast/72-steve-bruner-and-timothy-jacobs-on-using-gutenberg-outside-of-wordpress?share=jetpack-whatsapp",
        "https://wptavern.com/podcast/72-steve-bruner-and-timothy-jacobs-on-using-gutenberg-outside-of-wordpress?share=pocket",
        "https://wptavern.com/podcast/72-steve-bruner-and-timothy-jacobs-on-using-gutenberg-outside-of-wordpress?share=reddit",
        "mailto:?subject=%5BShared%20Post%5D%20%2372%20-%20Steve%20Bruner%20and%20Timothy%20Jacobs%20on%20Using%20Gutenberg%20Outside%20of%20WordPress&body=https%3A%2F%2Fwptavern.com%2Fpodcast%2F72-steve-bruner-and-timothy-jacobs-on-using-gutenberg-outside-of-wordpress&share=email",
        "https://podcasts.apple.com/gb/podcast/jukebox/id1559974424",
        "/feed/podcast",
        "https://pca.st/gXd9",
        "https://www.stitcher.com/show/wordpress-weekly-podcast",
        "https://podcasts.google.com/feed/aHR0cHM6Ly93d3cud3B0YXZlcm4uY29tL2ZlZWQvcG9kY2FzdA",
        "https://wptavern.com/podcast-download/143647/72-steve-bruner-and-timothy-jacobs-on-using-gutenberg-outside-of-wordpress.mp3?ref=download",
        "https://wptavern.com/tag/gutenberg",
        "https://wptavern.com/tag/podcast",
        "https://wptavern.com/podcast/71-nathan-ingram-on-how-to-manage-contracts-with-your-wordpress-clients",
        "https://wptavern.com/podcast/73-ryan-welcher-on-using-the-create-block-tool-to-quickly-scaffold-a-new-block-plugin",
        "https://engineawesome.com",
        "https://wptavern.com/podcast/72-steve-bruner-and-timothy-jacobs-on-using-gutenberg-outside-of-wordpress#comment-438467",
        "https://wptavern.com/podcast/72-steve-bruner-and-timothy-jacobs-on-using-gutenberg-outside-of-wordpress?replytocom=438467#respond",
        "https://wptavern.com/podcast/72-steve-bruner-and-timothy-jacobs-on-using-gutenberg-outside-of-wordpress#comment-438468",
        "https://wptavern.com/podcast/72-steve-bruner-and-timothy-jacobs-on-using-gutenberg-outside-of-wordpress?replytocom=438468#respond",
        "/podcast/72-steve-bruner-and-timothy-jacobs-on-using-gutenberg-outside-of-wordpress#respond",
        "https://akismet.com/privacy/",
        "https://wptavern.com/podcast/72-steve-bruner-and-timothy-jacobs-on-using-gutenberg-outside-of-wordpress",
        "https://wptavern.com/podcast/71-nathan-ingram-on-how-to-manage-contracts-with-your-wordpress-clients",
        "https://wptavern.com/podcast/70-steve-persch-and-brian-perry-on-how-hosting-is-changing",
        "https://wptavern.com/podcast/69-joost-de-valk-on-whats-happening-after-yoast",
        "https://wptavern.com/podcast/10-whats-in-wordpress-5-9-and-what-is-openverse",
        "https://wptavern.com/podcast/10-whats-in-wordpress-5-9-and-what-is-openverse",
        "https://wptavern.com/podcast/18-leonardo-losoviz-on-the-block-protocols-efforts-to-make-blocks-work-universally",
        "https://wptavern.com/podcast/18-leonardo-losoviz-on-the-block-protocols-efforts-to-make-blocks-work-universally",
        "https://wptavern.com/podcast/54-steve-burge-on-where-were-at-with-multi-author-collaboration-in-wordpress",
        "https://wptavern.com/podcast/54-steve-burge-on-where-were-at-with-multi-author-collaboration-in-wordpress",
        "https://wptavern.com/podcast/73-ryan-welcher-on-using-the-create-block-tool-to-quickly-scaffold-a-new-block-plugin",
        "https://wptavern.com/podcast/73-ryan-welcher-on-using-the-create-block-tool-to-quickly-scaffold-a-new-block-plugin",
        "https://wptavern.com/about",
        "/",
        "https://wptavern.com/about",
        "https://wptavern.com/archives",
        "https://wptavern.com/contact",
        "https://wptavern.com/contact/ask-the-bartender",
        "http://twitter.com/wptavern",
        "http://facebook.com/wptavern",
        "https://www.instagram.com/wptav/",
        "https://wordpress.org",
        "http://pressable.com/?utm_source=Automattic&utm_medium=rpc&utm_campaign=Concierge%20Referral&utm_term=concierge"
    ]
}