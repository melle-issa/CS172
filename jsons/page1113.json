{
    "title": "\nAndrew Ozz on WordPress | Just another WordPress.com weblog\t",
    "body": "\nSkip to primary contentSkip to secondary content\n\n\nAndrew Ozz on WordPress\nJust another WordPress.com weblog\n\n\n\n\n\nSearch\n\n\n\n\nMain menu\n\nHomeContact\n\n\n\n\n\n\n\n\nCustomizing TinyMCE 4.0\n\nPosted on April 19, 2014  by  Andrew Ozz \n\n\nMany of the TinyMCE settings have changed in version 4.0. There is a new default theme: Modern, and all the UI settings for the former Advanced theme (theme_advanced...) are deprecated.\nOne often used setting was theme_advanced_blockformats. It was renamed to block_formats and keeps the same formatting. To specify a different set of elements for the \u2018blockformats\u2019 drop-down (second toolbar row in the WordPress Visual editor), you can set a string of name=value pairs separated by a semicolon in the initialization object:\nblock_formats: \"Paragraph=p;Heading 1=h1;Heading 2=h2;Heading 3=h3\"\nAnother handy setting: theme_advanced_styles doesn\u2019t exist any more. However there is a more powerful version: style_formats. Now it can replace or add items to the new \u201cFormats\u201d menu.The value is an array of objects each containing a name that is displayed as sub-menu and several settings: a CSS class name or an inline style, and optionally the wrapper element where the class or inline style will be set:\n\n\ntoolbar3: 'styleselect',\n\nstyle_formats_merge: true,\n\nstyle_formats: { name: 'Custom styles', [\n\n  {title: 'Red bold text', inline: 'b', styles: {color: '#ff0000'}},\n\n  {title: 'Red text', inline: 'span', styles: {color: '#ff0000'}},\n\n  {title: 'Red header', block: 'h1', styles: {color: '#ff0000'}},\n\n  {title: 'Example 1', inline: 'span', classes: 'example1'},\n\n  {title: 'Example 2', inline: 'span', classes: 'example2'}\n\n]}\n\n\nThe above code will add another sub-menu to \u201cFormats\u201d without replacing the default menu items. There is more information and an example on the TinyMCE website.\n\n\n\nPosted in WordPress \n | \n\nTagged TinyMCE \n\n\n\n\nServer managed cache in the\u00a0browser\n\nPosted on May 11, 2011  by  Andrew Ozz \n\n\nImagine browsing to a big web page with lots of images and scripts, and it loads in your browser almost instantly, nearly as fast as loading it from your hard drive. Now imagine you\u2019re browsing a web site with about 60-70 of these pages and they all load very very fast. Sounds interesting? But how to do that? Prime the browser\u2019s cache? Preload all components of the web pages somehow? Is that possible?\nWell, yes and no. It is possible by using Gears. It can be set to store all \u201cstatic\u201d components (JS, CSS, images, etc.) of a web page or a whole web site and load them from the local storage every time they are requested by the browser. However the Gears team shifted their priorities to HTML 5.0 offline storage which was the main idea behind Gears in the first place. Unfortunately the HTML 5.0 specification for offline storage implements only some of the features that were available in Gears, so this type of caching (controlled by the user and managed by the server) is impossible.\nBut why server managed cache? Isn\u2019t the standard browser caching good enough? Yes, it is good. It has evolved significantly during the 15 or so years since the beginning of the World Wide Web. However it just can\u2019t do that.\nLets take a simplistic look at how the browser cache works:\n\nWe (the users) browse to a web page.\nThe Server tells the Browser: \u201cHey there, these few files (images, JS, CSS, etc.) are almost never updated, put them in your cache and don\u2019t ask me to send them again for the next 10 years.\u201d\nThe Browser thinks: \u201cHmm, put them in the cache you saying? I\u2019ll think about it. You know, I\u2019m a Web Browser. I need to load pages very very fast. I don\u2019t want a huge cache with millions of files in it. That will slow me down. Lets see if the User would come back to this page ever again.\u201d\n\nIf we keep going to the same web page eventually the Browser would change his mind: \u201cMaybe that Server was right and I should put these files in my cache. That would speed up page loading. But what will happen if these files are updated\u2026 I better keep asking the Server to check if they have been updated so my cache is always fresh.\u201d\nCouple of years ago we implemented Gears as WordPress\u2019 Turbo feature. We didn\u2019t use it to make WordPress an offline app, we used it to create server managed cache. It worked great. Even the heaviest pages in the WordPress admin were loading considerably faster regardless of how often the users were visiting them.\nThe implementation was very simple: we had a manifest that listed all \u201cstatic\u201d files and couple of user options to enable and initialize the \u201csuper cache\u201d. The rest was handled automatically by Gears. So in reality we discovered the perfect way of browser caching for web apps:\n\nThe User decides which web sites / web apps are cached and can add or remove them.\nThe server (i.e. the web app) maintains the cache, updating, adding, deleting files as needed.\n\nThe results were spectacular. We didn\u2019t need to concatenate and compress scripts and stylesheets. We even stopped compressing TinyMCE which alone can load about 30-40 files on initialization. And page load time was from 0.5 to 1.5 sec. no matter how heavy the page was. For comparison before implementing this \u201csuper caching\u201d pages were loading in 5 to 9 sec.\nWhy was it performing that well? Simple: it eliminated all requests to the server for the files that were cached. And that means all, even the \u201cHEAD\u201d requests. In our implementation the only file that was loaded from the server was the actual HTML. All other components of the web page were stored in Gears\u2019 offline storage.\nThat also had the side benefit of eliminating a big chunk of traffic to the server. At first look it doesn\u2019t seem like a lot, 30-40 requests for the web page components followed by 30-40 of HEAD requests per page every now and then (while the browser cache is hot), but think about it in global scope: several millions of these pages are loaded every hour.\nSo, why not do the same with HTML 5.0 offline storage? Because it doesn\u2019t work that way. The HTML 5.0 specification for offline storage is good only for\u2026 Offline storage. It\u2019s missing a lot of the features Gears has. Yes, there is a workaround. We can \u201cstore offline\u201d a skeleton of the web page and then load all the dynamic content with XHR (a.k.a. AJAX), but that method has other (quite annoying) limitations. Despite that we will try this method in WordPress for sure, but that discussion is for another post.\nIn short: the HTML 5.0 offline storage implementation is missing some critical features. For example a file that is stored there is not loaded from the storage when the browser goes to another page on the same website. Yes, it\u2019s sad watching the browser load the same file again and again from the Internet when that file is already on the user\u2019s hard drive.\nWhat can we do about it? Don\u2019t think there is anything that can be done short of changing, or rather enhancing the HTML 5.0 specification for offline storage. The XHR \u201chack\u201d that makes this kind of caching possible with the current HTML 5.0 is still just a hack.\n\n\n\nPosted in HTML 5.0, WordPress \n | \n\nTagged Optimization, web specs, WordPress \n\n\n\n\nCan themes style the visual\u00a0editor?\n\nPosted on January 2, 2010  by  Andrew Ozz \n\n\nShort answer: yes. This has been available for quite some time but don\u2019t think I\u2019ve seen themes that do it. Things like typefaces, headings, image padding and borders, etc. can easily be set by the current theme making the visual editor\u2026 more WYSIWYG. All it takes is a stylesheet and a small function in the theme\u2019s functions.php file:\n\n\nadd_filter('mce_css', 'my_editor_style');\n\nfunction my_editor_style($url) {\n\n\n\n  if ( !empty($url) )\n\n    $url .= ',';\n\n\n\n  // Change the path here if using sub-directory\n\n  $url .= trailingslashit( get_stylesheet_directory_uri() ) . 'editor-style.css';\n\n\n\n  return $url;\n\n}\n\n\nwhere\u00a0editor-style.css will be applied to TinyMCE\u2019s iframe.\nThere is also an option to define CSS classes that can be inserted by the user and to add the \u201cStyles\u201d drop-down selector to the editor toolbar. This is probably most useful for developers when creating a custom theme for a client as these classes would stop working if the theme is changed.\nI\u2019ve put together a small package with examples of how to enable this. If you are creating WordPress themes, download it or have a look, it\u2019s quite simple. If not, perhaps ask the author of your theme to add it to the next update. \ud83d\ude42\nUpdate: as Dion points out in the comments, this is not meant for adding the whole \u201cstyle.css\u201d to the editor. That could bring problems and most of the styling won\u2019t apply there anyways. It works best when a separate stylesheet is made specifically for use in the editor (editor-style.css in the example). It should contain a small subset from style.css, usually the part that is applied to the actual posts.\n\n\n\nPosted in WordPress \n | \n\nTagged Themes, TinyMCE \n\n\n\n\nPodPress 8.8.2\n\nPosted on December 31, 2009  by  Andrew Ozz \n\n\nPodPress version 8.8.2 is a maintenance and bugfix release including patches by Tim Berger. It makes podPress compatible with WordPress 2.9 and fixes several other bugs. If someone has other patches please open tickets on the plugins trac and leave a comment here.\n\n\n\nPosted in Plugins \n | \n\nTagged podPress \n\n\n\n\npodPress and Popularity\u00a0Contest\n\nPosted on March 25, 2009  by  Andrew Ozz \n\n\nThere have been couple of patches for the feeds in podPress by Tim Berger, Update and bugfix for the atom feed and Bypass of the RSS Feed does not work. Currently they are in the Development Version. If anybody wants to add more, please make a ticket on the plugins trac and drop me an email.\nAlso recently had a look at the Popularity Contest plugin. It works well in WordPress 2.7 and 2.8-bleeding only the activation fails. To make it compatible a small piece of code has to be added to the beginning: global $wpdb;\nThis should go just above the first \u201cif\u201d statement, so it looks like this:\n\n\n// add this \n\nglobal $wpdb;\n\n\n\n// existing code\n\nif (!isset($wpdb)) {\n\n\trequire('../../wp-blog-header.php');\n\n\t...\n\n\nTried to contact the author and send him this fix so he can add it to the plugin.\n\n\n\nPosted in Plugins \n | \n\nTagged Plugins, WordPress \n\n\n\n\nTroubleshooting TinyMCE in WordPress\u00a02.7\n\nPosted on December 11, 2008  by  Andrew Ozz \n\n\nOne of the many improvements in WordPress 2.7 is the updated configuration of the visual editor, TinyMCE. It was optimized to support caching better  and to load faster.\nThe compression whitin WordPress is gone and all editor components are included as standard Javascript, CSS and HTML files. However a lot of servers compress these files automatically. If your server doesn\u2019t do that, the first loading of the write/edit page will be slower, but after that the editor loads a lot faster than before, as all files are in the browser\u2019s cache on the hard disk. And if the \u201cTurbo\u201d is turned on in WordPress and Gears enabled, the speed increase is even bigger as the browser does not have to check if any file has been updated.\nIn my (non-scientific) tests the loading time of the Add New Post screen went from about 5 \u2013 8 sec. to about 1 \u2013 2 sec. depending on the Internet connection and the computer speed.\nThe removal of the compression whitin WordPress also improves compatibility with some unusual server configurations and fixes some hard to catch errors, for example when there are php errors or output starts in the current theme\u2019s functions.php file.\nCurrently the editor\u2019s settings together with all Javascript files are included directly in the HTML head section of the page, making it a lot easier to troubleshoot.\nThere are a few steps that would help with the troubleshooting if the editor doesn\u2019t start or work properly:\n\nMake sure the \u201cDisable the visual editor when writing\u201d checkbox in your profile is not selected.\nWhitelist or set your blog as \u201ctrusted\u201d in your firewall and antivirus program.\nDisable Gears, clear your browser\u2019s cache, quit it, start it again, go back to the write page and force-reload it several times, while holding down Shift (Firefox) or Ctrl (IE). In Safari select Clear Cache (from the Safari menu on Mac).\nTry another browser and/or another computer.\nDisable all plugins, clear the cache, restart the browser and try again.\nDelete both wp-admin and wp-includes directories and upload fresh copies from the WordPress installation package.\nAnd finally install Firefox or Opera, note any Javascript errors, especially the first one and try searching on the support forum for a solution. If no solution exists, open a new thread including the error.\n\n\n\n\nPosted in WordPress \n | \n\nTagged TinyMCE, WordPress \n\n\n\n\nPodPress in WordPress\u00a02.6\n\nPosted on July 31, 2008  by  Andrew Ozz \n\n\nYesterday had a quick look at podPress, the premier plugin for podcasting. It has a small incompatibility with the new Post Revisions feature introduced in WordPress 2.6.\nPodPress seems to be in the middle of a large update. I\u2019ve used the \u201cexperimental\u201d version (8.9) of the plugin and emailed the proposed fix to the authors, however for the more impatient here is the patch:\n\n\nfunction post_edit($post_id) {\n\n\tGLOBAL $post;\n\n\tif($this->justposted) {\n\n\t\treturn;\n\n\t}\n\n\t$this->justposted = true;\n\n\n\n\tif ( isset($_POST['post_ID']) && (int) $_POST['post_ID'] )\n\n\t\t$post_id = (int) $_POST['post_ID'];\n\n\n\n\t$this->settings_item_save($post_id, $_POST);\n\n}\n\n\nIt goes in podpress/podpress_admin_class.php, around line 51. What it does is to make sure the custom post meta fields used by podPress are attached to the actual Post, not one of the revisions.\n\n\n\nPosted in Plugins \n | \n\nTagged Plugins, WordPress \n\n\n\n\nThank you!\n\nPosted on July 16, 2008  by  Andrew Ozz \n\n\nI am deeply honoured to be chosen as WordPress.org core committer. That was a very nice surprise on the eve of the 2.6 release \ud83d\ude42\nThanks a lot guys. I\u2019ll do my best (and try not to mess anything up on trac).\n\n\n\nPosted in WordPress \n | \n\nTagged WordPress \n\n\n\n\nWordPress 2.6: quick\u00a0tips\n\nPosted on July 15, 2008  by  Andrew Ozz \n\n\nThe new WordPress 2.6 perfects most of the features introduced in 2.5 and adds several big enhancements. A nice security enhancement is the full support for SSL in the the admin area, ensuring all data sent from the browser to the server and back is encrypted.\nTo take full advantage of it, everybody should enter not one but three \u201cSecret Keys\u201d in their wp-config.php file. More details are available on Ryan\u2019s blog.\nAnother security improvement is the disabling by default of the Atom Publishing and the XML-RPC protocols. This is more of a \u201clocking of the back door when we know nobody is coming through there\u201d kind of thing, not a \u201csecurity guards with dogs\u201d. However these protocols are used by the off-line blog editors and by some plugins, so if you have one of these, make sure to enable the protocol you need from the Settings screen.\nA new improvement is the ability to add captions to all images. Just enter some text in the Caption field on the Insert Image dialog and a caption will be added both in the editor and on the blog. To show the captions on the blog correctly, a few CSS styles may need to be added to your current theme\u2019s style.css file. These styles are in both the Default and Classic themes\u2019 style.css and are as follows:\n\n\n\n\n.aligncenter,\n\ndiv.aligncenter {\n\n\u00a0\u00a0 \u00a0display: block;\n\n\u00a0\u00a0 \u00a0margin-left: auto;\n\n\u00a0\u00a0 \u00a0margin-right: auto;\n\n}\n\n\n\n.alignleft {\n\n\u00a0\u00a0 \u00a0float: left;\n\n}\n\n\n\n.alignright {\n\n\u00a0\u00a0 \u00a0float: right;\n\n}\n\n\n\n.wp-caption {\n\n\u00a0\u00a0 \u00a0border: 1px solid #ddd;\n\n\u00a0\u00a0 \u00a0text-align: center;\n\n\u00a0\u00a0 \u00a0background-color: #f3f3f3;\n\n\u00a0\u00a0 \u00a0padding-top: 4px;\n\n\u00a0\u00a0 \u00a0margin: 10px;\n\n\u00a0\u00a0 \u00a0-moz-border-radius: 3px;\n\n\u00a0\u00a0 \u00a0-khtml-border-radius: 3px;\n\n\u00a0\u00a0 \u00a0-webkit-border-radius: 3px;\n\n\u00a0\u00a0 \u00a0border-radius: 3px;\n\n}\n\n\n\n.wp-caption img {\n\n\u00a0\u00a0 \u00a0margin: 0;\n\n\u00a0\u00a0 \u00a0padding: 0;\n\n\u00a0\u00a0 \u00a0border: 0 none;\n\n}\n\n\n\n.wp-caption p.wp-caption-text {\n\n\u00a0\u00a0 \u00a0font-size: 11px;\n\n\u00a0\u00a0 \u00a0line-height: 17px;\n\n\u00a0\u00a0 \u00a0padding: 0 4px 5px;\n\n\u00a0\u00a0 \u00a0margin: 0;\n\n}\n\n\n\n\nOf course these styles can be edited to suit your theme. A nice way of editing CSS styles is to use FireFox with FireBug. When changing styles there, it would show you immediately how the look changes, and when everything looks good, just copy/paste the edited styles to your style.css file (don\u2019t forget to check them in Internet Explorer, Safari and Opera too).\nEditing image captions should be very intuitive. Clicking on the Edit button that pops up when you click on an image in the editor would open the newly enhanced Edit Image dialog that has the same options as the Insert Image one. It would let you align, resize, change the title, link or caption for the image. There is also an advanced tab that has more options.\nImages with captions can also be aligned with the Align Left, Align Center, Align Right buttons on the editor\u2019s toolbar. In FireFox and Internet Explorer, the images and the captions can be resized by dragging the corners, however that\u2019s not recommended since most images don\u2019t look very well after using this method. Best is to select the right size image when inserting it.\nTrying to move an image that has a caption by dragging it doesn\u2019t work (yet). Currently there\u2019s no support for dragging in the editor. Since all modern browsers seem to support dragging better, it won\u2019t be long before that will work well too.\nAnother nice enhancement is the \u201cTurbo\u201d (top-right corner on the dashboard). Behind it is a new browser plugin \u2013 Gears. Currently it only works in FireFox and Internet Explorer, soon in Safari.\nIn WordPress, Gears captures all \u201cstatic\u201d files (images, css and JavaScript) from the admin area to the computer\u2019s Hard Disk. This eliminates needless connections to the server when these files are needed. That makes page loading quite \u201csnappier\u201d for people with fast connections and much faster when Internet is congested or the connection is slow.\nAfter enabling Gears it would download about 200 small files (just over 1MB in total) to your Hard Disk. Any errors during the download usually mean that some files in WordPress haven\u2019t been installed properly. The best way to fix this is to delete the wp-admin and wp-includes directories and upload fresh copies from the installation package.\n\n\n\nPosted in WordPress \n | \n\nTagged release, WordPress \n\n\n\n\n\n\nCategories\n\nHTML 5.0\n\nPlugins\n\nWordPress\n\n\nMeta\n\nRegister Log in\nEntries feed\nComments feed\nWordPress.com\n\n \n\n\n\nCreate a free website or blog at WordPress.com.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFollow\n\n\nFollowing\n\n\n\n\n\n\n\n\t\t\t\tAndrew Ozz on WordPress\t\t\t\n\n\nJoin 65 other followers\n\n\n\n\n\n\n\n \n\n\t\t\t\t\t\t\t\t\t\t\t\tSign me up\t\t\t\t\t\t\t\t\t\t\t\n\n\n\n\n\t\t\t\t\t\t\t\t\t\t\tAlready have a WordPress.com account? Log in now. \n\n\n\n\n\n\n \n\n\n\n\n\n\t\t\t\tAndrew Ozz on WordPress\t\t\t\n\n\n\n Customize\n\n\n\n\nFollow\n\n\nFollowing\n\n\nSign up\nLog in\n\n\n\t\t\t\t\t\t\t\t\t\t\tReport this content\t\t\t\t\t\t\t\t\t\t\n\n\n\n\t\t\t\t\t\t\t\t\t\t\tView site in Reader\t\t\t\t\t\t\t\t\t\t\n\n\nManage subscriptions\n\nCollapse this bar\n\n\n\n\n\n\n\n\n\n\n \n\n\n",
    "links": [
        "#content",
        "#secondary",
        "https://ozz.blog/",
        "https://ozz.blog/",
        "https://ozz.blog/",
        "https://ozz.blog/contact/",
        "https://ozz.blog/2014/04/19/customizing-tinymce-4-0/",
        "https://ozz.blog/2014/04/19/customizing-tinymce-4-0/",
        "https://ozz.blog/author/azaozz/",
        "http://www.tinymce.com/wiki.php/Configuration:style_formats",
        "http://www.tinymce.com/tryit/custom_formats.php",
        "https://ozz.blog/category/wordpress/",
        "https://ozz.blog/tag/tinymce/",
        "https://ozz.blog/2011/05/11/server-managed-cache-in-the-browser/",
        "https://ozz.blog/2011/05/11/server-managed-cache-in-the-browser/",
        "https://ozz.blog/author/azaozz/",
        "http://gears.google.com/",
        "http://gearsblog.blogspot.com/2010/02/hello-html5.html",
        "https://ozz.blog/category/html-5-0/",
        "https://ozz.blog/category/wordpress/",
        "https://ozz.blog/tag/optimization/",
        "https://ozz.blog/tag/web-specs/",
        "https://ozz.blog/tag/wordpress/",
        "https://ozz.blog/2010/01/02/can-themes-style-the-visual-editor/",
        "https://ozz.blog/2010/01/02/can-themes-style-the-visual-editor/",
        "https://ozz.blog/author/azaozz/",
        "http://plugins.svn.wordpress.org/tinymce-advanced/branches/tinymce-kit/",
        "https://ozz.blog/category/wordpress/",
        "https://ozz.blog/tag/themes/",
        "https://ozz.blog/tag/tinymce/",
        "https://ozz.blog/2009/12/31/podpress-8-8-2/",
        "https://ozz.blog/2009/12/31/podpress-8-8-2/",
        "https://ozz.blog/author/azaozz/",
        "http://wordpress.org/extend/plugins/podpress/",
        "http://profiles.wordpress.org/ntm/",
        "http://plugins.trac.wordpress.org/",
        "https://ozz.blog/category/plugins/",
        "https://ozz.blog/tag/podpress/",
        "https://ozz.blog/2009/03/25/podpress-and-popularity-contest/",
        "https://ozz.blog/2009/03/25/podpress-and-popularity-contest/",
        "https://ozz.blog/author/azaozz/",
        "http://plugins.trac.wordpress.org/ticket/961",
        "http://plugins.trac.wordpress.org/ticket/962",
        "http://downloads.wordpress.org/plugin/podpress.zip",
        "http://plugins.trac.wordpress.org/wiki",
        "https://azaozz.wordpress.com/contact/",
        "http://wordpress.org/extend/plugins/popularity-contest/",
        "https://ozz.blog/category/plugins/",
        "https://ozz.blog/tag/plugins/",
        "https://ozz.blog/tag/wordpress/",
        "https://ozz.blog/2008/12/11/troubleshooting-tinymce-in-wordpress-27/",
        "https://ozz.blog/2008/12/11/troubleshooting-tinymce-in-wordpress-27/",
        "https://ozz.blog/author/azaozz/",
        "http://tinymce.moxiecode.com/",
        "http://wordpress.org/download/",
        "http://www.mozilla.com/",
        "http://www.opera.com/",
        "http://wordpress.org/support/",
        "https://ozz.blog/category/wordpress/",
        "https://ozz.blog/tag/tinymce/",
        "https://ozz.blog/tag/wordpress/",
        "https://ozz.blog/2008/07/31/podpress-in-wordpress-26/",
        "https://ozz.blog/2008/07/31/podpress-in-wordpress-26/",
        "https://ozz.blog/author/azaozz/",
        "http://wordpress.org/extend/plugins/podpress/",
        "http://en.wikipedia.org/wiki/Podcasting",
        "http://downloads.wordpress.org/plugin/podpress.experimental.zip",
        "https://ozz.blog/category/plugins/",
        "https://ozz.blog/tag/plugins/",
        "https://ozz.blog/tag/wordpress/",
        "https://ozz.blog/2008/07/16/thank-you/",
        "https://ozz.blog/2008/07/16/thank-you/",
        "https://ozz.blog/author/azaozz/",
        "https://ozz.blog/category/wordpress/",
        "https://ozz.blog/tag/wordpress/",
        "https://ozz.blog/2008/07/15/wordpress-26-quick-tips/",
        "https://ozz.blog/2008/07/15/wordpress-26-quick-tips/",
        "https://ozz.blog/author/azaozz/",
        "http://wordpress.org/development/2008/07/wordpress-26-tyner/",
        "http://en.wikipedia.org/wiki/Secure_Sockets_Layer",
        "http://boren.nu/archives/2008/07/14/ssl-and-cookies-in-wordpress-26/",
        "http://en.wikipedia.org/wiki/Atom_(standard)",
        "http://en.wikipedia.org/wiki/XML-RPC",
        "https://ozz.blog/category/wordpress/",
        "https://ozz.blog/tag/release/",
        "https://ozz.blog/tag/wordpress/",
        "https://ozz.blog/category/html-5-0/",
        "https://ozz.blog/category/plugins/",
        "https://ozz.blog/category/wordpress/",
        "https://wordpress.com/start?ref=wplogin",
        "https://azaozz.wordpress.com/wp-login.php",
        "https://ozz.blog/feed/",
        "https://ozz.blog/comments/feed/",
        "https://wordpress.com/",
        "https://wordpress.com/?ref=footer_website",
        "",
        "",
        "https://ozz.blog",
        "https://wordpress.com/log-in?redirect_to=https%3A%2F%2Fr-login.wordpress.com%2Fremote-login.php%3Faction%3Dlink%26back%3Dhttps%253A%252F%252Fozz.blog%252F2014%252F04%252F19%252Fcustomizing-tinymce-4-0%252F",
        "https://ozz.blog",
        "https://azaozz.wordpress.com/wp-admin/customize.php?url=https%3A%2F%2Fazaozz.wordpress.com%2F",
        "",
        "",
        "https://wordpress.com/start/",
        "https://wordpress.com/log-in?redirect_to=https%3A%2F%2Fr-login.wordpress.com%2Fremote-login.php%3Faction%3Dlink%26back%3Dhttps%253A%252F%252Fozz.blog%252F2014%252F04%252F19%252Fcustomizing-tinymce-4-0%252F",
        "http://en.wordpress.com/abuse/?report_url=https://ozz.blog",
        "https://wordpress.com/read/feeds/58335170",
        "https://subscribe.wordpress.com/",
        ""
    ]
}