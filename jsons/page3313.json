{
    "title": "Matrix.org",
    "body": "This app works best with JavaScript enabled.DiscoverDevelopFoundationBlogFAQsMatrix LiveShopTry NowAn open network for secure, decentralized communicationLearn MoreAn open network for secure, decentralized communicationGet startedImagine a world......where it is as simple to message or call anyone as it is to send them an email....where you can communicate without being forced to install the same app....where you can choose who hosts your communication....where your conversations are secured by E2E encryption....where there\u00e2\u0080\u0099s a simple standard HTTP API for sharing real-time data on the web.This is Matrix.Matrix is an open source project that publishes the Matrix open standard for secure, decentralised, real-time communication, and its Apache licensed reference implementations.  Maintained by the non-profit Matrix.org Foundation, we aim to create an open platform which is as independent, vibrant and evolving as the Web itself... but for communication.As of June 2019, Matrix is out of beta, and the protocol is fully suitable for production usage.Support\u00c2\u00a0MatrixIf you share our vision, or are building on top of Matrix, please consider donating.Donorbox is currently the best way to support us as individuals. Learn more on our supporters page.LiberapayDonorboxPatreonCryptocurrencyYou can also send us cryptocurrency:BTC 1LxowEgsquZ3UPZ68wHf8v2MDZw82dVmAEETH 0xA5f9a4f9E024F6D727f7afdA9257e22329A97485DOT 12JDhAt3Y1NPpcLMxunH2f8DASZemC6nWPC9nkXdT3ui4zJGDonateMessagingMatrix gives you simple HTTP APIs and SDKs (iOS, Android, Web) to create chatrooms, direct chats and chat bots, complete with end-to-end encryption, file transfer, synchronised conversation history, formatted messages, read receipts and more.Conversations are replicated over all the servers participating in them, meaning there are no single point of control or failure.  You can reach any other user in the global Matrix ecosystem of over 40M users, even including those on other networks via bridges.Learn moreEnd-to-End EncryptionMatrix provides state-of-the-art end-to-end-encryption via the Olm and Megolm cryptographic ratchets. This ensures that only the intended recipients can ever decrypt your messages, while warning if any unexpected devices are added to the conversation.Matrix\u00e2\u0080\u0099s encryption is based on the Double Ratchet Algorithm popularised by Signal, but extended to support encryption to rooms containing thousands of devices. Olm and Megolm are specified as an open standard and implementations are released under the Apache license, independently audited by NCC Group.Learn moreVoIPWith the advent of WebRTC, developers gained the ability to exchange high quality voice and video calls \u00e2\u0080\u0093 but no standard way to actually route the calls.Matrix is the missing signalling layer for WebRTC. If you are building VoIP into your app, or want to expose your existing VoIP app to a wider audience, building on Matrix\u00e2\u0080\u0099s SDKs and bridges should be a no-brainer.Learn moreBridgingMatrix owes its name to its ability to bridge existing platforms into a global open matrix of communication. Bridges are core to Matrix and designed to be as easy to write as possible, with Matrix providing the highest common denominator language to link the networks together.The core Matrix team maintains bridges to Slack, IRC, XMPP and Gitter, and meanwhile the wider Matrix community provides bridges for Telegram, Discord, WhatsApp, Facebook, Signal and many more.Learn moreIOT, VR and more...Matrix can handle any type of real-time data, not only messaging and VoIP.By building bridges to as many IoT silos as possible, data can be securely published on the Matrix network. IoT solutions built on Matrix are unified, rather than locked to specific vendors, and can even publish or consume Matrix data directly from devices via ultra-low bandwidth transports (100bps or less)Meanwhile AR and VR vendors are recreating the silos we\u00e2\u0080\u0099ve seen in instant messaging rather than working together towards an open ecosystem. Matrix can be the unifying layer for both communication and world data in AR and VR.How does it work?Matrix is really a decentralised conversation store rather than a messaging protocol.  When you send a message in Matrix, it is replicated over all the servers whose users are participating in a given conversation - similarly to how commits are replicated between Git repositories.  There is no single point of control or failure in a Matrix conversation which spans multiple servers: the act of communication with someone elsewhere in Matrix shares ownership of the conversation equally with them.  Even if your server goes offline, the conversation can continue uninterrupted elsewhere until it returns.This means that every server has total self-sovereignty over its users data - and anyone can choose or run their own server and participate in the wider Matrix network.  This is how Matrix democratises control over communication.By default, Matrix uses simple HTTPS+JSON APIs as its baseline transport, but also embraces more sophisticated transports such as WebSockets or ultra-low-bandwidth Matrix via CoAP+Noise.NextHere are three Matrix homeservers, each with one client connected.The clients are all participating in the same Matrix room, which is synchronised across the three participating servers.Alice sends a JSON message to a room on her homeserver.curl -XPOST\n -d '{\"msgtype\":\"m.text\", \"body\":\"hello\"}'\n \"https://matrix.alice.com/_matrix/client\n /v2/rooms/ROOM_ID/send/m.room.message\n ?access_token=ACCESS_TOKEN\"\n\n{\n  \"event_id\": \"$YUwRidLecu:alice.com\"\n}\nAlice's homeserver adds the JSON to its graph of history, linking it to the most recent unlinked object(s) in the graph.The server then signs the JSON including the signatures of the parent objects to calculate a tamper-resistent signature for the history.The server then sends the signed JSON over HTTPS to any other servers which are participating in the room.curl \u00e2\u0080\u0093XPOST \u00e2\u0080\u0093H 'Authorization: X-Matrix origin=alice.com,...' \u00e2\u0080\u0093d '{\n  \"ts\": 1413414391521,\n  \"origin\": \"alice.com\",\n  \"destination\": \"bob.com\",\n  \"pdus\": [{\n      \"event_id\": \"$YUwRidLecu:alice.com\",\n      \"content\": {\n      \"body\": \"hello world\",\n      \"msgtype\": \"m.text\"\n    },\n    ...\n    \"pdu_type\": \"m.room.message\",\n    \"signatures\": {\n      \"matrix.org\": {\n        \"ed25519:auto\": \"jZXTwAH/7EZ...\"\n      }\n    },\n    \"sender\": \"@alice:alice.com\"\n  }]\n}' https://matrix.bob.com:8448/_matrix/federation/v1/send/916d...\nThe destination servers perform a series of checks on the message:Validate the message signature to protect against tampering with historyValidate the HTTP request's auth signature to protect against identity spoofingValidate whether Alice's historical permissions allow her to send this particular messageIf these checks pass, the JSON is added to the destination servers' graphs.Destination clients receive Alice's message with a long-lived GET request. (Clients are free to implement more efficient transports than polling as desired).curl \"https://matrix.bob.com/_matrix/client\n /v2/sync?access_token=ACCESS_TOKEN\"\n{\n  \"next_batch\": \"s72595_4483_1934\",\n  \"rooms\": [{\n    \"room_id\": \"!KrLWMLDnZAyTapqLWW:alice.com\",\n    \"events\": {\n      \"batch\": [{\n        \"event_id\": \"$YUwRidLecu:alice.com\",\n        \"type\": \"m.room.message\",\n        \"content\": {\n          \"body\": \"I am a fish\",\n          \"msgtype\": \"m.text\",\n        },\n        \"origin_server_ts\": 1417731086797,\n        \"sender\": \"@alice:alice.com\"\n      }],\n    },\n  }]\n}\nBob sends a response to Alice's message, and his server adds his message into his copy of the room's history, linking it to the most recent unlinked object in the graph - Alice's last message.Meanwhile, Charlie also responds to Alice's message - racing with Bob's message.Alice, Bob and Charlie's homeservers all have different views of the message history at this point - but Matrix is designed to handle this inconsistency.Bob's homeserver relays his message through to Alice and Charlie's servers, who accept it.At this point Alice and Bob are in sync, but Charlie's room history has split - both messages 2 and 3 follow on from message 1. This is not a problem; Charlie's client will be told about Bob's message and can handle it however it chooses.Charlie's homeserver relays his message through as well, at which point all 3 servers have a consistent view of history again (including the race between Bob and Charlie). All three clients have seen all three messages, and the room history is now back in sync across the participating servers.Later on, Alice sends another message - her homeserver adds it to her history, and links it to the most recent unlinked objects in the graph: Bob and Charlie's messages.This effectively merges the split in history and asserts the integrity of the room (or at least her view of it).Alice's message is then relayed to the other participating servers, which accept it and update their own history with the same rules, ensuring eventual consistency and integrity of the distributed room history.An Open StandardSimple pragmatic RESTful HTTP/JSON APIs by defaultOpen specification of the Matrix standardFully decentralised conversations with no single points of control or failureEnd-to-end encryption via Olm and MegolmWebRTC VoIP/Video calling using Matrix signallingReal-time synchronised history and state across all clientsIntegrates with existing 3rd party IDs to authenticate and discover usersMaintained by the non-profit Matrix.org FoundationGroup conversations, read receipts, typing notifications, presence...Latest\u00c2\u00a0NewsThis Week in Matrix 2023-04-282023-04-28 by ThibMatrix Live Dept of  Status of Matrix  \u00f0\u009f\u008c\u00a1\u00ef\u00b8\u008f Matrix.org Foundation Michael Downey  announces Don't miss this week's Matrix Live, where\u00e2\u0080\u00a6Read moreThis Week in Matrix 2023-04-212023-04-21 by ThibMatrix Live Dept of Servers \u00f0\u009f\u008f\u00a2 Telodendria ( website ) An open source Matrix homeserver implementation written from scratch in ANSI C and\u00e2\u0080\u00a6Read moreThis Week in Matrix 2023-04-142023-04-14 by ThibMatrix Live An unfortunate series of events prevented us from recording this week! Stay tuned for great bridge news next week. Dept of Spec\u00e2\u0080\u00a6Read moreThis Week in Matrix 2023-04-102023-04-10 by ThibMatrix Live Dept of Spec \u00f0\u009f\u0093\u009c TravisR  says Here's your weekly spec update! The heart of Matrix is the specification - and this is modified by\u00e2\u0080\u00a6Read moreView all postsExplore MatrixTry MatrixClientsBotsSDKsHostingSDKsNative SDKs for multiple platforms, including:PythonJavaScriptAndroidiOSView all SDKsOpen\u00c2\u00a0SourceJoin thousands of other developers in our open source repositories, including:SynapseJavaScript\u00c2\u00a0SDKAndroid\u00c2\u00a0SDKiOS\u00c2\u00a0SDKView all on\u00c2\u00a0GitHubThe Matrix FoundationMatrix is managed through an open governance process, looked after by The Matrix.org Foundation - a non-profit UK Community Interest Company.It acts as a neutral guardian of the Matrix spec, nurturing and growing Matrix for the benefit of the whole ecosystem.The Guardians are the legal directors of the Foundation, responsible for ensuring that it keeps on mission and neutrally protects the development of Matrix.What people are sayingI have seen the future of distributed collaboration and it is Matrix.   The .NET binding looks old, incomplete and I maintained.   If we get GSoC students this year, I\u00e2\u0080\u0099ll be happy to mentor, in the meantime I should probably contribute to it: https://t.co/nJY4iNHaLQ\u00e2\u0080\u0094 Miguel de Icaza (@migueldeicaza) February 6, 2019I finally started a spreadsheet to compare relative security, privacy, compatibility, and features of various messenger systems. TL;DR @RiotChat / @matrixdotorg is winning on all fronts. https://t.co/7zxczdjwwJ\u00e2\u0080\u0094 Lance R. Vick (@lrvick) October 13, 2018I certainly wouldn't trust a proprietary software driven by some Russian crypto millionaires any more (or any less) than Whatsapp. Or Threema, Wire, Keybase, and not even Signal.Friends tell their friends to choose open, federated protocols. Like @Matrixdotorg and @RiotChat. https://t.co/gOUwFwCcra\u00e2\u0080\u0094 martin \u00e2\u009e\u00ac (@martinkrafft) May 21, 2019We are spending more and more time in @matrixdotorg. @RiotChat works like a charm, better than @SlackHQ for many things and of course way better than IRC. It's awesome to have so many open communities forming and being able to jump from one channel to the other. Give it a try! \u00f0\u009f\u0093\u00a2 pic.twitter.com/5uL1D4ryQo\u00e2\u0080\u0094 poliastro (@poliastro_py) March 5, 2019Thank you to our incredible sponsorsUpCloudMatrix.org is generously hosted by UpCloud! Host your homeserver via UpCloud and get a $25 credit.Learn moreDiscoverTry MatrixClientsBotsSDKsHostingGuidesGetting StartedClient-Server APIInstall\u00c2\u00a0SynapseBridgesAll guidesDevelop DocsSpecAPI\u00c2\u00a0PlaygroundCodeBlogAll PostsThis Week In MatrixSecuritySecurity RSSRSSMoreFAQsMatrix LiveSecurity Disclosure PolicySecurity Hall of FameCode of Conduct for Matrix.orgLegalContactSite SourceCopyright Notice",
    "links": [
        "/",
        "/discover/",
        "/docs/develop",
        "/foundation/",
        "/blog/posts",
        "/faq/",
        "/matrixlive/",
        "https://shop.matrix.org",
        "/docs/projects/try-matrix-now/",
        "/docs/guides/introduction",
        "#about",
        "/docs/spec",
        "https://github.com/matrix-org",
        "/foundation/",
        "/blog/2019/06/11/introducing-matrix-1-0-and-the-matrix-org-foundation",
        "/supporters",
        "https://liberapay.com/matrixdotorg",
        "https://donorbox.org/keep-matrix-exciting",
        "https://www.patreon.com/matrixdotorg",
        "/supporters",
        "/docs/spec/",
        "/sdks/",
        "/bridges/",
        "/docs/guides/",
        "https://gitlab.matrix.org/matrix-org/olm/blob/master/docs/olm.md",
        "https://gitlab.matrix.org/matrix-org/olm/blob/master/docs/megolm.md",
        "https://signal.org/docs/specifications/doubleratchet/",
        "https://gitlab.matrix.org/matrix-org/olm/blob/master/docs/",
        "https://gitlab.matrix.org/matrix-org/olm/",
        "/blog/2016/11/21/matrixs-olm-end-to-end-encryption-security-assessment-released-and-implemented-cross-platform-on-riot-at-last",
        "/docs/guides/end-to-end-encryption-implementation-guide",
        "/blog/2018/02/05/3-d-video-calling-with-matrix-webrtc-and-webvr-at-fosdem-2018/",
        "https://github.com/matrix-org/matrix-appservice-bridge/blob/master/HOWTO.md",
        "/bridges/",
        "/blog/2019/03/12/breaking-the-100-bps-barrier-with-matrix-meshsim-coap-proxy",
        "/blog/2017/04/04/opening-up-cyberspace-with-matrix-and-webvr",
        "/docs/spec/client_server/latest.html#api-standards",
        "https://github.com/matrix-org/matrix-doc/blob/master/attic/drafts/websockets.rst",
        "/blog/2019/03/12/breaking-the-100-bps-barrier-with-matrix-meshsim-coap-proxy",
        "/docs/api",
        "/docs/spec",
        "/foundation/",
        "/blog/2023/04/28/this-week-in-matrix-2023-04-28",
        "/blog/2023/04/21/this-week-in-matrix-2023-04-21",
        "/blog/2023/04/14/this-week-in-matrix-2023-04-14",
        "/blog/2023/04/10/this-week-in-matrix-2023-04-10",
        "/blog/posts",
        "/docs/projects/try-matrix-now",
        "/clients-matrix/",
        "/docs/projects/bots",
        "/sdks/",
        "/hosting/",
        "https://github.com/poljar/matrix-nio",
        "https://github.com/matrix-org/matrix-js-sdk",
        "https://github.com/matrix-org/matrix-android-sdk",
        "https://github.com/matrix-org/matrix-ios-sdk",
        "/sdks/",
        "https://github.com/matrix-org/",
        "/foundation/",
        "/foundation/",
        "https://t.co/nJY4iNHaLQ",
        "https://twitter.com/migueldeicaza/status/1093148021980889088?ref_src=twsrc%5Etfw",
        "https://twitter.com/RiotChat?ref_src=twsrc%5Etfw",
        "https://twitter.com/matrixdotorg?ref_src=twsrc%5Etfw",
        "https://t.co/7zxczdjwwJ",
        "https://twitter.com/lrvick/status/1051260991479013376?ref_src=twsrc%5Etfw",
        "https://twitter.com/matrixdotorg?ref_src=twsrc%5Etfw",
        "https://twitter.com/RiotChat?ref_src=twsrc%5Etfw",
        "https://t.co/gOUwFwCcra",
        "https://twitter.com/martinkrafft/status/1130695713057148928?ref_src=twsrc%5Etfw",
        "https://twitter.com/matrixdotorg?ref_src=twsrc%5Etfw",
        "https://twitter.com/RiotChat?ref_src=twsrc%5Etfw",
        "https://twitter.com/SlackHQ?ref_src=twsrc%5Etfw",
        "https://t.co/5uL1D4ryQo",
        "https://twitter.com/poliastro_py/status/1102912894260469760?ref_src=twsrc%5Etfw",
        "https://upcloud.com/",
        "/docs/projects/try-matrix-now",
        "/docs/projects/try-matrix-now",
        "/clients/",
        "/docs/projects/bots",
        "/sdks/",
        "/hosting/",
        "/docs/guides",
        "/docs/guides/getting-involved",
        "/docs/guides",
        "/docs/guides/installing-synapse",
        "/docs/guides/types-of-bridging",
        "/docs/guides",
        "/docs/develop",
        "/docs/spec",
        "/docs/api/",
        "https://matrix.org/code",
        "/blog",
        "/blog/archive",
        "/blog/category/this-week-in-matrix",
        "/blog/category/security",
        "/blog/category/security/feed",
        "/blog/feed",
        "/",
        "/faq/",
        "/matrixlive/",
        "/security-disclosure-policy/",
        "/hall-of-fame/",
        "/legal/code-of-conduct/",
        "/legal/",
        "/contact/",
        "https://github.com/matrix-org/matrix.org/",
        "/code",
        "https://gitlab.matrix.org/",
        "https://www.youtube.com/channel/UCVFkW-chclhuyYRbmmfwt6w",
        "https://twitter.com/matrixdotorg",
        "https://mastodon.matrix.org/@matrix",
        "/legal/copyright-notice"
    ]
}