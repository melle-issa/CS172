{
    "title": "Tooling: Using Create-Block Scaffolding and 3rd Party Templates - Gutenberg Times",
    "body": "\nSkip to the content\n\n\n\n\n\n\n\n\nMenu\nClose\n\n\n\n\n\n\n\n\n\n\nClose\n\n\n\n\n\nHome\nNews\nPodcast: Gutenberg Changelog\nLive Q & A Archive\nTestimonials\nAbout UsShow sub menu\n\nContact Us\nSponsors\n\n\n\n\n\nSearch For\u2026\n\n\nSearch\n \n\n\n\n\nTwitter\nYouTube\nmastodon\n\n\n\n\n\n\n\n\nGutenberg Times\nCurating news and community voices about the WordPress Block Editor, codenamed Gutenberg\n\n\nTwitter\nYouTube\nmastodon\n\n\nSearch\n \n\nMenu\n\n\n\n\n\n\n\n\n\n\n\nSearch For\u2026\n \nSearch\n\n\nClose\n\n \n\n\n\n\n\n\n\n\n\nTooling: Using Create-Block Scaffolding and 3rd Party Templates\n\n\n\n \n\n\n\n\nOn May 21, Greg Ziolkowski and Fabian K\u00e4gy demonstrated in this Live Q & A on YouTube how to use create-block tool that comes with Gutenberg plugin and how to custom templates for creating blocks and share them on npm. \n\n\n\nYou can reach Greg in WP Slack and on Twitter @gziolo and Fabian on Slack and Twitter @fabiankaegy\nResources \nDiscussion: Next Steps for Block Creation DocumentationGitHub PR: Create block: Add support for external templates hosted on npm Experimental npm package from demoWordPress/Gutenberg ExamplesWordPress Script at npm74 WordPress packages at npm\nTranscript\nSponsored by Pauli Systems\nBirgit Pauli-Haack: So, hi there! We are here on the Gutenberg Live channel, and have with us Greg Ziolkowski and Fabian K\u00e4gy and both will show us how the future vision of the Create-Block scaffolding tool, that comes with Gutenberg, and Fabian is going to show us also how to extend it and make it your own to have more productive block development. So, I\u2019ll take myself out of it and I\u2019ll turn it over to Greg!\nGreg Ziolkowski: Okay, let me share my screen first. I just want to show some background, present some background on what we are trying to do here. We are aware that everyone\u2019s trying to create their own blocks, and so far, it was quite hard to do it because of all the requirements like using JavaScript tuning around that and everything else. So, we started this process a long time ago because we use a very advanced JavaScript tool inside Gutenberg Project, but we figured out that it would be great if you could share that with the community. This is how we created npm packages.\nWordPress on npm: Create-Block and WordPress Scripts\nIf you go to npm and find there is an organization called WordPress, and there are as of today 73 packages. There are two of them that we want to cover today. The most important one is Create-Block as you can see on this demonstration. It\u2019s just a way to create your block with one line of code. There are a few ways of doing that and at the moment it supports two code templates, so it\u2019s like the way in how the block will look like after the scaffolding ends. One of them is using ES5, which is the standard of JavaScript that is very old, it\u2019s 10 years, and it\u2019s also something that WordPress developers in the past used for jQuery, so we wanted to bridge that and provide this template.\u00a0 However, we will focus today on ESNext and JSX based template that is contained, so they build tools, linters, formatters, stuff like this.\nBehind the scenes, this solution, the second one I mentioned, it contains also another package which is called WordPress Script. WordPress Script it\u2019s a collection of different scripts as outlined in here for working with JavaScript, CSS, there is unit testing, end-to-end tests, and so on and so on. It\u2019s not that important here. The idea is that once you run the script block, it creates an environment that is ready to work. So, you don\u2019t have to worry about finding what tool you need to you use, what kind of language features you want to use. Everything is ready for use.\u00a0\nFirst magical Steps\nMaybe let me show an example how that could work. So let\u2019s say, I\u2019m running npm init @wordpress/block and this is, something happens, code is downloaded from npm, which is registered for packages and then you have CLI prompt that asks you to customize your block. So, this is a way to make it simple for everyone to create their first block, but also at first it allows you to change some default settings to avoid the stretch when you have to go through the code and do a search and replace, techniques and stuff like this. So, let\u2019s say we can create, we can provide\u2026it\u2019s not that important what kind of things we are providing here. The whole idea is that those are things if you ever build a block, you should be familiar with that. So, this is something that allows you to create your block like category, title, description. It\u2019s everything that\u2019s visible in the UI.\u00a0\nThere is also this part related to the client. So, Birgit mentioned to me once that it would be cool if this block here that they could be also a plugin at the same time, so we have this supported now. So, we could provide everything that you require if you want to publish your blogging to the WordPress repository. So, license and the version.\u00a0\nOnce that starts, then there is the process in between. So, the folder is scaffolded and also, what\u2019s important here, the dependencies for the  core scripts are behind the scene installed for you. So, this will end in half a minute or something like that and you will have everything that is ready to work with. What we are trying to do now is, Fabian, he proposed this approach that rather than using only those recommended templates for how block definition will look like, we want to allow also third-party packages, hosted on npm that would allow you to create, be customized experience.\nBlock Directory\nHowever, we want to have this baseline. I think you could see now how the CLI looks like, how it works, that should be quite close at least for now. However, using all the values that users entered during this process, we can provide quite a nice experience. Also, I want to highlight this effort that Anne recently posted in this issue on GitHub in the Gutenberg repository, so that the whole point from my perspective that we are trying to do is to make the first step magical. So, we envision the future when there is also this huge project blog directory that allows to install blocks directly from the inserter. So, rather than going to the plugin repository and starting your plugin as before, you would just type inside the inserter and the QRQ type doesn\u2019t have any matches inside your editor, then it will just go to the new block directory which is specific for blogs that are JavaScript based, initial approach and with that, you would be able to install your block.\nSo we want to bridge that, that tool concept at some point. So we want to have this component so that you could quickly craft your own block, publish it to this block repository and the end user could install it while working. It\u2019s like, there are a few things that we want to converge into one coherent experience. To make this step magical, we also want to simplify the way you manage, you use documentation for WordPress. So today, if you go to developer.wordpress.org docs, no, there is this. There is this handbook and if you go to \u201cTutorials\u201d and go to \u201cBlocks\u201d, you see that there are lots of examples that you need to copy over. There is a way to make it simpler by copying from the Gutenberg examples repository that we also maintain, so you have those examples in here.\nThe transcript is still work in progress. Pardon the dust.   (bph 6/20/)\nThe idea is that thanks to what Fabian is working on, we would be able to add in copy just around the same comment by putting the name of the template, like this, so let\u2019s say at the moment we support also ES5. So we will just create something different so ES5 has also different defaults and things like that. So, now let me maybe show what I just created. So ES5, for example, you see right now it contains only five files and it\u2019s pretty basic. He\u2019s using ES5 in here. If I would open another scaffolded project, what was the name, demo today. It\u2019s much more complex. It contains several things that were created behind the scenes like back end JSON file and there is a source folder, because we are using ES Next we can use ES model so you can split files into smaller chunks and things like this.\u00a0\nSo, the idea is that instead of going to this Gutenberg examples and going in here, downloading material or cloning this repository and copying it over to your WordPress installation, you could just go and run this one line and that would drive you through the whole process and allow you to make this blog. So once that\u2019s ready, then you can just go to your WordPress and activate this plugin and it\u2019s ready to work. And also, because this is ES5, so when I open the terminal and I run MPM start, it will just start all the building and once you start the development process, behind the scenes everything is covered for you. So you can see right now, if I would go here and say import, and bring the _______________ when I save it, it triggers refresh. So every time I change something here, maybe let me show it this way because it\u2019s quite fast. It rebuilds.\u00a0\nSo, those are tools that are included in this set up and that\u2019s something that\u2019s quite exciting. Fabian, can you explain what was the whole idea from your side to get into this idea with hosted on MPM?\nFabian K\u00e4gy: Sure. So, what I think in order for me to appear on screen, you need to stop sharing for a second. Yeah, this seems to work, cool. The problem in mind was that there are these two templates that you can start with the ES Next or ES5 template, but several times when you\u2019re working in a company, when you\u2019re building multiple plugins, they\u2019re just different approaches, just different ways that you like to structure your code, different things, like for example, the new way that the block repository has different ways to structure the actual plugin, then for example a normal Gutenberg plugin. It would be cool to make that a bit easier to just have anybody be able to contribute a template and then being able to use the same scaffolding tool that\u2019s already there to use your template or use the template that somebody else created and go from there. Just have a magical experience with your own template or with the template that somebody else built.\u00a0\nGreg Ziolkowski: Yeah, that\u2019s cool. So I guess I covered all that we wanted. So just to recap. Our goal is when you go to this tutorial inside the block editor handbook, the first thing you would have is just this comment, that one line comment that we provide a template name the same way as I did it for ES5. So, that would be that. So calling this template name, so for every step you would have a different template provided and this way, someone who wants to build a blog, they could just start and go run all those comments and build up on that their own experience, or just go the last step and just build the most complex and start from this stage to building their own code. Oh, I\u2019m not sharing the screen so you can\u2019t see that.\u00a0\nAnyway, I think that could be much more powerful rather than copying over code from those tutorials. There are often mistakes that people catch after time, but I\u2019m sure that some people they don\u2019t have this opportunity to go to the Gutenberg repository and find an issue of all the PR, so that\u2019s why we want to make it much easier. So maybe now, should I do some tour of our code? Fabian maybe you could do that because you are new to it, but that would show us the experience that someone could have if they would like to contribute to this because we see this opportunity to bring more people to get interested in improving those tools that we have already.\nFabian K\u00e4gy: Sure. So, should we just take one of the Gutenberg examples? Just pick one out and try to make that a new template for it?\nGreg Ziolkowski: Yeah.\nFabian K\u00e4gy: Then once we build that in just the template folder inside what\u2019s currently there, we can take a look at the PR they created and show how it will work once that is merged.\nGreg Ziolkowski: Yeah, we could also start with the higher level thing. How the packages, where you can find the package, how it\u2019s structured, so also those extension points because what you are describing now is something that would be external. Today we will just show how you can build inside the project, your own template. However, it will be as simple as breaking out those folders that you will create and publishing it to MPM with some additional meta data.\nFabian K\u00e4gy: Sure. Then let me share my screen. There. So, I have cloned the full Gutenberg repository. Let me start by just, if I got to GitHub and search for WordPress Gutenberg, I can find the actual Gutenberg repository where all the development happens and the different packages like the Create-Block package that we\u2019re working on today, are all inside the packages folder. There\u2019s, like you showed earlier, loads of them that are published to MPM.\u00a0 They are all the sources coming from within this packages folder. I have cloned this whole repository onto my local machine and I\u2019m just opening that up.\nGreg Ziolkowski: Could you show this button, clone or download, so people know how to do it?\nFabian K\u00e4gy: Sure. Just on the top right here, you have the opportunity to clone or download and if there are, you can either use the actual command to do it in your terminal, or there is a tool that\u2019s maintained from GitHub desktop that when you click the Open on Desktop button, it clones it that way as well.\u00a0\nGreg Ziolkowski: Yeah, I think there, you also are using a fork, so there is on the top right this fork button that you need to click if you want to do something. It might be even more automated in the States, I don\u2019t remember.\u00a0\u00a0\nFabian K\u00e4gy: When you click on the fork button, you\u2019ve seen that I\u2019ve already created a fork. You can basically select one of your organizations or your private account and create a fork, and then it creates a copy of the repository and then you can work on your local copy, and when you then are happy with the changes that you\u2019ve made, you can submit a pull request, but we can look at that later.\u00a0\nCool. So with that cloned I can open it up and again, I have the same folder structure that you can see on MPM where at the packages folder with all of the different packages in here. Greg, do you want to walk through any others, or should we just jump into\u2026?\nGreg Ziolkowski: I don\u2019t think it\u2019s relevant at this stage. Of course, the other thing that I showed you on MPM website, there is 73 packages so all of them are in this same folder. So, maybe not all of them because some of them are private.\nFabian K\u00e4gy: Cool. Yeah.\u00a0\nGreg Ziolkowski: It makes it easier to discover if you want just to contribute to the one of the packages you are using. You will go to this folder and you will quickly based on the name, find it in this folder.\nFabian K\u00e4gy: And when you\u2019re only working, yep, what I sometimes like to do because it sometimes feels a little bit overwhelming when you have so much stuff going on here, so in some of the packages I just navigate to it in my finder, just open up for example the great block, just open that up directly and then I have only the files that I\u2019m looking at. When I want to actually commit something, I can go back and do stuff in the actual Gutenberg repository, but for now I just have the files open that we are actually working on. So this is the actual Create-Block package that Greg showed earlier. This is where the magic is happening and you can see there is a templates folder inside of here that has the two templates that Greg showed. There is the ES5 one and then there\u2019s ES Next one.\u00a0\nWhen I look into these folders, they\u2019re these dot mustache files. So for each file that gets created, that gets scaffolded out, there is this mustache file that already has everything that we\u2019ve seen earlier in it. Just with the addition of some of just some variables. So, basically under the hood, it\u2019s taking these files, replacing the variables with whatever you put into the prompt that you\u2019ll get asked and then removing the dot mustache at the end and creating the scaffold plugin for you. With that, the idea is to add another template to it and then that can be used that way.\u00a0\nGreg Ziolkowski: So just to recap or remind what I said earlier. We will want to provide a few more templates that would align with the tutorials that we will have, we will update for block creation. So then we be step one, step two, step three and so on to make it all easier. So they will be quite similar, but they will build up on each other this way.\u00a0\nFabian K\u00e4gy: Cool. Do you have a preference of which of the Gutenberg samples we should take? Or should we just start from the beginning to convert one of those?\nGreg Ziolkowski: We can just copy ES Next and just go to the basic one and you just probably have to remove some code at first, that will be much easier to follow.\nFabian K\u00e4gy: Sure.\u00a0\nGreg Ziolkowski: You have to find the Gutenberg example. Once you are looking for that, I just wanted to say that the choice for mustache, that wasn\u2019t made based on my previous contribution to WPCLI. That also has a very basic support for creating blocks. It creates the ES5 version. So it\u2019s nearly the same as the one that you can find in this templates folder and the one I showed you also when I ran the comment. So WPCLI has a lot of history, so I\u2019m sure that choice is the right one. I didn\u2019t want to brag that, because although this tool, those tools are Java Script based, they use the note JS and WPCLI is PHP based, however, those libraries are universal and work across. Also, that could be a way for, in the future, if WPCLI would like to align in some way, they could just take all those templates and use inside their project as well.\nFabian K\u00e4gy: Sure. Then, one more thing about the structure. We have the templates folder where just the different template files are located and then we also have this templates.js file where the preview finds block templates, the ones that ship with the Create-Block package, they have some options, default values. They have an option whether WP Script is enabled or disabled and by default it is enabled. We will also need to add our new example to that list for now, until it will be possible to pull it from external link. Cool. Greg do you want to?\nGreg Ziolkowski: Yeah, you also could scroll down in this file because there is a larger list of values that we probably will have to modify. So in here, those are the defaults for every template that would be ever created. But, the idea is that every template can override the defaults, so this is the value that is presented when you are using\u2026when the prompt shows up on the screen. What was your question?\nFabian K\u00e4gy: I wanted to ask whether you wanted to start with just duplicating the ES Next, or just start by copying over?\nGreg Ziolkowski: If I would have to create another template, I would probably do that this way.\nFabian K\u00e4gy: Cool.\nGreg Ziolkowski: The same as when someone starts their journey with blocks, they will probably use one of the scaffolded blocks then try to tweak some values just to see what happens. So that could be in your experience.\nFabian K\u00e4gy: Then we will just\u2026.\nGreg Ziolkowski: You can copy and paste.\nFabian K\u00e4gy: Just paste it and rename it into the, what should we call it for this?\nGreg Ziolkowski: You can use the same name. It doesn\u2019t matter.\u00a0\nFabian K\u00e4gy: Basic ES Next. Cool. Then I will just open this on the side so we can just copy our stuff over. Sure. So, I have this open on the side. And we can probably, the editor config we can ignore. Those two are the same.\u00a0\nGreg Ziolkowski: So let me explain. This editor config is a special file. It\u2019s copied from the WordPress repository. It\u2019s just the setup for the IDs, just to make sure that all the files are formatted in the same way. GitIgnore is for usage with Git. It ensures that some of the most popular folders aren\u2019t comment like node modules which we don\u2019t want to store in the repository because it sometimes takes hundreds of megabytes. What else do we have? We have CSS, PHP and JS, Java Script five and also there is Read Me text, which is also, it\u2019s something based on some recommendation from the WordPress documentation.\u00a0Fabian K\u00e4gy: Sure. Awesome. I think we can leave the editor config, the GitIgnore and these cells, we might have to look whether there are cells in there, but leave them for now. Same for the Read Me and I don\u2019t think there is anything we need to change in the PHP file as well, is there?\nGreg Ziolkowski: Depends. Because I think BASIC doesn\u2019t contain CSS tags. So then you have to remove some. Just need to open that and we will see.\nFabian K\u00e4gy: Cool. Yeah, over here it doesn\u2019t look like there are any CSS files. So we can go in here and where we registered the script and then registering the CSS, and I\u2019m just taking those out for now and seeing what the block style and block editor style, so we can remove that and just have the registered block type function and cue the editor script. Then I can also delete the two files from here. Then we can go into the actual source folder and in here, there is currently only one file. Should we split, yeah we can also move the edit and save files from our copied folder and just put everything to one file. Or do you want us to split it up?\nGreg Ziolkowski: Oh, yeah, you can do it. It\u2019s up to you.\nFabian K\u00e4gy: Cool.\u00a0\nGreg Ziolkowski: For the initial experience, that might be easier to not bother with importing files.\u00a0\nFabian K\u00e4gy: Sounds right. We are importing the same two dependencies, register block type and then the underscore, underscore for initialization. We can read the comments for that. We don\u2019t need internal dependencies since we\u2019re only doing it in one file. Yeah, we can leave the name space and the slug for currently\u2026we will just change the icon in the default values in a minute when we register it. So, I think the only thing we need to really change here is the actual set and save.\nGreg Ziolkowski: Yeah, and also we don\u2019t need support in here.\u00a0\nFabian K\u00e4gy: Correct. Move that.\u00a0\nGreg Ziolkowski: I mean, I would argue we need it, but that\u2019s not so important.\u00a0\nFabian K\u00e4gy: Then we can just basically copy over into our edit block and put it in here. And the same goes for the save slot. Put that in and with the block style it\u2019s used that, again that would also need to be added to the top and then we can add another comment just to let everyone know what\u2019s happening.\u00a0\nGreg Ziolkowski: It seems like a lot of repetition to have all those comments, however, depending on the stage people who would start, etc., I think it\u2019s still valuable to have those in line things that you can always disable. Also, we might provide the flag for the CLI tool just to disable all comments if someone doesn\u2019t want to have them. Something to think about for the future.\u00a0\nFabian K\u00e4gy: That sounds like a good idea. Cool. So I\u2019ve added the block styles and the change the edit and save method. And I think that\u2019s everything we need to change in here. The only thing we need to add now is add it to the templates JAS file and add the default values up top there. Then we can give it a try whether it works.\u00a0\nGreg Ziolkowski: Looks like a super simple task to do.\u00a0\nFabian K\u00e4gy: First problem, we had hyphen in, or, just sorry, dash in our name and would that be supported?\nGreg Ziolkowski: No. No.\nFabian K\u00e4gy: We need to\u2026.\nGreg Ziolkowski: You will have just to rapid test, like a string. You don\u2019t have to rename it.\u00a0\nFabian K\u00e4gy: Okay. So this, will the scaffolding find the\u2026.\nGreg Ziolkowski: No, no. What you need to do here is, you just need to use string like rapid.\nFabian K\u00e4gy: But can we do that inside the object?\nGreg Ziolkowski: Yes.\u00a0\nFabian K\u00e4gy: Okay. Yeah, then. My mistake.\nGreg Ziolkowski: No worries.\nFabian K\u00e4gy: BASIC ES Next and here. And we currently don\u2019t have, we can copy over the icon. I think when I will check\u2026these are again, all the available options and it\u2019s named dash icon. So, we will also provide the default for that. And the default category will be laid out. That is that category. Besides that, I think we can leave the rest as is.\u00a0\nGreg Ziolkowski: I guess so.\nFabian K\u00e4gy: Actually give it a try. So I\u2019ve just opened up the terminal and in order, because I\u2019m not pulling the tool from MPM, I\u2019m just testing it out locally, so what I want to do is, I want to run this index.js file using node or do you have a better way of testing it locally?\nGreg Ziolkowski: So there are a few ways to do that. One of them is using NPX which is a way to execute binaries from the node model folder. So there is a binary defined for this file that is called wp-create-block. You can just go and run NPX wp-create-block.\nFabian K\u00e4gy: SWP or just wp?\nGreg Ziolkowski: No, no, wp create, block. Create-block and you provide the name of the template.\nFabian K\u00e4gy: And that was ES Next. For me, it\u2019s trying to\u2026.\nGreg Ziolkowski: I know why. Because you are in the Create-Block sub-folder. So we just need to go up. So we tried to install it from MPM.\u00a0\nFabian K\u00e4gy: Yep. So now I\u2019ve changed my directory to actually the Gutenberg directory and just clear that, and now I\u2019m trying the same thing again. NPX wp-create-block and specifying the template. Let\u2019s see, so now that works. So now we can, yeah. It\u2019s giving us the default options that we put in. The default title. The description. It has the correct icon in here. The layout is the default category and we just go through here and then you will see that once it installs everything.\nGreg Ziolkowski: Should be somewhere up in the folder structure because you are now in Gutenberg.\u00a0\nFabian K\u00e4gy: Yes. Doesn\u2019t it place it within the same folder the Create-Block is? Or does it create it where it is happening?\nGreg Ziolkowski: No, no. It\u2019s from the folder you executed the command, which was the Gutenberg.\nFabian K\u00e4gy: Correct, yeah. Then let\u2019s go into the Gutenberg folder. There it is. The Basic ES Next. Open that as well. Even though it\u2019s still executing, something it is already here, but we should wait for this to finish running. Cool. So now you can see just the build folder also appeared and it has everything in here. When we open it up, you can see what we just did. It has the block styles in here. It has all of the scaffolded comments. I should also remove the comment here because it\u2019s not correct anymore. But, this is our scaffolded out.\nGreg Ziolkowski: Are you able to run that inside your WordPress by copying to the WordPress instance and trying if that actually works? That would be nice.\nFabian K\u00e4gy: Sure. Let me just quickly get the site up and running.\u00a0\nGreg Ziolkowski: So in the meantime, there was this comment from Jessica. \u201cI wonder if it would be good to set up some best practices for these templates that could be contributed, which might include that style should be set up in your block ID. So, especially continuing on that in the Gutenberg examples, it makes sense not to have them for aligning purposes, but for the scaffold it seems like a bit of a nuance.\u201dI totally agree. So we are just showing how that might work, in existing templates that we already have inside tutorials, but outside of tutorials this example is super simple. It\u2019s we removed more than we added. So the idea would be that we\u2019d rather provide more advanced examples. In those examples for tutorials, the example five or six that are quite advanced, and they seemed like a very good way to experiment with your own block template.\nAlso, I see that Fabian mentioned that some teams that work among blocks, they just want to have something more customized, like having their own sub-name for sub-folders, they are maybe using different to link. Maybe they are not using Git or they just rely on SVN as a default approach and there might be some integration with some people, I know they are using GitHub work flows so once they commit to GitHub it just deploys the code somewhere. There are many things that people might find useful, but the default one is something that would be always optimized towards the best experience for someone who wants to create a block.\nSo I envision that once the block directory is up live, with WordPress 5.5, I hope it happens, then the example, the default one, when you don\u2019t specify any template name at all, it would be something that creates a block that you just scoot into, publish right away to the block directory. How is it going in the meantime?\nFabian K\u00e4gy: I just started, created a new local site and I\u2019m just, I copied the folder over and it\u2019s in here. I\u2019ll just spin up the site here real quick. Now just start a new site here. Just to scrap a WordPress site. Example, I\u2019m just adding into our plugins folder.\nGreg Ziolkowski: Another way of doing that would be, you just could go, once that tool is published to MPM, another way for usage if you want to consume that is that you go to the same folder as Fabian is going now, and just run this comment inside this folder. Just another idea I have is that maybe we could have a way to specify paths, just to make it easier for people. So they don\u2019t need to go directly to the folder.\u00a0\nFabian K\u00e4gy: Or if the Create-Block thing, scaffold is used when you\u2019re working on just an actual block plugin that doesn\u2019t need to be integrated into a site right away, you could use the dev environment that\u2019s included in the WP scripts.Greg Ziolkowski: Yeah. This is what I\u2019ve been doing when I\u2019m playing around. So there is another package called N??___ and it has this binary name, WP-N. It just helps you to use Docker and all the already auto developed provided instance in WordPress that is tailored specifically to implement, to the development of blocks or plugins that are based on Java Script.\nFabian K\u00e4gy: Cool. So I have, inside the plugins folder here, I have the BASIC next example. I\u2019ve just activated that and want to create a new block. Should be able to Basic ES Next, and I can insert this and it shows me hello step one from the editor and when I want to publish that site, see from the front end, this is what we set up. There is no interactivity, just the Basic ES Next example from the Gutenberg examples that we just ported over to one of the templates.\u00a0\nGreg Ziolkowski: Great job. You did it. So now, you know, having that tool, that should really make it much simpler for people. I think that it would be valuable to show one day also a seminar, do a seminar stream and show how to do the WPF you mentioned, because if you combine those two, then it\u2019s really powerful. It makes everything so much easier.\u00a0\nFabian K\u00e4gy: Yep. That\u2019s also something with the external templates, you could just, in the package or also with the internal templates, just in different templates you could have a WPN already set up in one of the templates that, or you just have everything already inside of the one template, and use that to start with. Depends on what you want your projects to be.\nGreg Ziolkowski: So you are saying that this WPN allows you to specify multiple plugins? In the configuration you can provide multiple paths to plugins?\nFabian K\u00e4gy: What I meant was that currently in the ES Next template for the Create-Block, all of the WPN isn\u2019t configured, but for the WPN as part of the WordPress Scripts isn\u2019t configured, but one of templates could of course just configure that and add that to it.\u00a0\nGreg Ziolkowski: Yeah, actually that one is something I would consider as one of the options that is, will be behind the flag, an advanced one. So someone wants to use it, that could be, but because many people, I believe they have their own tools that allow them to develop with WordPress or even test with WordPress, like Flywheel or whatever, there are so many tools.\nFabian K\u00e4gy: Yeah.\nGreg Ziolkowski: So it all depends on your use case. So maybe now you could present your proof of concept for the same thing, but working for something that\u2019s external. Like a remark from start, in the meantime while you are working, I just provided some changes to the code base just to make it easier to integrate that, so they way how it\u2019s structured it differs a bit, however, the whole idea just as the most important thing that we have here. If you could continue.\nFabian K\u00e4gy: Sure. I\u2019m sharing my screen again. Then, I\u2019ve just switched to the branch that I\u2019ve been working on and let me clean up.\nGreg Ziolkowski: Yes, I guess that is the easiest way.\u00a0\nFabian K\u00e4gy: Then I can go from here. Again, I\u2019m just opening up the actual Gutenberg development folder and the actual Create-Block folder in my code editor and here, I need to close down the terminal.\u00a0\nGreg Ziolkowski: While you are doing that, there was another question from Jessica. \u201cSo, if you want to continue with templates through the Create-Block products, should we push them to MPM or to the templates folder in Create-Block?\u201d Yeah, we haven\u2019t settled on that yet. So it\u2019s still in discussion. In the issue I also posted in the chat on YouTube. It\u2019s hard to tell probably we will start with having them locally. Because they don\u2019t take so much space so that shouldn\u2019t be a constraint in terms of the amount of download size you would have for the package, but that would make that easier. However, I anticipate that we would move that to separate packages on MPM. Ones that work on the feature that Fabian will show soon will be done. So, definitely for now, for providing, I mean, just to be clear. The whole concept is to have as little template as possible inside the Create-Block package. So the ES Next and ES Five that would be probably in the\u2026that\u2019s what we need to support and the tutorials, they would exist outside of that.\u00a0\nAlso, third party, that should be, that I think is something for MPM. Also, just to explain that, that once we discuss with Fabian how it could be implemented, we were looking at Create React Up because they also support templates and what they do, they also have this way of providing local paths. So we could have copy templates from someone, put it inside your folder on the disk and just whoever has that. That would be another way of doing so. It\u2019s something that we should definitely discuss and find the best solution. Okay, sorry Fabian, you can continue.\u00a0\nFabian K\u00e4gy: No problem. So what I did to be able to actually test this out, I just took the ES Next example that is currently located in the templates and folder and pulled it out into its own folder and its own project. As you can see, it has the source folders, it has the editor config like earlier. We can ignore all of the files. In addition to that, it also has three files that are not mustache files. It has a package JSON in order for me to be able to publish it to MPM. It has a Read Me file just to give some basic information, and it has the most important thing here, a template.json file where again we are specifying the default values the same way that we did in the templates folder earlier. With this, I\u2019ve added the default, I can category those things. Then, I just published this to MPM. So this Basic ES Next example currently is available on MPM under the name Gutenberg-ESNext-Example.\u00a0\nThis is just to test out the scaffolding tool. So when I copy over that file and, or that name, and again open up my terminal and clear that and run the create-block command again, but instead of passing it the local template name of one of the local templates, so I could either have ES Five or ES Next for local ones, I\u2019m passing it the name of the MPM repository and with this, it will, I\u2019m still in the same folder. Let\u2019s also add the my block, that was, I added that before the flag, also specifying the name in here. This should, yeah, it\u2019s creating the new block. It\u2019s basically doing the same exact process then what we saw earlier, but while installing packages and while doing all of this, it is not pulling from these two, it is actually downloading the package from MPM and using that to scaffold it out, and I\u2019m opening up the finder again just to go to the correct folder because it should show up here under the name my block in a minute. It\u2019s already here, but it\u2019s still pulling stuff down.\u00a0\nSo, for you, it doesn\u2019t really look, or for any of us, it doesn\u2019t really look much different, but these files were not coming from the templates folder, they were actually pulled from MPM.\u00a0\nGreg Ziolkowski: Yeah, what could help is, just you can show change something inside your repository comment it, publish to MPM and just try the process again just to show that it\u2019s coming from there. It shouldn\u2019t be that hard to do it right?\nFabian K\u00e4gy: Yeah.\nGreg Ziolkowski: But it also would be great to show the process for publishing to MPM. So one thing that you need to go to MPM.org and create an account there. It\u2019s for free. Once you have that, you need to probably do MPM log in just to provide your credentials. Is there anything else required?\nFabian K\u00e4gy: I think when you, inside of the folder where you want to publish it, when you run MPM published, it will prompt you to log in to do everything that you need. So you can just open up the folder and then it will prompt you for everything to get you up and running.\u00a0\nGreg Ziolkowski: Yeah, you are right. Also, there is this MPM who I am comment, which allow you to check whether you are logged in or out.\nFabian K\u00e4gy: Cool. So I will just, to quickly have something here, add the comment at the top of the file saying I was here.\u00a0\nGreg Ziolkowski: Yeah. So what\u2019s the URL? What\u2019s the name of the package? Gutenberg.\nFabian K\u00e4gy: It\u2019s Gutenberg ES Next example, template, correct. I\u2019m just adding, I was here and then I\u2019m running MPM version minor just to bump the version number up and then I\u2019m running MPM publish. It will ask me for one time passwords. So just quickly grab that. That should be, that. Now it\u2019s uploading into MPM and on the website you should be able to see that version number, well it was still 0.3.0, it should now be 0.4.0, and when I run the same exact command again, it will take a minute again and let\u2019s hope that it\u2019s not cached anywhere in between.\nGreg Ziolkowski: Yeah, sometimes it takes a few minutes. Sometimes even a few hours. So, it depends.\nFabian K\u00e4gy: Let\u2019s see. Under my block, I can already open that up and it\u2019s already in there. So it already ruled the correct version. This is using the other version from MPM. This is pretty cool. It\u2019s just downloading the external package like this. Cool. Did you share the link of the actual request for that so that people can try it?\nGreg Ziolkowski: I was just finding, it looks like Birgit needs to do all the URL sharing because of some security reasons. Okay, I\u2019ll find that. I\u2019m really excited about that because as you can see, it\u2019s quite easy to build your own template and also is that it\u2019s maybe not so straightforward for testing, however, if you will do this trick, that you will use Create-Block and develop the template inside there and copy over there, that would be much simpler. Also, I believe that once you have some sort of packages, you could just install it inside your node modules folder and just edit it directly. There are some people that use that. There are even tools that allow that but I don\u2019t know the names, so I won\u2019t share them. And the PR from Fabian.\u00a0\nI think we will shortly wrap it up. I think we covered a lot today, and it\u2019s really exciting to see the progress on your PR and so, let me check again on YouTube. Thank you, Birgit, for posting the URL for the MPM package. And there is another question from Jessica, nice. \u201cCan you explain why you type in my block before the to name the folder instead of going into interactive mode?\u201d Do you want to take that Fabian?\nFabian K\u00e4gy: I wasn\u2019t sure whether the interactive modes left the template under or whether, the reasoning why I switched it up is because I wasn\u2019t sure whether the interactive mode had the template wired up yet or not. So it was just the current state of the development.\nGreg Ziolkowski: Yeah. Just to expand on that. By default, if you don\u2019t provide any parameters or options, then it launches interactive mode. That asked you about all the values and you need to enter them. However, there is also a way to provide the name of the folder that you want to scaffold, which also becomes the name of the plugin and the name of the blog. This way, you don\u2019t have to provide any values. It assumes that you are happy with the default. So this is also the way if someone is thinking that I have no idea what that means on the CLI, I just want to start away, that\u2019s the best way to do it. Then, once you discover I would like to change this particular thing, then you, okay this is a description or let\u2019s go and run that again and provide a different value.\nAlso, there are a few more options. Can you, Fabian, you are not sharing the screen. If you run, that\u2019s complex because the way node works, by default you install your bracket as using MPM install in the name of the package. If you want to use a package that can be run from CLI right away, that means it has an executable file defined, then you can use this MPX shortcut. It\u2019s something the same as you would write MPM east on my package and then do execute that binary. So it just combines it to one comment.\u00a0\nThe third one is MPM in it. So this is on top of those two ideas and just a shortcut of installing locally with MPM install then running MPX with create prefix. So it\u2019s just a nicer way. It also provides the intent that you are using that here. So, to continue on that, yes interactive mode should work with MPM test templates and without, I mean, general interactive mode and quick mode, they should work the same, regardless if you are using templates that are local or from MPM. There is no difference. I hope that clears a bit of the situation.\u00a0\nOkay. Are there any other questions? I see that Birgit, she is sharing more links. There is a bit of delay.\u00a0\nBirgit Pauli-Haack: Well, that was fabulous. I really like what you did there. Thank you so much. We are still entertaining some questions. So if you want to, I\u2019m also sharing some more links that I shared at the beginning, but now that you all know what those links are, I\u2019m sharing them again.\u00a0\nGreg Ziolkowski: Also, this PR from Fabian if someone wants to help to shape that and also play in the current state. We need definitely need to work more on the structure of the config file for the templates. So the one that Fabian shared, it\u2019s an old one and based on that I applied some changes. So one of them is that you will be able to provide the folder name, where those template files including mustache will be located. So by doing that, you don\u2019t need to specify all those largely. Some templates could provide 25, so it would counter-productive to list them all and so it just will scan the folder and find all of those.\nWe are also thinking about providing more general control over WordPress scripts so this is the tool that we are using behind the scenes to do the building, formatting of the files, linking. It\u2019s growing. So, but also what Fabian mentioned is that some projects, they have their own workflows. They might be needing to use something else. So they could define dependencies and install them. Everything is still being discussed and improved.\u00a0\nFabian K\u00e4gy: Very cool.\nBirgit Pauli-Haack: Super cool, yes. All right. I think that concludes it. Is there anything else that you wanted the people to know?\nGreg Ziolkowski: Just thank you, Birgit, for doing all the technical aspects. Because it was last minute. I don\u2019t even figure out you are doing it live. The screen sharing, it looks like a lot of work. It\u2019s hard to set up.\nBirgit Pauli-Haack: Yeah, but I like those pick up live streams. So, cue me up, you stall, I only needed about 10 minutes to set it up.\nGreg Ziolkowski: There\u2019s one more question, so maybe, \u201cWhat process should we follow when we want to contribute a template to avoid doubling up work and having people work on very similar block template?\u201d So we share this, we share PR, so we should coordinate there. I don\u2019t think there are other places where we can, discount that maybe in on WordPress Slack. It\u2019s hard to tell. So definitely you can reach out to me on WordPress Slack and I can help to find a good place. But I believe that there\u2019s discussion on next step for blog directories, very related to the work we are doing here. I know that Marcus on GitHub, he has some great ideas. He\u2019s willing to use his own tutorial for creating blogs, just like a baseline so we provide the to port all those templates he has there. Also, this is discussing the issue I mentioned.\u00a0\nBirgit Pauli-Haack: All right. Go ahead, sorry.\u00a0\nGreg Ziolkowski: I mean, just, thank you everyone for watching and for the great questions and especially to Fabian for showing around in the code.\nBirgit Pauli-Haack: All right. Great job everybody. Thank you. Bye-bye.\u00a0\nGreg Ziolkowski: Thank you, bye bye.\nFabian K\u00e4gy: Bye.\u00a0\nRelated Posts\n\n\n\nAll Women-release squad for 6.4 , Grid Layout , Pattern for front-page designs and more \u2013 Weekend edition #250\n\n\n\n\nOpenAI Block, WooCommerce 7.5, Patterns and Flexible Table Block \u2014Weekend Edition #247\nShare\n\n\n\n\n\n\t\t\t\t\t\t\t\tPublished June 20, 2020 \n\n\t\t\t\t\t\t\t\tBy Birgit Pauli-Haack \n\n\t\t\t\t\t\t\t\tPosted in For Developers, How-to, Live Q & As on YouTube, News \n\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\t\t\t\t\t\t\t\tVideos: WordCamp Santa Clarita: Block Editor and Gutenberg Talks #WCSCV April 2020\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n \n\n\n\n\t\t\t\t\t\t\t\tLive Q & A: Block-based Themes for Full-site editing feature in WordPress\t\t\t\t\t\t\t\n\n\n\n\n\n\n\n\n\n\n\n\u00a9 2023 Gutenberg Times\n\n\t\t\t\t\t\t\tTheme by Anders Nor\u00e9n \n\nTwitter\nYouTube\nmastodon\n\n\n\nBy using this website, you agree to our Privacy Policy\u00d7 \n\n\n\n\n\n\n\n\n\n",
    "links": [
        "#site-content",
        "#",
        "#",
        "/",
        "https://gutenbergtimes.com/news/",
        "/podcast",
        "https://gutenbergtimes.com/live-q-a-archive/",
        "https://gutenbergtimes.com/testimonials/",
        "https://gutenbergtimes.com/about-us/",
        "#",
        "https://gutenbergtimes.com/contact-us/",
        "https://gutenbergtimes.com/category/sponsors/",
        "http://twitter.com/gutenbergtimes",
        "https://www.youtube.com/channel/UCSD3LG2kSHdr7llRSHaylxw",
        "https://twit.social/@gutenbergtimes",
        "https://gutenbergtimes.com/",
        "http://twitter.com/gutenbergtimes",
        "https://www.youtube.com/channel/UCSD3LG2kSHdr7llRSHaylxw",
        "https://twit.social/@gutenbergtimes",
        "#",
        "#",
        "#",
        "https://twitter.com/gziolo",
        "https://twitter.com/fabiankaegy",
        "https://github.com/WordPress/gutenberg/pull/22175",
        "https://github.com/WordPress/gutenberg/pull/22175",
        "https://www.npmjs.com/package/gutenberg-esnext-template",
        "https://github.com/WordPress/gutenberg-examples/",
        "https://www.npmjs.com/package/@wordpress/scripts",
        "https://www.npmjs.com/org/wordpress",
        "https://www.paulisystems.net/",
        "https://www.npmjs.com/org/wordpress",
        "https://www.npmjs.com/package/@wordpress/create-block",
        "https://www.npmjs.com/package/@wordpress/scripts",
        "https://github.com/WordPress/gutenberg/pull/22175",
        "https://gutenbergtimes.com/block-directory-a-new-way-of-extending-wordpress/",
        "https://developer.wordpress.org/block-editor/",
        "https://developer.wordpress.org/block-editor/tutorials/block-tutorial/",
        "https://github.com/WordPress/gutenberg-examples/",
        "https://gutenbergtimes.com/all-women-release-squad-for-6-4-grid-layout-pattern-for-front-page-designs-and-more-weekend-edition-250/",
        "https://gutenbergtimes.com/all-women-release-squad-for-6-4-grid-layout-pattern-for-front-page-designs-and-more-weekend-edition-250/",
        "https://gutenbergtimes.com/openai-block-woocommerce-7-5-patterns-and-flexible-table-block-weekend-edition-247/",
        "https://gutenbergtimes.com/openai-block-woocommerce-7-5-patterns-and-flexible-table-block-weekend-edition-247/",
        "https://gutenbergtimes.com/tooling-using-create-block-scaffolding-and-3rd-party-templates/",
        "https://gutenbergtimes.com/author/admin/",
        "https://gutenbergtimes.com/category/for-developers/",
        "https://gutenbergtimes.com/category/how-to/",
        "https://gutenbergtimes.com/category/live-q-as-on-youtube/",
        "https://gutenbergtimes.com/category/news/",
        "https://gutenbergtimes.com/virtual-wordcamp-santa-clarita-block-editor-talks-wcscv-on-april-18th-2020/",
        "https://gutenbergtimes.com/live-q-a-block-based-themes-for-full-site-editing-feature-in-wordpress/",
        "https://gutenbergtimes.com",
        "https://www.andersnoren.se",
        "http://twitter.com/gutenbergtimes",
        "https://www.youtube.com/channel/UCSD3LG2kSHdr7llRSHaylxw",
        "https://twit.social/@gutenbergtimes",
        "https://gutenbergtimes.com/privacy-policy/"
    ]
}